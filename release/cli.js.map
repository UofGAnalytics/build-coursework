{"version":3,"file":"cli.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAmBA;AACA;AAEA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAEA;AACA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AAOA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;ACpzJA;AAOA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7CA;AAEA;AAgDA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AAEA;AACA;AAEA;AACA;AACA;AAUA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC9DA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC9CA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAMA;AACA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;ACvNA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AAGA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AAQA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5BA;AAEA;AACA;AAGA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;AC5GA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;AChpDA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;AC5CA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpUA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA;AAEA;AACA;;AAEA;AAAA;AAEA;AACA;AAKA;AACA;;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AC7KA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3BA;AAGA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;ACpCA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;ACvBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACzBA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChCA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9BA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnCA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AASA;AAAA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;ACxEA;AAIA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACjFA;AACA;AAKA;AAmBA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC5GA;AAGA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAIA;AAAA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;ACtNA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtJA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzHA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;ACzDA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAMA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;AC5BA;AAGA;AACA;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AASA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/HA;AAGA;AAGA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpJA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAeA;AACA;AACA;;;;;;;;;;;;;;;;;ACnDA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;AChGA;AAEA;AACA;AACA;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;AC7CA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACfA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;ACrEA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;AChGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChBA;AAIA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;;;;;;;;;;;;;;AC9EA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACtnIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnCA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;ACXA;AAEA;AACA;AAIA;AAEA;AACA;AAGA;AAIA;AACA;AACA;AACA;AAEA;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;ACRA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AClEA;AACA;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACxCA;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACzIA;AAEA;AAGA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACzDA;AAEA;AACA;AAEA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACdA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChBA;AAEA;AAEA;;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AAQA;AACA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAKA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AAEA;AACA;AACA;AAGA;;AAEA;AACA;AAAA;AAGA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9EA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;AEAA;AACA;AACA;AACA","sources":["webpack://compiler/./src/build-unit.ts","webpack://compiler/./src/cli/cli.ts","webpack://compiler/./src/code/alias-directive-to-code.ts","webpack://compiler/./src/code/code-to-alias-directive.ts","webpack://compiler/./src/context.ts","webpack://compiler/./src/course/index.ts","webpack://compiler/./src/course/load-course.ts","webpack://compiler/./src/course/load-unit.ts","webpack://compiler/./src/hast/index.ts","webpack://compiler/./src/hast/inline-files.ts","webpack://compiler/./src/hast/responsive-tables.ts","webpack://compiler/./src/html/index.ts","webpack://compiler/./src/html/pdf.ts","webpack://compiler/./src/html/wrapper/index.ts","webpack://compiler/./src/html/wrapper/main.ts","webpack://compiler/./src/html/wrapper/sidebar.ts","webpack://compiler/./src/html/wrapper/view-options/readability.ts","webpack://compiler/./src/html/wrapper/view-options/theme.ts","webpack://compiler/./src/html/wrapper/view-options/index.ts","webpack://compiler/./src/index.ts","webpack://compiler/./src/knitr/knitr.ts","webpack://compiler/./src/latex/directive-to-svg.ts","webpack://compiler/./src/latex/mathjax-tex.ts","webpack://compiler/./src/latex/tex-to-directive.ts","webpack://compiler/./src/linter/assert-asset-exists.ts","webpack://compiler/./src/linter/assert-columns.ts","webpack://compiler/./src/linter/assert-no-h1.ts","webpack://compiler/./src/linter/assert-no-image-attributes.ts","webpack://compiler/./src/linter/assert-no-tex-tabular.ts","webpack://compiler/./src/linter/assert-program-switcher.ts","webpack://compiler/./src/linter/assert-task-answer.ts","webpack://compiler/./src/linter/assert-video-attributes.ts","webpack://compiler/./src/linter/assert-weblink-target.ts","webpack://compiler/./src/linter/index.ts","webpack://compiler/./src/linter/lint-latex.ts","webpack://compiler/./src/linter/report.ts","webpack://compiler/./src/mdast/boxouts.ts","webpack://compiler/./src/mdast/browser-window.ts","webpack://compiler/./src/mdast/code-blocks.ts","webpack://compiler/./src/mdast/columns.ts","webpack://compiler/./src/mdast/combined.ts","webpack://compiler/./src/mdast/embed-asset-url.ts","webpack://compiler/./src/mdast/gitgraph.ts","webpack://compiler/./src/mdast/images.ts","webpack://compiler/./src/mdast/index.ts","webpack://compiler/./src/mdast/language-switcher.ts","webpack://compiler/./src/mdast/move-answers-to-end.ts","webpack://compiler/./src/mdast/pagebreaks.ts","webpack://compiler/./src/mdast/plot-accessibility-switcher.ts","webpack://compiler/./src/mdast/program-switcher.ts","webpack://compiler/./src/mdast/remove-empty-paragraphs.ts","webpack://compiler/./src/mdast/styled-terminal.ts","webpack://compiler/./src/mdast/text-file.ts","webpack://compiler/./src/mdast/youtube-videos.ts","webpack://compiler/./src/pdf/index.ts","webpack://compiler/./src/pre-parse/allow-no-whitespace-before-heading.ts","webpack://compiler/./src/pre-parse/convert-block-tex.ts","webpack://compiler/./src/pre-parse/convert-inline-tex.ts","webpack://compiler/./src/pre-parse/convert-macro-to-directive.ts","webpack://compiler/./src/pre-parse/index.ts","webpack://compiler/./src/pre-parse/reformat-pandoc-simple-tables.ts","webpack://compiler/./src/utils/cache-to-file.ts","webpack://compiler/./src/utils/check-for-latest-version.ts","webpack://compiler/./src/utils/counter.ts","webpack://compiler/./src/utils/get-asset-hast.ts","webpack://compiler/./src/utils/get-svg-hast.ts","webpack://compiler/./src/utils/icons.ts","webpack://compiler/./src/utils/message.ts","webpack://compiler/./src/utils/timer.ts","webpack://compiler/./src/utils/utils.ts","webpack://compiler/./assets/crest.svg","webpack://compiler/./assets/dag-logo.svg","webpack://compiler/./assets/hamburger-icon.svg","webpack://compiler/./assets/hexagons.svg","webpack://compiler/./assets/link-icon.svg","webpack://compiler/./assets/uofg.svg","webpack://compiler/external module \"@double-great/remark-lint-alt-text\"","webpack://compiler/external module \"@mapbox/remark-lint-link-text\"","webpack://compiler/external module \"ansicolor\"","webpack://compiler/external module \"base64-arraybuffer\"","webpack://compiler/external module \"chalk\"","webpack://compiler/external module \"figures\"","webpack://compiler/external module \"hash-sum\"","webpack://compiler/external module \"image-size\"","webpack://compiler/external module \"js-yaml\"","webpack://compiler/external module \"lodash/cloneDeep.js\"","webpack://compiler/external module \"lodash/kebabCase.js\"","webpack://compiler/external module \"lodash/startCase.js\"","webpack://compiler/external module \"markdown-table\"","webpack://compiler/external module \"mathjax-full/js/adaptors/liteAdaptor.js\"","webpack://compiler/external module \"mathjax-full/js/core/MathItem.js\"","webpack://compiler/external module \"mathjax-full/js/core/MmlTree/SerializedMmlVisitor.js\"","webpack://compiler/external module \"mathjax-full/js/handlers/html.js\"","webpack://compiler/external module \"mathjax-full/js/handlers/html/HTMLDocument.js\"","webpack://compiler/external module \"mathjax-full/js/input/mathml.js\"","webpack://compiler/external module \"mathjax-full/js/input/tex.js\"","webpack://compiler/external module \"mathjax-full/js/input/tex/AllPackages.js\"","webpack://compiler/external module \"mathjax-full/js/mathjax.js\"","webpack://compiler/external module \"mathjax-full/js/output/svg.js\"","webpack://compiler/external module \"mdast-util-to-hast\"","webpack://compiler/external module \"mdast-util-toc\"","webpack://compiler/external module \"mime\"","webpack://compiler/external module \"node-fetch\"","webpack://compiler/external module \"puppeteer\"","webpack://compiler/external module \"refractor/lib/all.js\"","webpack://compiler/external module \"rehype-autolink-headings\"","webpack://compiler/external module \"rehype-document\"","webpack://compiler/external module \"rehype-format\"","webpack://compiler/external module \"rehype-parse\"","webpack://compiler/external module \"rehype-raw\"","webpack://compiler/external module \"rehype-slug\"","webpack://compiler/external module \"rehype-stringify\"","webpack://compiler/external module \"remark-directive\"","webpack://compiler/external module \"remark-frontmatter\"","webpack://compiler/external module \"remark-gfm\"","webpack://compiler/external module \"remark-parse\"","webpack://compiler/external module \"remark-rehype\"","webpack://compiler/external module \"speech-rule-engine\"","webpack://compiler/external module \"to-vfile\"","webpack://compiler/external module \"unified\"","webpack://compiler/external module \"unist-util-remove\"","webpack://compiler/external module \"unist-util-visit\"","webpack://compiler/external module \"vfile\"","webpack://compiler/external module \"yargs\"","webpack://compiler/external module \"yargs/helpers\"","webpack://compiler/external module \"yup\"","webpack://compiler/external node-commonjs \"child_process\"","webpack://compiler/external node-commonjs \"fs\"","webpack://compiler/external node-commonjs \"os\"","webpack://compiler/external node-commonjs \"path\"","webpack://compiler/external node-commonjs \"url\"","webpack://compiler/webpack/bootstrap","webpack://compiler/webpack/runtime/async module","webpack://compiler/webpack/runtime/compat get default export","webpack://compiler/webpack/runtime/define property getters","webpack://compiler/webpack/runtime/hasOwnProperty shorthand","webpack://compiler/webpack/before-startup","webpack://compiler/webpack/startup","webpack://compiler/webpack/after-startup"],"sourcesContent":["import { EOL } from 'os';\r\n\r\nimport { Parent as HastParent } from 'hast';\r\nimport { Parent as MdastParent, Root } from 'mdast';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { Context } from './context';\r\nimport { Unit } from './course/types';\r\nimport { hastPhase } from './hast';\r\nimport { htmlPhase } from './html';\r\nimport { knitr } from './knitr/knitr';\r\nimport { texToAliasDirective } from './latex/tex-to-directive';\r\nimport { createReport, reportErrors } from './linter';\r\nimport { assertNoImageAttributes } from './linter/assert-no-image-attributes';\r\nimport { mdastPhase } from './mdast';\r\nimport { combinedMdastPhase } from './mdast/combined';\r\nimport { convertToPdf } from './pdf';\r\nimport { preParsePhase } from './pre-parse';\r\nimport { codeToAliasDirective } from './code/code-to-alias-directive';\r\n\r\nexport type BuiltUnit = {\r\n  unit: Unit;\r\n  md: string;\r\n  files: VFile[];\r\n  html?: {\r\n    mdast: MdastParent;\r\n    hast: HastParent;\r\n    html: string;\r\n  };\r\n  pdf?: {\r\n    mdast: MdastParent;\r\n    hast: HastParent;\r\n    html: string;\r\n    pdf: Buffer;\r\n  };\r\n};\r\n\r\nexport async function buildUnit(unit: Unit, ctx: Context) {\r\n  const unifiedFile = await knitr(unit, ctx);\r\n\r\n  const mdast = (await inSituTransforms(unifiedFile, ctx)) as Root;\r\n  // console.log(mdast);\r\n\r\n  await createReport(unifiedFile, mdast, ctx);\r\n\r\n  const result: BuiltUnit = {\r\n    unit,\r\n    md: combineMdFiles(unifiedFile),\r\n    files: [unifiedFile],\r\n  };\r\n\r\n  if (!ctx.options.noHtml) {\r\n    result.html = await syntaxTreeTransforms(\r\n      mdast,\r\n      unifiedFile,\r\n      unit,\r\n      ctx,\r\n    );\r\n  }\r\n\r\n  if (!ctx.options.noPdf) {\r\n    const transformed = await syntaxTreeTransforms(\r\n      mdast,\r\n      unifiedFile,\r\n      unit,\r\n      ctx,\r\n      true,\r\n    );\r\n    result.pdf = {\r\n      ...transformed,\r\n      pdf: await convertToPdf(transformed.html),\r\n    };\r\n  }\r\n\r\n  if (!ctx.options.noReport) {\r\n    reportErrors(result.files, ctx);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nasync function inSituTransforms(file: VFile, ctx: Context) {\r\n  assertNoImageAttributes(file);\r\n  preParsePhase(file);\r\n  await codeToAliasDirective(file, ctx);\r\n  texToAliasDirective(file, ctx);\r\n  return mdastPhase(file, ctx);\r\n}\r\n\r\nfunction combineMdFiles(file: VFile) {\r\n  return removeDirectoryLines(file.value as string);\r\n}\r\n\r\nfunction removeDirectoryLines(md: string) {\r\n  return md\r\n    .split(EOL)\r\n    .filter((line) => !/^::directory\\[.+\\]$/.test(line))\r\n    .join(EOL);\r\n}\r\n\r\nasync function syntaxTreeTransforms(\r\n  _mdast: Root,\r\n  file: VFile,\r\n  unit: Unit,\r\n  ctx: Context,\r\n  targetPdf?: boolean,\r\n) {\r\n  const mdast = await combinedMdastPhase(_mdast, ctx, file, targetPdf);\r\n  const hast = (await hastPhase(\r\n    mdast,\r\n    ctx,\r\n    file,\r\n    targetPdf,\r\n  )) as HastParent;\r\n  const html = await htmlPhase(hast, mdast, file, unit, ctx, targetPdf);\r\n  return { mdast, hast, html };\r\n}\r\n","import chalk from 'chalk';\r\nimport figures from 'figures';\r\nimport yargs from 'yargs';\r\nimport { hideBin } from 'yargs/helpers';\r\n\r\nimport { Options } from '../context';\r\nimport { reportHasFatalErrors } from '../linter/report';\r\nimport { rMarkdown } from '..';\r\n\r\nconst args = {\r\n  week: {\r\n    type: 'number',\r\n    description: 'Build specific week (1-based index)',\r\n  },\r\n  watch: {\r\n    type: 'boolean',\r\n    description: 'Watch coursework for changes',\r\n  },\r\n  noDoc: {\r\n    type: 'boolean',\r\n    description: 'Only compile content HTML',\r\n  },\r\n  noHtml: {\r\n    type: 'boolean',\r\n    description: \"Don't create HTML file\",\r\n  },\r\n  noPdf: {\r\n    type: 'boolean',\r\n    description: \"Don't create PDF file\",\r\n  },\r\n  noSyntaxHighlight: {\r\n    type: 'boolean',\r\n    description: 'No syntax highlighting',\r\n  },\r\n  noReport: {\r\n    type: 'boolean',\r\n    description: 'Bypass linter',\r\n  },\r\n  noEmbedAssets: {\r\n    type: 'boolean',\r\n    description: \"Don't embed assets\",\r\n  },\r\n  noEmbedAssetUrl: {\r\n    type: 'boolean',\r\n    description: \"Don't complete asset Url\",\r\n  },\r\n  noCache: {\r\n    type: 'boolean',\r\n    description: 'No cache',\r\n  },\r\n  noTexSvg: {\r\n    type: 'boolean',\r\n    description: 'No Tex Svg',\r\n  },\r\n  noHexagons: {\r\n    type: 'boolean',\r\n    description: 'No cover hexagons',\r\n  },\r\n  spelling: {\r\n    type: 'boolean',\r\n    description: 'Check spelling',\r\n  },\r\n  pythonBin: {\r\n    type: 'string',\r\n    description: 'Custom path to python binary',\r\n  },\r\n  force: {\r\n    type: 'boolean',\r\n    description: 'Compile even with fatal errors',\r\n  },\r\n  verbose: {\r\n    type: 'boolean',\r\n    description: 'Show error stack',\r\n  },\r\n  envPlatform: {\r\n    type: 'string',\r\n    description: 'Specify which environment platform to display',\r\n  },\r\n  envProgram: {\r\n    type: 'string',\r\n    description: 'Specify which environment program to display',\r\n  },\r\n  envLanguage: {\r\n    type: 'string',\r\n    description: 'Specify which environment language to display',\r\n  },\r\n  fileName: {\r\n    type: 'string',\r\n    description: 'Specify name of output file',\r\n  },\r\n  output: {\r\n    type: 'string',\r\n    description: 'output to stdout',\r\n    choices: ['md', 'html'],\r\n  },\r\n} as const;\r\n\r\nconst argv = yargs(hideBin(process.argv)).options(args).parseSync();\r\n\r\nconst dirPath = String(argv._[0] || '.');\r\n\r\nconst options: Options = {\r\n  week: argv.week,\r\n  watch: argv.watch,\r\n  noDoc: argv.noDoc,\r\n  noHtml: argv.noHtml,\r\n  noPdf: argv.noPdf,\r\n  noSyntaxHighlight: argv.noSyntaxHighlight,\r\n  noReport: argv.noReport,\r\n  noEmbedAssets: argv.noEmbedAssets,\r\n  noEmbedAssetUrl: argv.noEmbedAssetUrl,\r\n  noCache: argv.noCache,\r\n  noTexSvg: argv.noTexSvg,\r\n  noHexagons: argv.noHexagons,\r\n  spelling: argv.spelling,\r\n  pythonBin: argv.pythonBin,\r\n  force: argv.force,\r\n  verbose: argv.verbose,\r\n  envPlatform: argv.envPlatform,\r\n  envProgram: argv.envProgram,\r\n  envLanguage: argv.envLanguage,\r\n  fileName: argv.fileName,\r\n  output: argv.output as 'md' | 'html',\r\n};\r\n\r\nasync function run() {\r\n  try {\r\n    const weeks = await rMarkdown(dirPath, options);\r\n    for (const week of weeks) {\r\n      if (options.output === 'html') {\r\n        console.log((week.html?.html || '').trim());\r\n      }\r\n      if (options.output === 'md') {\r\n        console.log(week.md.trim());\r\n      }\r\n    }\r\n\r\n    // correct exit code even when using --force\r\n    for (const week of weeks) {\r\n      if (reportHasFatalErrors(week.files)) {\r\n        process.exit(1);\r\n      }\r\n    }\r\n  } catch (err: any) {\r\n    console.log(chalk.red(figures.cross + ' ' + err.message));\r\n    if (options.verbose) {\r\n      console.error(err);\r\n    }\r\n    process.exit(1);\r\n  }\r\n  process.exit(0);\r\n}\r\n\r\nrun();\r\n","import { visit } from 'unist-util-visit';\r\nimport { LeafDirective, TextDirective } from 'mdast-util-directive';\r\nimport { Literal, Node } from 'hast';\r\nimport { Parent } from 'mdast';\r\n\r\nimport { CodeBlock, Context } from '../context';\r\n\r\nexport function aliasDirectiveToCode(ctx: Context) {\r\n  return (tree: Node) => {\r\n    visit(tree, (node: Node) => {\r\n      if (\r\n        node.type === 'leafDirective' &&\r\n        (node as LeafDirective).name === 'codeBlock'\r\n      ) {\r\n        const idx = getStoreIdx(node as Parent);\r\n        if (ctx.codeStore === undefined) {\r\n          return;\r\n        }\r\n        const stored = ctx.codeStore[idx] as CodeBlock;\r\n        if (!stored) {\r\n          return;\r\n        }\r\n        Object.assign(node, {\r\n          type: 'code',\r\n          name: undefined,\r\n          lang: stored.lang,\r\n          meta: stored.meta,\r\n          value: stored.value,\r\n          children: [],\r\n        });\r\n      }\r\n      if (\r\n        node.type === 'textDirective' &&\r\n        (node as TextDirective).name === 'codeBlock'\r\n      ) {\r\n        const idx = getStoreIdx(node as Parent);\r\n        if (ctx.codeStore === undefined) {\r\n          return;\r\n        }\r\n        const stored = ctx.codeStore[idx] as CodeBlock;\r\n        if (!stored) {\r\n          return;\r\n        }\r\n        Object.assign(node, {\r\n          type: 'inlineCode',\r\n          name: undefined,\r\n          value: stored.value,\r\n          children: [],\r\n        });\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction getStoreIdx(node: Parent) {\r\n  const firstChild = node.children[0] as Literal;\r\n  return Number(firstChild.value || 0);\r\n}\r\n","import { VFile } from 'vfile';\r\nimport { Context, CodeBlock } from '../context';\r\nimport { EOL } from 'os';\r\n\r\n// The reason for replacing all fenced code blocks with aliases\r\n// temporarily is because of MathJax.  MathJax is designed to look\r\n// for TeX code inside HTML files, and in our case we need to make it\r\n// look inside a Markdown file. This leads to MathJax looking for TeX\r\n// inside code blocks, which can causes problems (especially with SAS\r\n// code syntax).  So this function replaces code blocks with an alias,\r\n// allows MathJax to do it's thing, then adds it back in with\r\n// `aliasDirectiveToCode`.\r\n\r\nexport async function codeToAliasDirective(file: VFile, ctx: Context) {\r\n  const store: CodeBlock[] = [];\r\n  file.value = codeBlocksToAlias(file.value as string, store);\r\n  file.value = inlineCodeToAlias(file.value as string, store);\r\n  ctx.codeStore = store;\r\n  return file;\r\n}\r\n\r\nfunction codeBlocksToAlias(md: string, store: CodeBlock[]) {\r\n  const verbatimStore: string[] = [];\r\n  return md\r\n    .replace(/^(~~~.+?^~~~)$/gms, (_, match) => {\r\n      verbatimStore.push(match);\r\n      return `::verbatimStore[${verbatimStore.length - 1}]`;\r\n    })\r\n    .replace(/^```(.+?)^```$/gms, (_, match) => {\r\n      const lines = match.split(EOL);\r\n      const lang = lines[0];\r\n      const value = lines.slice(1).join(EOL);\r\n      store.push({ lang, value });\r\n      return `::codeBlock[${store.length - 1}]`;\r\n    })\r\n    .replace(/::verbatimStore\\[(\\d+)\\]/g, (_, match) => {\r\n      return verbatimStore[Number(match)];\r\n    });\r\n}\r\n\r\nfunction inlineCodeToAlias(md: string, store: CodeBlock[]) {\r\n  return md.replace(/`([^\\n`]+?)`/g, (_, value) => {\r\n    store.push({ value });\r\n    return `:codeBlock[${store.length - 1}]`;\r\n  });\r\n}\r\n","import { collectCoursework } from './course';\r\nimport { Course } from './course/types';\r\nimport { getBuildDir, getCacheDir } from './utils/utils';\r\n\r\nexport type Options = {\r\n  noDoc?: boolean;\r\n  noHtml?: boolean;\r\n  noPdf?: boolean;\r\n  noSyntaxHighlight?: boolean;\r\n  noReport?: boolean;\r\n  reportOnlyErrors?: boolean;\r\n  noEmbedAssets?: boolean;\r\n  noEmbedAssetUrl?: boolean;\r\n  noCache?: boolean;\r\n  noTexSvg?: boolean;\r\n  noHexagons?: boolean;\r\n  week?: number;\r\n  watch?: boolean;\r\n  shouldFail?: boolean;\r\n  spelling?: boolean;\r\n  force?: boolean;\r\n  noWrite?: boolean;\r\n  format?: boolean;\r\n  pythonBin?: string;\r\n  verbose?: boolean;\r\n  envPlatform?: string;\r\n  envProgram?: string;\r\n  envLanguage?: string;\r\n  fileName?: string;\r\n  output?: 'md' | 'html';\r\n};\r\n\r\nexport type CodeBlock = {\r\n  lang?: string | null;\r\n  meta?: string | null;\r\n  value: string;\r\n};\r\n\r\nexport type Context = {\r\n  dirPath: string;\r\n  buildDir: string;\r\n  cacheDir: string;\r\n  course: Course;\r\n  options: Options;\r\n  mmlStore?: string[];\r\n  codeStore?: CodeBlock[];\r\n  refStore: Record<string, string>;\r\n  figureCounter: number;\r\n};\r\n\r\nexport async function createContext(\r\n  dirPath: string,\r\n  options: Options = {},\r\n): Promise<Context> {\r\n  return {\r\n    course: await collectCoursework(dirPath),\r\n    dirPath,\r\n    buildDir: getBuildDir(dirPath),\r\n    cacheDir: getCacheDir(dirPath),\r\n    options,\r\n    refStore: {},\r\n    figureCounter: 0,\r\n  };\r\n}\r\n","import path from 'path';\r\n\r\nimport kebabCase from 'lodash/kebabCase.js';\r\nimport { read as readVfile } from 'to-vfile';\r\n\r\nimport { checkLocalFileExists } from '../utils/utils';\r\nimport { loadCourseYaml } from './load-course';\r\nimport { loadUnitYaml } from './load-unit';\r\nimport {\r\n  Course,\r\n  CourseYaml,\r\n  Unit,\r\n  UnitTitles,\r\n  UnitTitlesInput,\r\n} from './types';\r\nimport { FileRef } from './types';\r\n\r\nexport async function collectCoursework(dirPath: string): Promise<Course> {\r\n  const course = await loadCourseYaml(dirPath);\r\n  const coursePath = path.join(process.cwd(), dirPath);\r\n  const units = await Promise.all(\r\n    course.units.map((unit) => collectUnit(unit, course, dirPath)),\r\n  );\r\n  return { ...course, coursePath, units };\r\n}\r\n\r\nasync function collectUnit(\r\n  unit: FileRef,\r\n  course: CourseYaml,\r\n  dirPath: string,\r\n): Promise<Unit> {\r\n  const { content, ...yaml } = await loadUnitYaml(dirPath, unit.src);\r\n  const unitPath = path.join(process.cwd(), dirPath, unit.src);\r\n  const files = await Promise.all(\r\n    content.map(async (c) => {\r\n      const filePath = path.resolve(dirPath, unit.src, '..', c.src);\r\n      if (!(await checkLocalFileExists(filePath))) {\r\n        throw new Error(`No Rmd file exists at ${filePath}`);\r\n      }\r\n      return readVfile(filePath, 'utf-8');\r\n    }),\r\n  );\r\n  const titles = getUnitTitles({\r\n    courseTitle: course.title,\r\n    unitName: yaml.name,\r\n    unitTitle: yaml.title,\r\n  });\r\n  return { ...yaml, unitPath, parts: content, files, titles };\r\n}\r\n\r\nexport function getUnitTitles({\r\n  courseTitle,\r\n  unitName,\r\n  unitTitle,\r\n}: UnitTitlesInput): UnitTitles {\r\n  return {\r\n    courseTitle,\r\n    unitTitle: `${unitName}: ${unitTitle}`,\r\n    unitName,\r\n    docTitle: `${unitTitle} | ${courseTitle}`,\r\n    fileName: kebabCase(unitName),\r\n  };\r\n}\r\n","import path from 'path';\r\n\r\nimport yaml from 'js-yaml';\r\nimport * as yup from 'yup';\r\n\r\nimport { checkLocalFileExists, readFile } from '../utils/utils';\r\nimport { CourseYaml } from './types';\r\n\r\n// export const validCatalogValues = [\r\n//   'STATS5077',\r\n//   'STATS5078',\r\n//   'STATS5075',\r\n//   'STATS5084',\r\n//   'STATS5074',\r\n//   'STATS5081',\r\n//   'STATS5080',\r\n//   'STATS5073',\r\n//   'STATS5076',\r\n//   'STATS5079',\r\n//   'STATS5082',\r\n//   'STATS5094',\r\n//   'STATS5083',\r\n// ];\r\n\r\nconst courseSchema = yup.object().shape({\r\n  title: yup.string().required(),\r\n  units: yup.array().of(\r\n    yup.object().shape({\r\n      src: yup.string().required(),\r\n    })\r\n  ),\r\n  catalog: yup.string(),\r\n  authors: yup.string().required(),\r\n  academic_year: yup.string().required(),\r\n});\r\n\r\nexport async function loadCourseYaml(dirPath: string) {\r\n  const courseYamlPath = path.join(dirPath, 'course.yaml');\r\n  if (!(await checkLocalFileExists(courseYamlPath))) {\r\n    throw Error(\r\n      `No course.yaml file exists in ${path.join(process.cwd(), dirPath)}`\r\n    );\r\n  }\r\n  const fileContents = await readFile(courseYamlPath);\r\n  const course = yaml.load(fileContents);\r\n  return courseSchema.validateSync(course) as CourseYaml;\r\n}\r\n","import path from 'path';\r\n\r\nimport yaml from 'js-yaml';\r\nimport * as yup from 'yup';\r\n\r\nimport { checkLocalFileExists, readFile } from '../utils/utils';\r\nimport { UnitYaml } from './types';\r\n\r\nconst unitSchema = yup.object().shape({\r\n  name: yup.string().required(),\r\n  title: yup.string().required(),\r\n  content: yup.array().of(\r\n    yup.object().shape({\r\n      src: yup.string().required(),\r\n    })\r\n  ),\r\n});\r\n\r\nexport async function loadUnitYaml(dirPath: string, src: string) {\r\n  const contentsPath = path.join(dirPath, src);\r\n  if (!(await checkLocalFileExists(contentsPath))) {\r\n    throw Error(\r\n      `No yaml file exists at ${path.join(process.cwd(), contentsPath)}`\r\n    );\r\n  }\r\n  const fileContents = await readFile(contentsPath);\r\n  const unit = yaml.load(fileContents);\r\n  return unitSchema.validateSync(unit) as UnitYaml;\r\n}\r\n","import { Root } from 'mdast';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport remark2rehype from 'remark-rehype';\r\nimport slug from 'rehype-slug';\r\nimport headings from 'rehype-autolink-headings';\r\nimport { unified } from 'unified';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { Context } from '../context';\r\nimport { createSvg } from '../utils/icons';\r\nimport { inlineRelativeAssets } from './inline-files';\r\nimport { responsiveTables } from './responsive-tables';\r\n\r\nexport async function hastPhase(\r\n  mdast: Root,\r\n  ctx: Context,\r\n  file: VFile,\r\n  targetPdf?: boolean,\r\n) {\r\n  const processor = unified()\r\n    .use(remark2rehype, { allowDangerousHtml: true })\r\n    .use(rehypeRaw)\r\n    .use(responsiveTables)\r\n    .use(slug)\r\n    .use(headings, {\r\n      content: createSvg('link-icon') as any,\r\n      properties: { className: 'link' },\r\n    });\r\n\r\n  if (!ctx.options.noEmbedAssets) {\r\n    processor.use(inlineRelativeAssets, ctx);\r\n  }\r\n\r\n  return processor.run(mdast, file);\r\n}\r\n","import path from 'path';\r\n\r\nimport { encode as base46Encode } from 'base64-arraybuffer';\r\nimport { Element, Properties } from 'hast';\r\nimport sizeOf from 'image-size';\r\nimport mimes from 'mime';\r\nimport fetch from 'node-fetch';\r\nimport { toVFile } from 'to-vfile';\r\n// import { optimize } from 'svgo';\r\nimport { Parent } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { Context } from '../context';\r\n// import { pdfToSvg } from '../pdf/pdf-to-svg';\r\nimport { cacheToFile } from '../utils/cache-to-file';\r\nimport { getSvgHast } from '../utils/get-svg-hast';\r\nimport { failMessage } from '../utils/message';\r\nimport { readFile, rehypeParser } from '../utils/utils';\r\n\r\nexport function inlineRelativeAssets(ctx: Context) {\r\n  return async (tree: Element, file: VFile) => {\r\n    const transformations: Promise<void>[] = [];\r\n    const loadedScripts: string[] = [];\r\n\r\n    visit(tree, 'element', (node, index, parent) => {\r\n      if (node.tagName === 'img') {\r\n        transformations.push(embedFile(node, file, ctx));\r\n      }\r\n      if (node.tagName === 'script' && node.properties?.src) {\r\n        transformations.push(\r\n          embedScript(node, index, parent, loadedScripts),\r\n        );\r\n      }\r\n    });\r\n\r\n    await Promise.all(transformations);\r\n  };\r\n}\r\n\r\nasync function embedFile(node: Element, file: VFile, ctx: Context) {\r\n  const src = getImageSrc(node);\r\n  const parsed = path.parse(src);\r\n  try {\r\n    switch (parsed.ext) {\r\n      case '.png':\r\n      case '.jpg':\r\n      case '.jpeg':\r\n      case '.gif':\r\n        return await embedImage(node, ctx, file);\r\n      case '.svg':\r\n        return await embedSvg(node, ctx);\r\n      case '.pdf':\r\n        // return await embedPdfSvg(node);\r\n        throw new Error(\r\n          `Unhandled file extension: .pdf (convert to .svg)`,\r\n        );\r\n      case '.html':\r\n        return await embedHtml(node);\r\n      default:\r\n        throw new Error(`Unhandled file extension: ${parsed.ext}`);\r\n    }\r\n  } catch (_err) {\r\n    console.log(_err);\r\n    const err = _err as Error;\r\n    failMessage(file, err?.message || '', node.position);\r\n  }\r\n}\r\n\r\nasync function embedImage(node: Element, ctx: Context, file: VFile) {\r\n  const src = getImageSrc(node);\r\n  const mime = mimes.getType(path.extname(src));\r\n  try {\r\n    const image = await getImage(src, ctx);\r\n    const { width } = sizeOf(Buffer.from(image, 'base64'));\r\n    node.properties = {\r\n      ...node.properties,\r\n      src: `data:${mime};base64,${image}`,\r\n      style: [`max-width: ${width}px`],\r\n    };\r\n  } catch (err) {\r\n    console.log(err);\r\n    failMessage(file, `Image not found: ${src}`);\r\n  }\r\n}\r\n\r\nasync function embedSvg(imgNode: Element, ctx: Context) {\r\n  const src = getImageSrc(imgNode);\r\n  const contents = await readFile(src);\r\n  const idx = contents.indexOf('<svg');\r\n  const svg = idx === -1 ? contents : contents.slice(idx);\r\n  // const optimised = optimize(svg, { multipass: true }).data;\r\n  // const svgNode = getAssetHast(svg) as Element;\r\n\r\n  const svgNode = getSvgHast(svg);\r\n  const svgProperties = svgNode.properties || {};\r\n\r\n  // helps to ensure the svg is responsive\r\n  delete svgProperties.width;\r\n  delete svgProperties.height;\r\n\r\n  const className = 'knitr-svg';\r\n  const properties = {\r\n    ...imgNode.properties,\r\n    ...svgProperties,\r\n    className: [\r\n      className,\r\n      ...getNodeClassNames(imgNode, className),\r\n      ...getNodeClassNames(svgNode, className),\r\n    ],\r\n  } as Properties;\r\n\r\n  delete properties.src;\r\n\r\n  Object.assign(imgNode, svgNode, { properties });\r\n}\r\n\r\nfunction getNodeClassNames(node: Element, removeClass: string) {\r\n  const classes = node.properties?.className;\r\n  if (typeof classes === 'string' && classes !== removeClass) {\r\n    return [classes];\r\n  }\r\n  if (Array.isArray(classes)) {\r\n    return classes.map((x) => String(x)).filter((s) => s !== removeClass);\r\n  }\r\n  return [];\r\n}\r\n\r\nfunction getImageSrc(node: Element) {\r\n  const properties = (node.properties || {}) as { src: string };\r\n  if (!properties.src) {\r\n    throw new Error('Image has no src');\r\n  }\r\n  return properties.src;\r\n}\r\n\r\nasync function getImage(src: string, ctx: Context) {\r\n  if (src.startsWith('http')) {\r\n    return cacheToFile({\r\n      ctx,\r\n      prefix: 'youtube',\r\n      key: src,\r\n      execFn: getImageDataFromWeb,\r\n    });\r\n  }\r\n  return readFile(src, 'base64');\r\n}\r\n\r\nasync function getImageDataFromWeb(src: string) {\r\n  const response = await fetch(src);\r\n  const buffer = await response.arrayBuffer();\r\n  return base46Encode(buffer);\r\n}\r\n\r\n// async function embedPdfSvg(imgNode: Element) {\r\n//   const src = getImageSrc(imgNode);\r\n//   const svgNode = (await pdfToSvg(src)) as Element;\r\n//   console.log('hey!');\r\n//   console.log(svgNode);\r\n\r\n//   const properties = {\r\n//     ...imgNode.properties,\r\n//     ...svgNode.properties,\r\n//   } as Properties;\r\n\r\n//   delete properties.src;\r\n\r\n//   Object.assign(imgNode, svgNode, { properties });\r\n// }\r\n\r\nasync function embedHtml(imgNode: Element) {\r\n  const src = getImageSrc(imgNode);\r\n  const value = await readFile(src);\r\n  const vfile = toVFile({ value });\r\n  const parsed = rehypeParser().parse(vfile) as Parent;\r\n\r\n  Object.assign(imgNode, {\r\n    tagName: 'div',\r\n    properties: {\r\n      className: 'interactive-element',\r\n    },\r\n    children: parsed.children,\r\n  });\r\n}\r\n\r\nasync function embedScript(\r\n  node: Element,\r\n  index: number | undefined,\r\n  parent: Parent | undefined,\r\n  loadedScripts: string[],\r\n) {\r\n  if (!node.properties?.src) {\r\n    return;\r\n  }\r\n\r\n  const src = node.properties.src as string;\r\n\r\n  if (loadedScripts.includes(src)) {\r\n    // script already inlined, remove tag\r\n    const parentChildren = parent?.children || [];\r\n    parentChildren.splice(index || 0, 1);\r\n    return;\r\n  }\r\n\r\n  loadedScripts.push(src);\r\n\r\n  delete node.properties.src;\r\n  const response = await fetch(src);\r\n  const value = await response.text();\r\n\r\n  node.children = [\r\n    {\r\n      type: 'text',\r\n      value: `// ${src}\\n${value}\\n`,\r\n    },\r\n  ];\r\n}\r\n","import { Root, Element } from 'hast';\r\nimport cloneDeep from 'lodash/cloneDeep.js';\r\nimport { visit } from 'unist-util-visit';\r\n\r\ntype ParentProps = {\r\n  className: string[];\r\n};\r\n\r\nexport function responsiveTables() {\r\n  return function (tree: Root) {\r\n    visit(tree, 'element', (node, idx, _parent) => {\r\n      if (node.tagName !== 'table') {\r\n        return;\r\n      }\r\n\r\n      const parent = _parent as Element;\r\n      const properties = (parent?.properties || {}) as ParentProps;\r\n      const className = properties.className || [];\r\n\r\n      if (!className.includes('table-wrapper')) {\r\n        Object.assign(node, {\r\n          tagName: 'div',\r\n          properties: {\r\n            className: 'table-wrapper',\r\n          },\r\n          children: [cloneDeep(node)],\r\n        });\r\n      }\r\n    });\r\n  };\r\n}\r\n","import path from 'path';\r\n\r\nimport { Parent as HastParent } from 'hast';\r\nimport startCase from 'lodash/startCase.js';\r\nimport { Parent as MdastParent } from 'mdast';\r\nimport doc, { Options } from 'rehype-document';\r\nimport format from 'rehype-format';\r\nimport stringify from 'rehype-stringify';\r\nimport { unified } from 'unified';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { Context } from '../context';\r\nimport { Unit } from '../course/types';\r\nimport { getTemplateDir, readFile } from '../utils/utils';\r\nimport { pdfWrapper } from './pdf';\r\nimport { htmlWrapper } from './wrapper';\r\n\r\nexport async function htmlPhase(\r\n  hast: HastParent,\r\n  mdast: MdastParent,\r\n  file: VFile,\r\n  unit: Unit,\r\n  ctx: Context,\r\n  targetPdf?: boolean,\r\n) {\r\n  const processor = unified().use(stringify, { allowDangerousHtml: true });\r\n\r\n  if (ctx.options.format) {\r\n    // hangs in some scenarios so off by default, useful in tests\r\n    processor.use(format);\r\n  }\r\n\r\n  if (!ctx.options.noDoc) {\r\n    const cssPath = path.join(getTemplateDir(), 'template.css');\r\n    const docOptions: Options = {\r\n      title: unit.titles.docTitle,\r\n      style: `\\n${await readFile(cssPath)}\\n`,\r\n    };\r\n\r\n    if (!targetPdf) {\r\n      const jsPath = path.join(getTemplateDir(), 'template.js2');\r\n      docOptions.script = `\\n${await readFile(jsPath)}\\n`;\r\n      processor.use(htmlWrapper, unit, mdast, ctx);\r\n    } else {\r\n      processor.use(pdfWrapper, unit, ctx);\r\n    }\r\n\r\n    processor.use(doc, docOptions);\r\n  }\r\n\r\n  const transformed = await processor.run(hast, file);\r\n\r\n  const result = processor.stringify(transformed as any, file);\r\n\r\n  return postTransforms(result, ctx);\r\n}\r\n\r\nfunction postTransforms(html: string, ctx: Context) {\r\n  let result = '';\r\n  result = referenceTransform(html, ctx.refStore);\r\n  return result;\r\n}\r\n\r\nfunction referenceTransform(html: string, refStore: Context['refStore']) {\r\n  return html.replace(/ref:\\/\\/(\\w+)/gms, (...match) => {\r\n    const key = match[1];\r\n    const link = refStore[key];\r\n    const name = startCase(link);\r\n    return `<a href=\"#${link}\">${name}</a>`;\r\n  });\r\n}\r\n","import { Node, Parent } from 'unist';\r\n\r\nimport { Context } from '../context';\r\nimport { Unit } from '../course/types';\r\n// import { UnitTitles } from '../course/types';\r\nimport { createDefs } from '../utils/icons';\r\nimport { createMain } from './wrapper/main';\r\n\r\nexport function pdfWrapper(unit: Unit, ctx: Context) {\r\n  return async (tree: Node) => {\r\n    const main = await createMain(\r\n      unit.titles,\r\n      ctx,\r\n      (tree as Parent).children\r\n    );\r\n    const iconDefs = createDefs();\r\n    return {\r\n      type: 'root',\r\n      children: [\r\n        {\r\n          type: 'element',\r\n          tagName: 'div',\r\n          properties: {\r\n            id: 'root',\r\n            className: ['hide-sidebar', 'font-default', 'pdf'],\r\n          },\r\n          children: [iconDefs, main],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n}\r\n","import { Parent } from 'mdast';\r\n\r\nimport { Context } from '../../context';\r\nimport { Unit } from '../../course/types';\r\nimport { createDefs, createSvg } from '../../utils/icons';\r\nimport { createMain } from './main';\r\nimport { createSidebar } from './sidebar';\r\n\r\nexport function htmlWrapper(unit: Unit, mdast: Parent, ctx: Context) {\r\n  return async (tree: Parent) => {\r\n    const hamburgerIcon = createSvg('hamburger-icon');\r\n    const sidebar = await createSidebar(mdast);\r\n    const main = await createMain(unit.titles, ctx, tree.children);\r\n    const iconDefs = createDefs();\r\n    return {\r\n      type: 'root',\r\n      children: [\r\n        {\r\n          type: 'element',\r\n          tagName: 'div',\r\n          properties: {\r\n            id: 'root',\r\n            className: ['hide-sidebar'],\r\n          },\r\n          children: [iconDefs, main, hamburgerIcon, sidebar],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n}\r\n","import { Node } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nimport dagLogoSvg from '../../../assets/dag-logo.svg';\r\nimport coverSvg from '../../../assets/hexagons.svg';\r\nimport { Context } from '../../context';\r\nimport { Course, UnitTitles } from '../../course/types';\r\nimport { getAssetHast } from '../../utils/get-asset-hast';\r\n\r\nexport async function createMain(\r\n  titles: UnitTitles,\r\n  ctx: Context,\r\n  content: Node[]\r\n) {\r\n  const children = [];\r\n\r\n  if (ctx.options.noHexagons) {\r\n    children.push(createH1(titles));\r\n  } else {\r\n    children.push(createCover(titles, ctx.course));\r\n  }\r\n\r\n  children.push(...content);\r\n\r\n  return {\r\n    type: 'element',\r\n    tagName: 'main',\r\n    children: [\r\n      {\r\n        type: 'element',\r\n        tagName: 'div',\r\n        properties: {\r\n          className: 'wrapper',\r\n        },\r\n        children,\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction createCover(titles: UnitTitles, course: Course) {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'div',\r\n    properties: {\r\n      className: 'cover',\r\n    },\r\n    children: [\r\n      createH1(titles),\r\n      {\r\n        type: 'element',\r\n        tagName: 'div',\r\n        properties: {\r\n          className: 'logos',\r\n        },\r\n        children: [\r\n          createCoverHexagons(course.catalog || ''),\r\n          getAssetHast(dagLogoSvg),\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction createH1(titles: UnitTitles) {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'h1',\r\n    children: [\r\n      {\r\n        type: 'text',\r\n        value: titles.courseTitle,\r\n      },\r\n      {\r\n        type: 'element',\r\n        tagName: 'span',\r\n        properties: {\r\n          className: 'unit',\r\n        },\r\n        children: [\r\n          {\r\n            type: 'text',\r\n            value: titles.unitTitle,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction createCoverHexagons(catalog: string) {\r\n  const hexagons = getAssetHast(coverSvg);\r\n\r\n  if (catalog !== '') {\r\n    visit(hexagons, 'element', (node) => {\r\n      if (node.tagName === 'g') {\r\n        const properties = node.properties || {};\r\n        const [className] = (properties.className || []) as string[];\r\n        if (catalog === className) {\r\n          properties.className = ['active'];\r\n        } else {\r\n          properties.className = [];\r\n        }\r\n        node.properties = properties;\r\n      }\r\n    });\r\n  }\r\n\r\n  return hexagons;\r\n}\r\n","import { List, Nodes, Parent } from 'mdast';\r\nimport { toHast } from 'mdast-util-to-hast';\r\nimport { toc as getToc } from 'mdast-util-toc';\r\n\r\nimport crestSvg from '../../../assets/crest.svg';\r\nimport uOfGSvg from '../../../assets/uofg.svg';\r\nimport { getAssetHast } from '../../utils/get-asset-hast';\r\nimport { createSvg } from '../../utils/icons';\r\nimport {\r\n  createViewOptions,\r\n  createViewOptionsButton,\r\n} from './view-options';\r\n\r\nexport async function createSidebar(mdast: Parent) {\r\n  const logo = await createLogo();\r\n  const toc = getToc(mdast as Nodes, { maxDepth: 3 }).map;\r\n  const tocChildren = toc === undefined ? [] : [toHast(toc)];\r\n\r\n  printTableOfContents(toc);\r\n\r\n  return {\r\n    type: 'element',\r\n    tagName: 'aside',\r\n    children: [\r\n      logo,\r\n      createViewOptionsButton(),\r\n      {\r\n        type: 'element',\r\n        tagName: 'nav',\r\n        properties: {\r\n          id: 'toc',\r\n        },\r\n        children: tocChildren,\r\n      },\r\n      {\r\n        type: 'element',\r\n        tagName: 'div',\r\n        properties: {\r\n          id: 'view-options',\r\n        },\r\n        children: createViewOptions(),\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nasync function createLogo() {\r\n  const crest = getAssetHast(crestSvg);\r\n  const uofg = getAssetHast(uOfGSvg);\r\n  const hamburgerIcon = createSvg('hamburger-icon');\r\n  return {\r\n    type: 'element',\r\n    tagName: 'div',\r\n    properties: {\r\n      className: 'logo',\r\n    },\r\n    children: [\r\n      {\r\n        type: 'element',\r\n        tagName: 'div',\r\n        properties: {\r\n          className: 'logo-wrapper',\r\n        },\r\n        children: [crest, uofg],\r\n      },\r\n      hamburgerIcon,\r\n    ],\r\n  };\r\n}\r\n\r\nfunction printTableOfContents(toc: List | undefined) {\r\n  // toc?.children.forEach((a) => {\r\n  //   a.children.forEach((b) => {\r\n  //     if (b.type === 'paragraph') {\r\n  //       // @ts-ignore\r\n  //       console.log(`- [ ] ${b.children[0].children[0].value}`);\r\n  //     }\r\n  //     if (b.type === 'list') {\r\n  //       b.children.forEach((c) => {\r\n  //         c.children.forEach((d) => {\r\n  //           if (d.type === 'paragraph') {\r\n  //             // @ts-ignore\r\n  //             console.log(`  - [ ] ${d.children[0].children[0].value}`);\r\n  //           }\r\n  //         });\r\n  //       });\r\n  //     }\r\n  //   });\r\n  // });\r\n}\r\n","import { Item } from './shared';\r\n\r\ntype ReadabilityItem = Item & {\r\n  min: number;\r\n  max: number;\r\n  increment: number;\r\n};\r\n\r\nconst options: ReadabilityItem[] = [\r\n  {\r\n    value: 'fontSize',\r\n    label: 'Font-size',\r\n    min: 0.6,\r\n    max: 2,\r\n    increment: 0.1,\r\n  },\r\n  {\r\n    value: 'lineSpacing',\r\n    label: 'Line spacing',\r\n    min: 0.6,\r\n    max: 2,\r\n    increment: 0.1,\r\n  },\r\n  {\r\n    value: 'letterSpacing',\r\n    label: 'Letter spacing',\r\n    min: -0.1,\r\n    max: 0.2,\r\n    increment: 0.05,\r\n  },\r\n  {\r\n    value: 'lineWidth',\r\n    label: 'Line width',\r\n    min: 0.6,\r\n    max: 1.2,\r\n    increment: 0.05,\r\n  },\r\n];\r\n\r\nexport function createReadabilityList() {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'ul',\r\n    properties: {\r\n      id: 'readability',\r\n    },\r\n    children: options.map(createOption),\r\n  };\r\n}\r\n\r\nfunction createOption(item: ReadabilityItem) {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'li',\r\n    properties: {\r\n      className: [item.value],\r\n      'data-min': item.min,\r\n      'data-max': item.max,\r\n      'data-increment': item.increment,\r\n    },\r\n    children: [\r\n      {\r\n        type: 'element',\r\n        tagName: 'span',\r\n        properties: {\r\n          className: ['label'],\r\n        },\r\n        children: [\r\n          {\r\n            type: 'text',\r\n            value: item.label,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        type: 'element',\r\n        tagName: 'span',\r\n        properties: {\r\n          className: ['actions'],\r\n        },\r\n        children: [\r\n          {\r\n            type: 'element',\r\n            tagName: 'span',\r\n            properties: {\r\n              className: ['btn', 'minus'],\r\n            },\r\n            children: [\r\n              {\r\n                type: 'text',\r\n                value: '−',\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            type: 'element',\r\n            tagName: 'span',\r\n            properties: {\r\n              className: ['btn', 'plus'],\r\n            },\r\n            children: [\r\n              {\r\n                type: 'text',\r\n                value: '+',\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            type: 'element',\r\n            tagName: 'span',\r\n            properties: {\r\n              className: ['btn', 'reset'],\r\n            },\r\n            children: [\r\n              {\r\n                type: 'text',\r\n                value: 'Reset',\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n}\r\n","import { Item } from './shared';\r\n\r\nconst themes: Item[] = [\r\n  {\r\n    value: 'light',\r\n    label: 'Light',\r\n  },\r\n  {\r\n    value: 'dark',\r\n    label: 'Dark',\r\n  },\r\n  {\r\n    value: 'yellow-on-black',\r\n    label: 'Yellow on Black',\r\n  },\r\n  {\r\n    value: 'black-on-yellow',\r\n    label: 'Black on Yellow',\r\n  },\r\n  {\r\n    value: 'black-on-red',\r\n    label: 'Black on Red',\r\n  },\r\n  {\r\n    value: 'black-on-blue',\r\n    label: 'Black on Blue',\r\n  },\r\n];\r\n\r\nexport function createThemeList() {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'ul',\r\n    properties: {\r\n      id: 'themes',\r\n    },\r\n    children: themes.map(createThemeButton),\r\n  };\r\n}\r\n\r\nfunction createThemeButton(theme: Item) {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'li',\r\n    properties: {\r\n      className: [theme.value],\r\n    },\r\n    children: [\r\n      {\r\n        type: 'text',\r\n        value: theme.label,\r\n      },\r\n    ],\r\n  };\r\n}\r\n","import { Node } from 'unist';\r\n\r\n// import { createFontList } from './font';\r\nimport { createReadabilityList } from './readability';\r\nimport { createThemeList } from './theme';\r\n\r\nexport function createViewOptionsButton() {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'div',\r\n    properties: {\r\n      id: 'view-options-toggle',\r\n    },\r\n    children: [\r\n      {\r\n        type: 'text',\r\n        value: 'View options',\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nexport function createViewOptions(): Node[] {\r\n  return [\r\n    createTitle('Theme'),\r\n    createThemeList(),\r\n    // createTitle('Font'),\r\n    // createFontList(),\r\n    createTitle('Readability'),\r\n    createReadabilityList(),\r\n  ];\r\n}\r\n\r\nfunction createTitle(value: string) {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'h3',\r\n    children: [\r\n      {\r\n        type: 'text',\r\n        value,\r\n      },\r\n    ],\r\n  };\r\n}\r\n","import path from 'path';\r\n\r\nimport chalk from 'chalk';\r\n\r\nimport { BuiltUnit, buildUnit } from './build-unit';\r\nimport { Context, Options, createContext } from './context';\r\nimport { checkForLatestVersion } from './utils/check-for-latest-version';\r\nimport { Timer, createTimer } from './utils/timer';\r\nimport { mkdir, writeFile } from './utils/utils';\r\n\r\nexport async function rMarkdown(dirPath: string, options: Options = {}) {\r\n  if (!options.output) {\r\n    await checkForLatestVersion();\r\n  }\r\n\r\n  const timer = createTimer();\r\n  const ctx = await createContext(dirPath, options);\r\n\r\n  const result = [];\r\n\r\n  if (ctx.options.week) {\r\n    // write single week\r\n    const idx = ctx.options.week - 1;\r\n    const input = ctx.course.units[idx];\r\n\r\n    if (input === undefined) {\r\n      const courseYaml = path.join(ctx.dirPath, 'course.yaml');\r\n      throw new Error(\r\n        `Week ${ctx.options.week} not found in ${courseYaml}`,\r\n      );\r\n    }\r\n\r\n    const built = await buildUnit(input, ctx);\r\n    await writeUnit(built, ctx, timer);\r\n    result.push(built);\r\n  } else {\r\n    // write full course\r\n    for (const input of ctx.course.units) {\r\n      const built = await buildUnit(input, ctx);\r\n      await writeUnit(built, ctx, timer);\r\n      result.push(built);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nasync function writeUnit(built: BuiltUnit, ctx: Context, timer: Timer) {\r\n  if (ctx.options.noWrite) {\r\n    return;\r\n  }\r\n\r\n  await mkdir(ctx.buildDir);\r\n  const fileName = ctx.options.fileName\r\n    ? ctx.options.fileName\r\n    : built.unit.titles.fileName;\r\n  const filePath = path.join(ctx.buildDir, fileName);\r\n\r\n  if (built.html) {\r\n    await writeFile(filePath + '.html', built.html.html);\r\n\r\n    if (!ctx.options.output) {\r\n      const status = chalk.green.bold(`Complete in ${timer.seconds()}s`);\r\n      console.log(`✨ ${status} ${filePath}.html`);\r\n    }\r\n  }\r\n\r\n  if (built.pdf) {\r\n    await writeFile(filePath + '.pdf', built.pdf.pdf);\r\n\r\n    // debug\r\n    // await writeFile(filePath + '.pdf.html', built.pdf.html);\r\n\r\n    if (!ctx.options.output) {\r\n      const status = chalk.green.bold(`Complete in ${timer.seconds()}s`);\r\n      console.log(`✨ ${status} ${filePath}.pdf`);\r\n    }\r\n  }\r\n}\r\n","import { exec } from 'child_process';\r\nimport { EOL } from 'os';\r\nimport path from 'path';\r\nimport { fileURLToPath } from 'url';\r\n\r\nimport chalk from 'chalk';\r\nimport hashSum from 'hash-sum';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { Context } from '../context';\r\nimport { Unit } from '../course/types';\r\nimport { failMessage, infoMessage, warnMessage } from '../utils/message';\r\nimport { mkdir, rmFile, writeFile } from '../utils/utils';\r\n\r\n// bypass knitr for debugging\r\n// export async function knitr(unit: Unit, ctx: Context) {\r\n//   const file = new VFile();\r\n//   file.value = unit.files.reduce((acc, o) => {\r\n//     return acc + EOL + EOL + o.value;\r\n//   }, '');\r\n//   return file;\r\n// }\r\n\r\nexport async function knitr(unit: Unit, ctx: Context) {\r\n  const parentFile = await createParentFile(unit, ctx);\r\n  // console.log(parentFile.value);\r\n\r\n  const result = await execKnitr(parentFile, ctx, unit.unitPath);\r\n  // console.log(result);\r\n  parentFile.value = result;\r\n  return parentFile;\r\n}\r\n\r\n// creating a temporary file which includes all child files allows\r\n// R/Python state to be shared across multiple .Rmd files\r\n// https://yihui.org/knitr/options/#child-documents\r\nasync function createParentFile(unit: Unit, ctx: Context) {\r\n  const file = new VFile();\r\n\r\n  let value = '';\r\n\r\n  // pass path to custom python binary to reticulate\r\n  // https://rstudio.github.io/reticulate/articles/r_markdown.html\r\n  if (ctx.options.pythonBin) {\r\n    const reticulate = `reticulate::use_python(\"${ctx.options.pythonBin}\")`;\r\n    value += `\\`\\`\\`{r, echo=FALSE}${EOL}${reticulate}${EOL}\\`\\`\\`${EOL}${EOL}`;\r\n  }\r\n\r\n  value += unit.files.reduce((acc, o) => {\r\n    const [filePath] = o.history;\r\n\r\n    // directory directive is used to ensure external assets\r\n    // can have relative paths to the .Rmd document.\r\n    // used in embed-asset-url mdast transform\r\n    const fileDir = path.parse(filePath).dir;\r\n    const directive = `::directory[${fileDir}]`;\r\n\r\n    // child document\r\n    // convert all file paths to forward slash (windows anaconda/knitr bug)\r\n    const formattedPath = filePath.replace(/\\\\/g, '/');\r\n\r\n    const childCodeBlock = `\\`\\`\\`{r, child='${formattedPath}'}${EOL}\\`\\`\\``;\r\n    return acc + directive + EOL + EOL + childCodeBlock + EOL + EOL;\r\n  }, '');\r\n\r\n  // console.log(value);\r\n\r\n  file.value = value;\r\n  return file;\r\n}\r\n\r\nasync function execKnitr(file: VFile, ctx: Context, unitPath: string) {\r\n  const md = file.value as string;\r\n  const uniqueId = getUniqueId(md);\r\n  const cachedFile = path.join(ctx.cacheDir, `${uniqueId}.Rmd`);\r\n  const cacheDir = path.join(ctx.cacheDir, uniqueId);\r\n  await mkdir(cacheDir);\r\n  await writeFile(cachedFile, md);\r\n\r\n  return new Promise<string>((resolve, reject) => {\r\n    const cmd = createKnitrCommand(ctx, uniqueId, unitPath);\r\n    const maxBuffer = 1024 * 1024 * 10;\r\n\r\n    exec(cmd, { maxBuffer }, async (err, response, stdErr) => {\r\n      if (stdErr) {\r\n        if (!ctx.options.output) {\r\n          console.log(chalk.grey(`[knitr] ${stdErr.trim()}`));\r\n        }\r\n        if (isFailingStdErr(stdErr)) {\r\n          failMessage(file, stdErr);\r\n        }\r\n      }\r\n\r\n      if (err) {\r\n        console.error('ERROR', err);\r\n        reject(err);\r\n      } else {\r\n        reportErrors(response, file, ctx);\r\n        resolve(formatResponse(response));\r\n      }\r\n      await rmFile(cachedFile);\r\n    });\r\n  });\r\n}\r\n\r\nfunction getUniqueId(md: string) {\r\n  const hash = hashSum(md);\r\n  const ts = new Date().getTime().toString();\r\n  return `knitr-${hash}-${ts}`;\r\n}\r\n\r\nfunction createKnitrCommand(\r\n  ctx: Context,\r\n  uniqueId: string,\r\n  unitPath: string,\r\n) {\r\n  const rFileDir = getKnitrFileDir();\r\n  const rFile = path.join(rFileDir, 'knitr.R');\r\n  const baseDir = path.parse(unitPath).dir;\r\n  const cachedFile = path.join(ctx.cacheDir, `${uniqueId}.Rmd`);\r\n  const cacheDir = path.join(ctx.cacheDir, uniqueId);\r\n\r\n  // spawn args\r\n  // return [rFile, cachedFile, baseDir, cacheDir];\r\n\r\n  return `Rscript \"${rFile}\" \"${cachedFile}\" \"${baseDir}\" \"${cacheDir}\"`;\r\n}\r\n\r\nfunction getKnitrFileDir() {\r\n  // temporary hack until this PR is merged\r\n  // https://github.com/webpack/webpack/pull/15246\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return __dirname;\r\n  }\r\n  return path.dirname(fileURLToPath(import.meta.url));\r\n}\r\n\r\nfunction isFailingStdErr(stdErr: string) {\r\n  // console.log({ stdErr });\r\n  return /status 1\\d*$/.test(stdErr.trim());\r\n}\r\n\r\nfunction reportErrors(response: string, file: VFile, ctx: Context) {\r\n  const lines = response\r\n    .split(EOL)\r\n    .filter((s) => !s.startsWith(':directory'));\r\n\r\n  const trimmed = lines.join(EOL).trim();\r\n\r\n  // Warning at the start of a document\r\n  if (trimmed.startsWith('WARNING -')) {\r\n    const match = trimmed.match(/^WARNING - (.+?)[\\r\\n]{2,}/ms);\r\n\r\n    // Check the original file doesn't start with WARNING\r\n    const original = String(ctx.course.units[0].files[0].value)\r\n      .split(EOL)\r\n      .filter((s) => !s.startsWith(':directory'))\r\n      .join(EOL)\r\n      .trim();\r\n\r\n    if (match !== null && !original.startsWith('WARNING -')) {\r\n      warnMessage(file, match[1], {\r\n        start: {\r\n          line: 1,\r\n          column: 0,\r\n        },\r\n        end: {\r\n          line: 1,\r\n          column: lines[0].length,\r\n        },\r\n      });\r\n    }\r\n\r\n    // Python binary path\r\n  } else if (trimmed.startsWith('$python [1]')) {\r\n    const match = trimmed.match(/^\\$python\\s\\[1\\]\\s(\"\\S+\")/);\r\n    if (match !== null) {\r\n      infoMessage(file, match[1], {\r\n        start: {\r\n          line: 1,\r\n          column: 0,\r\n        },\r\n        end: {\r\n          line: 1,\r\n          column: lines[0].length,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  // Errors throughout document\r\n  lines.forEach((line, idx) => {\r\n    const trimmedLine = line.trim();\r\n    if (trimmedLine.startsWith('## Error')) {\r\n      warnMessage(file, trimmedLine.replace('## ', ''), {\r\n        start: {\r\n          line: idx + 1,\r\n          column: 0,\r\n        },\r\n        end: {\r\n          line: idx + 1,\r\n          column: line.length,\r\n        },\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nasync function formatResponse(response: string) {\r\n  let md = response;\r\n  md = removeCustomPythonBinNotice(md);\r\n  md = removePythonWarningMessage(md);\r\n  md = addErrorCodeBlock(md);\r\n  md = removeHashSigns(md);\r\n  md = removeEmptyLog(md);\r\n  md = addNewLineAfterKable(md);\r\n  md = removeSpaceBeforeCodeLanguage(md);\r\n  return md;\r\n}\r\n\r\nfunction removeCustomPythonBinNotice(md: string) {\r\n  return md.replace(/^\\$python\\s\\[1\\]\\s\"\\S+\"/, '');\r\n}\r\n\r\nfunction removePythonWarningMessage(md: string) {\r\n  return md.replace(/^WARNING - .+?[\\r\\n]+/m, '');\r\n}\r\n\r\nfunction removeHashSigns(md: string) {\r\n  let insideCodeResponse = false;\r\n  let openingLine = '';\r\n  return md\r\n    .split(EOL)\r\n    .reduce((acc: string[], line) => {\r\n      if (line.startsWith('```')) {\r\n        insideCodeResponse = !insideCodeResponse;\r\n        openingLine = insideCodeResponse ? line : '';\r\n      }\r\n      if (insideCodeResponse && openingLine.trim().endsWith('-output')) {\r\n        acc.push(line.replace(/^##\\s+/, ''));\r\n      } else {\r\n        acc.push(line);\r\n      }\r\n      return acc;\r\n    }, [])\r\n    .join(EOL);\r\n}\r\n\r\nfunction removeEmptyLog(md: string) {\r\n  return md.replace(/\\[1\\]\\s\"\"$/gm, '').trim();\r\n}\r\n\r\nfunction addErrorCodeBlock(md: string) {\r\n  return md\r\n    .split(EOL)\r\n    .reduce((acc: string[], line, idx) => {\r\n      // console.log(line);\r\n      if (idx > 0 && acc[idx - 1].startsWith('```')) {\r\n        if (line.startsWith('## Error') || line.startsWith('## fatal')) {\r\n          acc[acc.length - 1] = `\\`\\`\\`error-output`;\r\n        }\r\n      }\r\n      acc.push(line);\r\n      return acc;\r\n    }, [])\r\n    .join(EOL);\r\n}\r\n\r\nfunction addNewLineAfterKable(md: string) {\r\n  return md\r\n    .split(EOL)\r\n    .reduce((acc: string[], line, idx) => {\r\n      if (acc[idx - 1]?.startsWith('|') && !line.startsWith('|')) {\r\n        acc.push('', line);\r\n      } else {\r\n        acc.push(line);\r\n      }\r\n      return acc;\r\n    }, [])\r\n    .join(EOL);\r\n}\r\n\r\nfunction removeSpaceBeforeCodeLanguage(md: string) {\r\n  return md.replace(/^```\\s(.+)$/g, '```$1');\r\n}\r\n\r\n// experimental streaming output\r\n// async function spawnKnitr(file: VFile, ctx: Context, unitPath: string) {\r\n//   const md = file.value as string;\r\n//   const uniqueId = getUniqueId(md);\r\n//   const cachedFile = path.join(ctx.cacheDir, `${uniqueId}.Rmd`);\r\n//   const cacheDir = path.join(ctx.cacheDir, uniqueId);\r\n//   await mkdir(cacheDir);\r\n//   await writeFile(cachedFile, md);\r\n\r\n//   return new Promise<string>((resolve, reject) => {\r\n//     const args = createKnitrCommand(ctx, uniqueId, unitPath);\r\n//     const knitr = spawn('Rscript', args);\r\n//     const result: string[] = [];\r\n\r\n//     knitr.stdout.on('data', (data) => {\r\n//       const str = data.toString();\r\n//       console.log(str);\r\n//       result.push(str);\r\n//     });\r\n\r\n//     knitr.stdout.on('end', () => {\r\n//       console.log('STDOUT END');\r\n//       const end = result.join('');\r\n//       console.log('END', end);\r\n//       reportErrors(end, file);\r\n//       resolve(formatResponse(end));\r\n//     });\r\n\r\n//     knitr.stdout.on('error', (err) => {\r\n//       console.log('STDOUT ERROR', err, err.toString());\r\n//       reject();\r\n//     });\r\n\r\n//     knitr.stderr.on('data', (data) => {\r\n//       const str = data.toString();\r\n//       console.log('STDERR ERROR', str);\r\n//     });\r\n//   }).then(async (result) => {\r\n//     await rmFile(cachedFile);\r\n//     return result;\r\n//   });\r\n// }\r\n","import { Element, Literal } from 'hast';\r\nimport { Parent, Root } from 'mdast';\r\nimport { TextDirective } from 'mdast-util-directive';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nimport { Context } from '../context';\r\nimport { rehypeParser } from '../utils/utils';\r\nimport { mmlToSpeech, mmlToSvg } from './mathjax-tex';\r\n\r\nexport function aliasDirectiveToLatexSvg(ctx: Context) {\r\n  return (tree: Root) => {\r\n    visit(tree, 'textDirective', (node: TextDirective) => {\r\n      if (!ctx.mmlStore || ctx.options.noTexSvg) {\r\n        return;\r\n      }\r\n      switch (node.name) {\r\n        case 'inlineMath':\r\n        case 'blockMath': {\r\n          const idx = getTexIdx(node as TextDirective);\r\n          const mml = ctx.mmlStore[idx];\r\n          const svg = renderSvg(mml);\r\n          const properties = {\r\n            ...svg.properties,\r\n            className:\r\n              node.name === 'inlineMath' ? 'inline-math' : 'block-math',\r\n            id: getRefId(mml),\r\n          };\r\n          node.data = {\r\n            hName: svg.tagName,\r\n            hProperties: properties,\r\n            hChildren: svg.children,\r\n          };\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction getTexIdx(node: Parent) {\r\n  const firstChild = node.children[0] as Literal;\r\n  return Number(firstChild.value || 0);\r\n}\r\n\r\nfunction getRefId(mml: string) {\r\n  const match = mml.match(/<mtd.+?id=\"(.*?)\"/);\r\n  if (match === null) {\r\n    return undefined;\r\n  }\r\n  return match[1];\r\n}\r\n\r\nfunction renderSvg(mml: string) {\r\n  const label = mmlToSpeech(mml);\r\n  const svg = mmlToSvg(mml);\r\n  return createAccessibleSvg(svg, label);\r\n}\r\n\r\nfunction createAccessibleSvg(mathjaxSvg: string, label: string = '') {\r\n  const tree = rehypeParser.parse(mathjaxSvg) as Root;\r\n  // @ts-expect-error\r\n  const parent = tree.children[0] as Element;\r\n  const svg = parent.children[0] as Element;\r\n  const properties = svg.properties as Record<string, string>;\r\n\r\n  const newProperties: Record<string, string> = {\r\n    width: properties.width,\r\n    height: properties.height,\r\n    viewBox: properties.viewBox,\r\n    role: 'img',\r\n  };\r\n\r\n  if (label !== '') {\r\n    const uniqueId = `math-${Math.random().toString(16).slice(2)}`;\r\n    newProperties['aria-labelledby'] = uniqueId;\r\n    svg.children.unshift({\r\n      type: 'element',\r\n      tagName: 'title',\r\n      properties: {\r\n        id: uniqueId,\r\n      },\r\n      children: [\r\n        {\r\n          type: 'text',\r\n          value: label,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  svg.properties = newProperties;\r\n  return svg;\r\n}\r\n","import { liteAdaptor } from 'mathjax-full/js/adaptors/liteAdaptor.js';\r\nimport { STATE } from 'mathjax-full/js/core/MathItem.js';\r\nimport { SerializedMmlVisitor } from 'mathjax-full/js/core/MmlTree/SerializedMmlVisitor.js';\r\nimport { RegisterHTMLHandler } from 'mathjax-full/js/handlers/html.js';\r\nimport { HTMLDocument } from 'mathjax-full/js/handlers/html/HTMLDocument.js';\r\nimport { MathML } from 'mathjax-full/js/input/mathml.js';\r\nimport { TeX } from 'mathjax-full/js/input/tex.js';\r\nimport { AllPackages } from 'mathjax-full/js/input/tex/AllPackages.js';\r\nimport { mathjax } from 'mathjax-full/js/mathjax.js';\r\nimport { SVG } from 'mathjax-full/js/output/svg.js';\r\n// @ts-expect-error\r\nimport SRE from 'speech-rule-engine';\r\n\r\nexport function texToMml(tex: string = '') {\r\n  const adaptor = liteAdaptor();\r\n  //  Busproofs requires an output jax, which we aren't using\r\n  const packages = AllPackages.filter((name) => name !== 'bussproofs');\r\n  const input = new TeX({ packages });\r\n  const doc = new HTMLDocument('', adaptor, { InputJax: input });\r\n  const node = doc.convert(tex, { end: STATE.CONVERT });\r\n  const visitor = new SerializedMmlVisitor();\r\n  return visitor.visitTree(node);\r\n}\r\n\r\nexport function mmlToSvg(mml: string) {\r\n  const adaptor = liteAdaptor();\r\n  RegisterHTMLHandler(adaptor);\r\n  const input = new MathML();\r\n  const output = new SVG({ fontCache: 'local' });\r\n  const doc = mathjax.document('', { InputJax: input, OutputJax: output });\r\n  const node = doc.convert(mml, { em: 25 });\r\n  return adaptor.outerHTML(node);\r\n}\r\n\r\nexport function mmlToSpeech(mml: string) {\r\n  return SRE.toSpeech(mml);\r\n}\r\n","import { liteAdaptor } from 'mathjax-full/js/adaptors/liteAdaptor.js';\r\nimport { MathDocument } from 'mathjax-full/js/core/MathDocument.js';\r\nimport * as MathItem from 'mathjax-full/js/core/MathItem.js';\r\nimport { SerializedMmlVisitor } from 'mathjax-full/js/core/MmlTree/SerializedMmlVisitor.js';\r\nimport { RegisterHTMLHandler } from 'mathjax-full/js/handlers/html.js';\r\nimport { TeX } from 'mathjax-full/js/input/tex.js';\r\nimport { AllPackages } from 'mathjax-full/js/input/tex/AllPackages.js';\r\nimport { mathjax } from 'mathjax-full/js/mathjax.js';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { Context } from '../context';\r\nimport { assertNoTexTabular } from '../linter/assert-no-tex-tabular';\r\nimport { failMessage } from '../utils/message';\r\n\r\n// This custom MathJax implementation has had to diverge from the provided demos found\r\n// here: https://github.com/mathjax/MathJax-demos-node, because they are all focused on\r\n// either converting LaTeX on its own or (referencing \"page\" demos) LaTeX embedded in\r\n// HTML, whereas at this stage in the processor we're dealing with LaTeX embedded in\r\n// Markdown. Due to TeX/LaTeX making heavy use of the backslash (\\) character, we need\r\n// to deal with it early as it conflicts with other libraries used later.\r\n\r\n// I use the MathJax \"page\" process as it will pick up LaTeX even without delimiters\r\n// and stores context required for numbered references (based on direct/tex2mml-page).\r\n// However this has a naive HTML handler which will munge HTML (and Python) in some\r\n// cases so I am careful to only mutate TeX and leave the rest of the Markdown alone.\r\n\r\n// I replace the TeX with a placeholder formatted as a Markdown directive, for example\r\n// :inlineMath[21] or :blockMath[42].\r\n\r\n// I convert the TeX to MathML and store it memory for use later (in directive-to-svg.ts).\r\n\r\nexport function texToAliasDirective(file: VFile, ctx: Context) {\r\n  // simple regex tests\r\n  assertNoTexTabular(file);\r\n\r\n  const md = file.value as string;\r\n  const store: string[] = [];\r\n  const adaptor = liteAdaptor();\r\n  const visitor = new SerializedMmlVisitor();\r\n  RegisterHTMLHandler(adaptor);\r\n\r\n  const doc = mathjax.document(md, {\r\n    InputJax: new TeX({\r\n      // Bussproofs requires an output jax\r\n      packages: AllPackages.filter((name) => name !== 'bussproofs'),\r\n      // Allow numbered references\r\n      tags: 'ams',\r\n      // Allow single $ delimiters\r\n      inlineMath: [\r\n        ['$', '$'],\r\n        ['\\\\(', '\\\\)'],\r\n      ],\r\n      displayMath: [\r\n        ['$$', '$$'],\r\n        [`\\\\[`, `\\\\]`],\r\n      ],\r\n    }),\r\n    // wrap verbatim latex with <div class=\"mathjax-ignore\"></div>\r\n    ignoreHtmlClass: 'mathjax-ignore',\r\n    renderActions: {\r\n      typeset: [\r\n        MathItem.STATE.TYPESET,\r\n        ({ math }: MathDocument<any, any, any>) => {\r\n          for (const item of Array.from(math)) {\r\n            let newMarkdown = '';\r\n\r\n            // convert to MathML\r\n            const mml = visitor.visitTree(item.root);\r\n            assertNoMmlError(mml, file);\r\n\r\n            // escaped dollar sign...\r\n            if (item.math === '$') {\r\n              newMarkdown = '$';\r\n            }\r\n\r\n            // double backslash...\r\n            else if (item.math === '\\\\') {\r\n              newMarkdown = '\\\\\\\\';\r\n            }\r\n\r\n            // reference link...\r\n            else if (isReferenceLink(item.math)) {\r\n              const refNum = extractRefNumFromMml(mml, item.math, file);\r\n              const anchor = extractAnchorLinkFromMml(\r\n                mml,\r\n                item.math,\r\n                file,\r\n              );\r\n              newMarkdown = `[${refNum}](${anchor})`;\r\n            }\r\n\r\n            // normal use case (math notation)...\r\n            else {\r\n              store.push(mml);\r\n              const type = item.display ? 'blockMath' : 'inlineMath';\r\n              newMarkdown = `:${type}[${store.length - 1}]`;\r\n            }\r\n\r\n            const tree = adaptor.parse(newMarkdown, 'text/html');\r\n            item.typesetRoot = adaptor.firstChild(adaptor.body(tree));\r\n          }\r\n        },\r\n      ],\r\n    },\r\n  });\r\n\r\n  // add store to ctx\r\n  ctx.mmlStore = store;\r\n\r\n  doc.render();\r\n\r\n  // replace md in VFile\r\n  const result = adaptor.innerHTML(adaptor.body(doc.document));\r\n  file.value = postParse(result);\r\n\r\n  return file;\r\n}\r\n\r\nfunction assertNoMmlError(mml: string, file: VFile) {\r\n  const match = mml.match(/<merror.*?title=\"(.+?)\"/);\r\n  if (match !== null) {\r\n    failMessage(file, `LaTeX error: \"${match[1]}\".`);\r\n  }\r\n}\r\n\r\nfunction isReferenceLink(tex: string) {\r\n  return /^\\\\ref\\{(.+)\\}$/.test(tex);\r\n}\r\n\r\nfunction extractRefNumFromMml(mml: string, tex: string, file: VFile) {\r\n  const match = mml.match(/<mtext>(.+)<\\/mtext>/);\r\n  if (match === null) {\r\n    failMessage(file, `Invalid reference: ${tex}`);\r\n    return;\r\n  }\r\n  if (match[1] === '???') {\r\n    failMessage(\r\n      file,\r\n      `Invalid reference: ${tex}. You may only reference numbered sections.`,\r\n    );\r\n  }\r\n  return match[1] as string;\r\n}\r\n\r\nfunction extractAnchorLinkFromMml(mml: string, tex: string, file: VFile) {\r\n  const match = mml.match(/<mrow href=\"(.+)\" class=\"MathJax_ref\">/);\r\n  if (match === null) {\r\n    failMessage(file, `Reference has no anchor link: ${tex}`);\r\n    return;\r\n  }\r\n  return decodeURIComponent(match[1] || '') as string;\r\n}\r\n\r\nfunction postParse(html: string) {\r\n  let result = html.trim();\r\n  result = unprotectHtml(result);\r\n  result = removeUnresolvedLabels(result);\r\n  result = removeHTMLClosingTags(result);\r\n  return result;\r\n}\r\n\r\n// https://github.com/mathjax/MathJax-src/blob/41565a97529c8de57cb170e6a67baf311e61de13/ts/adaptors/lite/Parser.ts#L399-L403\r\nfunction unprotectHtml(html: string) {\r\n  return html\r\n    .replace(/&amp;/g, '&')\r\n    .replace(/&lt;/g, '<')\r\n    .replace(/&gt;/g, '>');\r\n}\r\n\r\nfunction removeUnresolvedLabels(html: string) {\r\n  return html.replace(/\\\\label{def:.*?}/gm, '');\r\n}\r\n\r\nfunction removeHTMLClosingTags(html: string) {\r\n  return html.replace(/(<\\/\\S+>)+$/, '');\r\n}\r\n","import { Image } from 'mdast';\r\nimport { Node } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { failMessage } from '../utils/message';\r\nimport { checkLocalFileExists } from '../utils/utils';\r\n\r\nexport function assertAssetExists() {\r\n  async function getAssetUrl(node: Image, file: VFile) {\r\n    const url = (node.url || '') as string;\r\n    if (!file.dirname) {\r\n      throw new Error('VFile dirname undefined');\r\n    }\r\n    if (!url.startsWith('http')) {\r\n      const exists = await checkLocalFileExists(url);\r\n      if (!exists) {\r\n        failMessage(file, `No asset found at ${url}`, node.position);\r\n      }\r\n    }\r\n  }\r\n\r\n  return async (tree: Node, file: VFile) => {\r\n    const transformations: Promise<void>[] = [];\r\n    visit(tree, 'image', (node) => {\r\n      transformations.push(getAssetUrl(node, file));\r\n    });\r\n    await Promise.all(transformations);\r\n  };\r\n}\r\n","import { Root } from 'mdast';\r\nimport { ContainerDirective } from 'mdast-util-directive';\r\nimport { visit } from 'unist-util-visit';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { failMessage } from '../utils/message';\r\n\r\nexport function assertColumnStructure() {\r\n  return (tree: Root, file: VFile) => {\r\n    visit(\r\n      tree,\r\n      'containerDirective',\r\n      (node: ContainerDirective, index, _parent) => {\r\n        if (node.name === 'columns') {\r\n          const children = node.children as ContainerDirective[];\r\n          const columns = children.filter((o) => o.name === 'column');\r\n          if (columns.length < 2) {\r\n            failMessage(\r\n              file,\r\n              'Columns must contain at least 2 columns',\r\n              node.position,\r\n            );\r\n          }\r\n        }\r\n        if (node.name === 'column') {\r\n          const parent = _parent as ContainerDirective;\r\n          if (!parent || parent.name !== 'columns') {\r\n            failMessage(\r\n              file,\r\n              'Column must be nested inside columns',\r\n              node.position,\r\n            );\r\n          }\r\n        }\r\n      },\r\n    );\r\n  };\r\n}\r\n","import { Root } from 'mdast';\r\nimport { visit } from 'unist-util-visit';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { failMessage } from '../utils/message';\r\n\r\nexport function assertNoH1() {\r\n  return (tree: Root, file: VFile) => {\r\n    visit(tree, 'heading', (node) => {\r\n      if (node.depth === 1) {\r\n        failMessage(\r\n          file,\r\n          'Level 1 heading found. Only one Level 1 heading can be used in the document and it is automatically generated from .yaml file and should not be found in .Rmd file.  Please use Level 2 (## Example) and below.',\r\n          node.position,\r\n        );\r\n        return;\r\n      }\r\n    });\r\n  };\r\n}\r\n","import { VFile } from 'vfile';\r\n\r\nimport { warnMessage } from '../utils/message';\r\n\r\nexport function assertNoImageAttributes(file: VFile) {\r\n  const md = file.value as string;\r\n  md.split('\\n').forEach((line, idx) => {\r\n    const match = line.match(/!\\[.*\\]\\(.*\\)({.+})/);\r\n    if (match !== null) {\r\n      warnMessage(\r\n        file,\r\n        `image attributes are not supported: ${match[1]}`,\r\n        {\r\n          start: {\r\n            line: idx + 1,\r\n            column: 0,\r\n          },\r\n          end: {\r\n            line: idx + 1,\r\n            column: line.length,\r\n          },\r\n        }\r\n      );\r\n    }\r\n  });\r\n}\r\n","import { VFile } from 'vfile';\r\n\r\nimport { failMessage } from '../utils/message';\r\n\r\n// TODO: could possibly try converting to array here\r\n// https://stackoverflow.com/questions/51803244\r\n\r\nexport function assertNoTexTabular(file: VFile) {\r\n  const md = file.value as string;\r\n  md.split('\\n').forEach((line, idx) => {\r\n    if (line.includes('\\\\begin{tabular}')) {\r\n      failMessage(\r\n        file,\r\n        'LaTeX tables are not allowed, please use Markdown syntax',\r\n        {\r\n          start: {\r\n            line: idx + 1,\r\n            column: 0,\r\n          },\r\n          end: {\r\n            line: idx + 1,\r\n            column: line.length,\r\n          },\r\n        }\r\n      );\r\n    }\r\n  });\r\n}\r\n","import { Root } from 'mdast';\r\nimport { ContainerDirective } from 'mdast-util-directive';\r\nimport { visit } from 'unist-util-visit';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { failMessage } from '../utils/message';\r\n\r\nexport function assertProgramSwitcherStructure() {\r\n  return (tree: Root, file: VFile) => {\r\n    let count = 0;\r\n    visit(tree, 'containerDirective', (node, index, _parent) => {\r\n      if (node.name === 'task') {\r\n        count++;\r\n        const children = node.children as ContainerDirective[];\r\n        const answers = children.filter((o) => o.name === 'answer');\r\n        if (answers.length < 1) {\r\n          failMessage(file, `Task ${count} has no answer`, node.position);\r\n        }\r\n        if (answers.length > 1) {\r\n          failMessage(file, 'Task has multiple answers', node.position);\r\n        }\r\n      }\r\n      if (node.name === 'answer') {\r\n        const parent = _parent as ContainerDirective;\r\n        if (!parent || parent.name !== 'task') {\r\n          failMessage(\r\n            file,\r\n            'Answer must be nested inside task',\r\n            node.position,\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n","import { Root } from 'mdast';\r\nimport { ContainerDirective } from 'mdast-util-directive';\r\nimport { visit } from 'unist-util-visit';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { failMessage } from '../utils/message';\r\n\r\nexport function assertTaskAnswerStructure() {\r\n  return (tree: Root, file: VFile) => {\r\n    let count = 0;\r\n    visit(tree, 'containerDirective', (node, index, _parent) => {\r\n      if (node.name === 'task') {\r\n        count++;\r\n        const children = node.children as ContainerDirective[];\r\n        const answers = children.filter((o) => o.name === 'answer');\r\n        if (answers.length < 1) {\r\n          failMessage(file, `Task ${count} has no answer`, node.position);\r\n        }\r\n        if (answers.length > 1) {\r\n          failMessage(file, 'Task has multiple answers', node.position);\r\n        }\r\n      }\r\n      if (node.name === 'answer') {\r\n        const parent = _parent as ContainerDirective;\r\n        if (!parent || parent.name !== 'task') {\r\n          failMessage(\r\n            file,\r\n            'Answer must be nested inside task',\r\n            node.position,\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n","import { Literal, Parent } from 'mdast';\r\nimport { Root } from 'mdast';\r\nimport { LeafDirective } from 'mdast-util-directive';\r\nimport { Node } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { failMessage } from '../utils/message';\r\n\r\nexport function assertVideoAttributes() {\r\n  return async (tree: Root, file: VFile) => {\r\n    visit(tree, 'leafDirective', (node: LeafDirective) => {\r\n      if (node.name === 'video') {\r\n        if (!node.attributes?.id) {\r\n          failMessage(file, 'id attribute is required', node.position);\r\n        }\r\n        if (!node.attributes?.duration) {\r\n          failMessage(\r\n            file,\r\n            'duration attribute is required',\r\n            node.position,\r\n          );\r\n        }\r\n\r\n        const title = getTitle(node);\r\n        if (!title) {\r\n          failMessage(file, 'title is required', node.position);\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction getTitle(node: Parent) {\r\n  const children = node.children as Node[];\r\n  const firstChild = children[0] as Literal;\r\n  return (firstChild?.value || '') as string;\r\n}\r\n","import { Root } from 'mdast';\r\nimport { ContainerDirective } from 'mdast-util-directive';\r\nimport { visit } from 'unist-util-visit';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { failMessage } from '../utils/message';\r\n\r\nexport function assertWeblinkTarget() {\r\n  return (tree: Root, file: VFile) => {\r\n    visit(tree, 'containerDirective', (node: ContainerDirective) => {\r\n      if (node.name === 'weblink') {\r\n        if (node.attributes?.target === undefined) {\r\n          failMessage(\r\n            file,\r\n            'Weblink has no target attribute',\r\n            node.position,\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n","import lintAltText from '@double-great/remark-lint-alt-text';\r\n// @ts-expect-error\r\nimport lintLinkText from '@mapbox/remark-lint-link-text';\r\n// import dictionary from 'dictionary-en-gb';\r\n// import remark2retext from 'remark-retext';\r\n// import english from 'retext-english';\r\n// import spell from 'retext-spell';\r\nimport { unified } from 'unified';\r\nimport { Node } from 'unist';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { Context } from '../context';\r\nimport { assertAssetExists } from './assert-asset-exists';\r\nimport { assertColumnStructure } from './assert-columns';\r\nimport { assertNoH1 } from './assert-no-h1';\r\nimport { assertProgramSwitcherStructure } from './assert-program-switcher';\r\nimport { assertTaskAnswerStructure } from './assert-task-answer';\r\nimport { assertVideoAttributes } from './assert-video-attributes';\r\nimport { assertWeblinkTarget } from './assert-weblink-target';\r\nimport { lintLatex } from './lint-latex';\r\nimport { printReport, reportHasFatalErrors } from './report';\r\nimport { Root } from 'mdast';\r\n\r\nexport function reportErrors(files: VFile[], ctx: Context) {\r\n  if (!ctx.options.noReport) {\r\n    printReport(files, ctx);\r\n  }\r\n  if (reportHasFatalErrors(files)) {\r\n    if (ctx.options.noReport) {\r\n      printReport(files, {\r\n        ...ctx,\r\n        options: {\r\n          ...ctx.options,\r\n          reportOnlyErrors: true,\r\n        },\r\n      });\r\n    }\r\n    console.log('Report has fatal errors');\r\n    if (ctx.options.force) {\r\n      console.log('Compiling using force option...');\r\n    } else {\r\n      process.exit(1);\r\n    }\r\n  }\r\n}\r\n\r\nexport async function createReport(\r\n  file: VFile,\r\n  mdast: Node,\r\n  ctx: Context,\r\n) {\r\n  const processor = unified()\r\n    .use(assertAssetExists)\r\n    .use(assertVideoAttributes)\r\n    .use(assertTaskAnswerStructure)\r\n    .use(assertProgramSwitcherStructure)\r\n    .use(assertColumnStructure)\r\n    .use(assertWeblinkTarget)\r\n    .use(assertNoH1)\r\n    .use(lintLatex)\r\n    // @ts-expect-error\r\n    .use(lintAltText)\r\n    .use(lintLinkText);\r\n\r\n  // if (ctx.options.spelling) {\r\n  //   const retextProcessor = unified()\r\n  //     .use(english)\r\n  //     .use(spell, { dictionary, max: 1 });\r\n  //   processor.use(remark2retext, retextProcessor);\r\n  // }\r\n\r\n  processor.run(mdast as Root, file);\r\n}\r\n","import { exec } from 'child_process';\r\n\r\nimport { Literal, Root } from 'mdast';\r\nimport { Position } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\nimport { VFile } from 'vfile';\r\n\r\nexport function lintLatex() {\r\n  return async (tree: Root, file: VFile) => {\r\n    const transformations: Promise<void>[] = [];\r\n\r\n    visit(tree, 'math', (node: Literal) => {\r\n      transformations.push(chktex(node, file));\r\n    });\r\n\r\n    await Promise.all(transformations);\r\n    return tree;\r\n  };\r\n}\r\n\r\nasync function chktex(node: Literal, file: VFile) {\r\n  return new Promise<void>((resolve, reject) => {\r\n    exec(`chktex -q <<< \"${node.value}\"`, (err, response) => {\r\n      if (err) {\r\n        reject(err);\r\n      } else {\r\n        const messages = formatResponse(response);\r\n        const position = node.position as Position;\r\n        messages.forEach(({ line, column, message }) => {\r\n          file.message(message, {\r\n            line: position.start.line + line,\r\n            column: position.start.column + column,\r\n          });\r\n        });\r\n        resolve();\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\ntype Message = {\r\n  line: number;\r\n  column: number;\r\n  message: string;\r\n};\r\n\r\nfunction formatResponse(response: string) {\r\n  if (response.trim() === '') {\r\n    return [];\r\n  }\r\n\r\n  function formatMessage(message: string) {\r\n    return message.replace(/'/g, '').replace(/`/g, '');\r\n  }\r\n\r\n  return response\r\n    .split(/Warning \\d+ in stdin line /)\r\n    .filter(Boolean)\r\n    .reduce((acc: Message[], s) => {\r\n      const [key, value] = s.split(':');\r\n      const line = Number(key);\r\n      const trimmed = value.trim();\r\n\r\n      const match = trimmed.match(/(.*)\\n(.*)\\n(\\s*)\\^/m);\r\n      if (Array.isArray(match)) {\r\n        const message = formatMessage(match[1]);\r\n        acc.push({\r\n          line,\r\n          column: match[3].length,\r\n          message: `${message}\\n\\n${match[2]}\\n${match[3]}^`,\r\n        });\r\n      } else {\r\n        acc.push({\r\n          line,\r\n          column: 0,\r\n          message: formatMessage(trimmed),\r\n        });\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n}\r\n","import chalk from 'chalk';\r\nimport figures from 'figures';\r\nimport { VFile } from 'vfile';\r\nimport { VFileMessage } from 'vfile-message';\r\n\r\nimport { Context } from '../context';\r\nimport { MessageStatus } from '../utils/message';\r\n\r\nexport type Report = {\r\n  failed: boolean;\r\n  files: ReportFile[];\r\n};\r\n\r\nexport type ReportFile = Omit<VFile, 'messages'> & {\r\n  messages: ReportMessage[];\r\n};\r\n\r\nexport type ReportMessage = {\r\n  status: MessageStatus;\r\n  position: string;\r\n  reason: string;\r\n  line: number;\r\n  column: number;\r\n};\r\n\r\nexport function printReport(files: VFile[], ctx: Context) {\r\n  const { reportOnlyErrors, shouldFail } = ctx.options;\r\n\r\n  if (reportOnlyErrors && shouldFail) {\r\n    return;\r\n  }\r\n\r\n  for (const file of files) {\r\n    // console.log(file.messages);\r\n    const messages = reportOnlyErrors\r\n      ? failingMessages(file.messages as any)\r\n      : file.messages;\r\n\r\n    if (messages.length !== 0) {\r\n      // if (file.path !== undefined) {\r\n      //   console.log(`\\n${getFilePath(file.path)}`);\r\n      // }\r\n      messages.forEach((message) => {\r\n        printMessage(message as any);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport function reportHasFatalErrors(files: VFile[]) {\r\n  return files.some((file) => {\r\n    const messages = file.messages as unknown as ReportMessage[];\r\n    return messages.some(\r\n      (message) => message.status === MessageStatus.fail,\r\n    );\r\n  });\r\n}\r\n\r\nexport function reportHasWarnings(files: VFile[]) {\r\n  return files.some((file) => {\r\n    const messages = file.messages as unknown as ReportMessage[];\r\n    return messages.some(\r\n      (message) => message.status === MessageStatus.warning,\r\n    );\r\n  });\r\n}\r\n\r\nfunction failingMessages(_messages: VFileMessage[]) {\r\n  const messages = _messages as unknown as ReportMessage[];\r\n  return messages.filter(\r\n    (o) => o.status === MessageStatus.fail,\r\n  ) as unknown as VFileMessage[];\r\n}\r\n\r\nfunction printMessage(_message: VFileMessage) {\r\n  const message = _message as unknown as ReportMessage;\r\n  // console.log(message);\r\n  const status = message.status;\r\n  const position = chalk.grey(`${message.line}:${message.column}`);\r\n  const reason = formatReason(message.reason, status);\r\n  console.log(`${formatStatus(status)}  ${position}  ${reason}`);\r\n}\r\n\r\n// function getFilePath(filePath: string) {\r\n//   return path.isAbsolute(filePath)\r\n//     ? filePath\r\n//     : path.join(process.cwd(), filePath);\r\n// }\r\n\r\nfunction formatStatus(status: MessageStatus) {\r\n  const statusColour = getStatusColour(status);\r\n  switch (status) {\r\n    case MessageStatus.fail:\r\n      return statusColour(figures.cross);\r\n    default:\r\n      return statusColour(figures.warning);\r\n    // TODO: fail on unsupported status?\r\n  }\r\n}\r\n\r\nfunction formatReason(reason: string, status: MessageStatus) {\r\n  const statusColour = getStatusColour(status);\r\n  const [first, ...rest] = reason.split('\\n');\r\n  const formattedFirst = statusColour(first);\r\n  const formattedRest = rest.map((line) => chalk.grey(line));\r\n  return [formattedFirst, ...formattedRest].join('\\n');\r\n}\r\n\r\nfunction getStatusColour(status: MessageStatus) {\r\n  switch (status) {\r\n    case MessageStatus.fail:\r\n      return chalk.red;\r\n    default:\r\n      return chalk.yellow;\r\n  }\r\n}\r\n","import {\r\n  Element,\r\n  ElementContent,\r\n  Parent as HastParent,\r\n  Text,\r\n  Node,\r\n} from 'hast';\r\nimport startCase from 'lodash/startCase.js';\r\nimport { Root } from 'mdast';\r\nimport { ContainerDirective } from 'mdast-util-directive';\r\nimport { toHast } from 'mdast-util-to-hast';\r\nimport { Parent } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nimport { Context } from '../context';\r\nimport { createCounter } from '../utils/counter';\r\n\r\nexport function boxouts(refStore: Context['refStore']) {\r\n  const counter = createCounter();\r\n  return async (tree: Node) => {\r\n    visit(tree, 'containerDirective', (node: ContainerDirective) => {\r\n      switch (node.name) {\r\n        case 'example':\r\n        case 'error':\r\n        case 'supplement':\r\n        case 'background':\r\n        case 'definition':\r\n        case 'weblink':\r\n        case 'theorem':\r\n        case 'task':\r\n        case 'proposition':\r\n        case 'answer': {\r\n          const name = node.name as string;\r\n          const count = counter.increment(name);\r\n          node.data = {\r\n            hProperties: createAttributes(node, count, refStore),\r\n            hChildren: createBoxout(node, count) as any,\r\n          };\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction createAttributes(\r\n  node: ContainerDirective,\r\n  count: number,\r\n  refStore: Context['refStore'],\r\n) {\r\n  const name = node.name as string;\r\n  const id = `${name}-${count}`;\r\n\r\n  const attributes = node.attributes as Record<string, string>;\r\n  const className = ['boxout', name];\r\n  if (attributes.icon) {\r\n    className.push(`${attributes.icon}-icon`);\r\n  }\r\n\r\n  if (\r\n    node.attributes?.label !== undefined &&\r\n    node.attributes?.label !== null\r\n  ) {\r\n    refStore[node.attributes.label] = id;\r\n  }\r\n\r\n  return { className, id };\r\n}\r\n\r\nexport function createBoxout(\r\n  node: ContainerDirective,\r\n  count: number,\r\n): Node[] {\r\n  const typeTitle = createBoxoutType(node, count);\r\n  const titles = [typeTitle];\r\n\r\n  const titleValue = getTitleValue(node);\r\n  if (titleValue.length > 0) {\r\n    const title = createTitle(node);\r\n    titles.push(title);\r\n  }\r\n\r\n  const content = node.children\r\n    // @ts-expect-error\r\n    .filter((o) => !o.data?.directiveLabel)\r\n    .filter((o) => (o as ContainerDirective).name !== 'answer')\r\n\r\n    .map((o) => toHast(o, { allowDangerousHtml: true }))\r\n    .filter(Boolean) as HastParent[];\r\n\r\n  if (node.name === 'task') {\r\n    const answer = node.children.find(\r\n      (o) => o.type === 'containerDirective' && o.name === 'answer',\r\n    );\r\n    if (answer) {\r\n      const answerHast = createAnswer(answer as ContainerDirective, count);\r\n      content.push(answerHast as HastParent);\r\n    }\r\n  }\r\n\r\n  return [...titles, ...content];\r\n}\r\n\r\nfunction createAnswer(node: ContainerDirective, count: number) {\r\n  const { children } = toHast(node) as HastParent;\r\n  return {\r\n    type: 'element',\r\n    tagName: 'div',\r\n    properties: {\r\n      className: ['answer'],\r\n    },\r\n    children: [\r\n      {\r\n        type: 'element',\r\n        tagName: 'span',\r\n        properties: {\r\n          className: ['answer-trigger'],\r\n          'data-answer-id': count,\r\n        },\r\n        children: [\r\n          {\r\n            type: 'text',\r\n            value: 'Show answer',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        type: 'element',\r\n        tagName: 'div',\r\n        properties: {\r\n          className: ['answer-reveal'],\r\n          id: `answer-${count}`,\r\n        },\r\n        children,\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction createBoxoutType(\r\n  node: ContainerDirective,\r\n  count: number,\r\n): Element {\r\n  const name = node.name as string;\r\n  const label = startCase(name);\r\n  let value = `${label} ${count}`;\r\n\r\n  if (node.attributes?.optional !== undefined) {\r\n    value += ` (Optional)`;\r\n  }\r\n\r\n  return {\r\n    type: 'element',\r\n    tagName: 'span',\r\n    properties: {\r\n      className: ['type'],\r\n    },\r\n    children: [\r\n      {\r\n        type: 'text',\r\n        value,\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction createTitle(node: ContainerDirective): Element {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'h3',\r\n    children: createTitleValue(node) as ElementContent[],\r\n    properties: {},\r\n  };\r\n}\r\n\r\nfunction createTitleValue(node: ContainerDirective) {\r\n  const name = node.name as string;\r\n  const newRoot = {\r\n    type: 'root',\r\n    children: getTitleValue(node),\r\n  };\r\n  const { children = [] } = toHast(newRoot as Root) as Parent;\r\n  if (name !== 'weblink') {\r\n    return children;\r\n  }\r\n  const { target } = node.attributes as Record<string, string>;\r\n  return [\r\n    {\r\n      type: 'element',\r\n      tagName: 'a',\r\n      properties: {\r\n        href: target,\r\n        target: '_blank',\r\n        className: ['target'],\r\n      },\r\n      children,\r\n    },\r\n  ];\r\n}\r\n\r\nfunction getTitleValue(node: ContainerDirective): Node[] {\r\n  const children = (node.children || []) as Node[];\r\n  const parent = (children[0] || {}) as Parent;\r\n\r\n  // @ts-expect-error\r\n  if (!parent.data?.directiveLabel) {\r\n    if (node.name === 'weblink') {\r\n      const attributes = node.attributes as Record<string, string>;\r\n      return [\r\n        {\r\n          type: 'text',\r\n          value: attributes.target,\r\n        } as Text,\r\n      ];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  return parent.children || [];\r\n}\r\n","import { Element } from 'hast';\r\nimport { Literal } from 'mdast';\r\nimport { LeafDirective } from 'mdast-util-directive';\r\nimport { Node } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { failMessage } from '../utils/message';\r\n\r\nexport function browserWindow() {\r\n  return (tree: Node, file: VFile) => {\r\n    visit(tree, 'leafDirective', (node: LeafDirective) => {\r\n      if (node.name === 'browser') {\r\n        template(node, file);\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction template(node: LeafDirective, file: VFile) {\r\n  const url = node.attributes?.url || '';\r\n  const alt = node.attributes?.alt || '';\r\n  const imagePath = getImagePath(node, file);\r\n\r\n  const browser = createBrowserWindow(imagePath, url, alt);\r\n  const caption = createCaption(alt);\r\n\r\n  Object.assign(node, {\r\n    type: 'browser-window',\r\n    data: {\r\n      hName: 'figure',\r\n      hProperties: {\r\n        className: ['browser'],\r\n      },\r\n      hChildren: [browser, caption],\r\n    },\r\n  });\r\n}\r\n\r\nfunction createBrowserWindow(\r\n  imagePath: string,\r\n  url: string,\r\n  alt: string,\r\n): Element {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'div',\r\n    properties: {\r\n      className: 'browser-window',\r\n    },\r\n    children: [\r\n      {\r\n        type: 'text',\r\n        value: '\\n',\r\n      },\r\n      {\r\n        type: 'element',\r\n        tagName: 'div',\r\n        properties: {\r\n          className: 'browser-window-wrapper',\r\n        },\r\n        children: [\r\n          createBrowserHeader(url),\r\n          {\r\n            type: 'text',\r\n            value: '\\n',\r\n          },\r\n          {\r\n            type: 'element',\r\n            tagName: 'div',\r\n            properties: {\r\n              className: 'browser-window-content',\r\n            },\r\n            children: [\r\n              {\r\n                type: 'element',\r\n                tagName: 'img',\r\n                properties: {\r\n                  src: imagePath,\r\n                  alt,\r\n                },\r\n                children: [],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            type: 'text',\r\n            value: '\\n',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction createBrowserHeader(url: string): Element {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'div',\r\n    properties: {\r\n      className: 'browser-window-header',\r\n    },\r\n    children: [\r\n      {\r\n        type: 'element',\r\n        tagName: 'div',\r\n        properties: {\r\n          className: 'browser-window-address-bar',\r\n        },\r\n        children: [\r\n          {\r\n            type: 'text',\r\n            value: url?.trim() || '',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction createCaption(alt: string): Element | null {\r\n  if (alt.trim() === '') {\r\n    return null;\r\n  }\r\n  return {\r\n    type: 'element',\r\n    tagName: 'figcaption',\r\n    properties: {},\r\n    children: [\r\n      {\r\n        type: 'element',\r\n        tagName: 'a',\r\n        properties: {},\r\n        children: [\r\n          {\r\n            type: 'text',\r\n            value: ` ${alt}`,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction getImagePath(node: LeafDirective, file: VFile) {\r\n  const children = node.children as Node[];\r\n  const firstChild = children[0] as Literal;\r\n  const title = firstChild?.value || '';\r\n  if (title.trim() === '') {\r\n    failMessage(file, 'Video has no title', node.position);\r\n  }\r\n  return title;\r\n}\r\n","import { Properties, Text } from 'hast';\r\nimport { Code } from 'mdast';\r\nimport { RefractorElement, refractor } from 'refractor/lib/all.js';\r\nimport { Node } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { Context } from '../context';\r\n\r\nexport function codeBlocks(ctx: Context) {\r\n  return async (tree: Node, file: VFile) => {\r\n    visit(tree, 'code', (node: Code) => {\r\n      customCode(node, ctx, file);\r\n    });\r\n  };\r\n}\r\n\r\nfunction customCode(node: Code, ctx: Context, file: VFile) {\r\n  const language = parseLanguage(node);\r\n  const klass = parseClass(node);\r\n\r\n  const codeProps: Properties = {};\r\n  const children: (RefractorElement | Text)[] = [];\r\n  const trimmed = node.value.trim();\r\n\r\n  // console.dir(node, { depth: null });\r\n\r\n  if (ctx.options.noSyntaxHighlight || language === '') {\r\n    children.push({\r\n      type: 'text',\r\n      value: trimmed,\r\n    });\r\n  } else {\r\n    const highlighted = refractor.highlight(trimmed, language);\r\n    children.push(...highlighted.children);\r\n  }\r\n\r\n  Object.assign(node, {\r\n    type: 'custom-code',\r\n    data: {\r\n      hName: 'div',\r\n      hProperties: {\r\n        className: ['code-wrapper', klass],\r\n      },\r\n      hChildren: [\r\n        addConsoleHeading(klass),\r\n        {\r\n          type: 'element',\r\n          tagName: 'pre',\r\n          children: [\r\n            {\r\n              type: 'element',\r\n              tagName: 'code',\r\n              properties: codeProps,\r\n              children,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  });\r\n}\r\n\r\nfunction addConsoleHeading(klass: string) {\r\n  if (klass === 'r-output' || klass === 'r-error-output') {\r\n    return {\r\n      type: 'element',\r\n      tagName: 'h6',\r\n      properties: {\r\n        className: 'console-heading',\r\n      },\r\n      children: [\r\n        {\r\n          type: 'text',\r\n          value: 'R Console',\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  if (klass === 'python-output' || klass === 'python-error-output') {\r\n    return {\r\n      type: 'element',\r\n      tagName: 'h6',\r\n      properties: {\r\n        className: 'console-heading',\r\n      },\r\n      children: [\r\n        {\r\n          type: 'text',\r\n          value: 'Python Console',\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction parseLanguage(node: Code) {\r\n  const trimmed = (node.lang || '').trim();\r\n\r\n  if (trimmed === 'plaintext' || trimmed.endsWith('-output')) {\r\n    return '';\r\n  }\r\n  if (trimmed.startsWith('{')) {\r\n    const match = trimmed.match(/.lang-(\\w+)/);\r\n    if (match === null) {\r\n      return '';\r\n    }\r\n    return match[1].toLowerCase();\r\n  }\r\n  return trimmed.toLowerCase();\r\n}\r\n\r\nfunction parseClass({ lang, meta }: Code) {\r\n  const trimmed = (lang || '').trim();\r\n  if (trimmed.endsWith('-output')) {\r\n    return trimmed;\r\n  }\r\n  const m = !meta || meta === 'null' ? '' : meta;\r\n  const combined = `${trimmed} ${m}`.trim();\r\n  if (!combined.startsWith('{.')) {\r\n    return '';\r\n  }\r\n  return combined;\r\n}\r\n","import { BlockContent, Text } from 'mdast';\r\nimport { ContainerDirective } from 'mdast-util-directive';\r\nimport { Node, Parent } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nexport function columns() {\r\n  return (tree: Node) => {\r\n    visit(tree, 'containerDirective', (node: ContainerDirective) => {\r\n      if (node.name === 'columns') {\r\n        node.data = {\r\n          hProperties: {\r\n            className: 'columns',\r\n          },\r\n        };\r\n      } else if (node.name === 'column') {\r\n        node.data = {\r\n          hProperties: {\r\n            className: 'column',\r\n          },\r\n        };\r\n\r\n        if (node.attributes?.imgsrc) {\r\n          const altText = getAltText(node);\r\n\r\n          const img = {\r\n            type: 'image',\r\n            url: node.attributes.imgsrc,\r\n            alt: altText,\r\n          } as unknown as BlockContent;\r\n\r\n          if (altText) {\r\n            Object.assign(node.children[0], img);\r\n          } else {\r\n            node.children.unshift(img);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction getAltText(column: ContainerDirective) {\r\n  const firstChild = column.children[0] as Parent;\r\n  if (!firstChild) {\r\n    return false;\r\n  }\r\n\r\n  const firstChildChildren = firstChild.children as Node[];\r\n  if (!Array.isArray(firstChildChildren)) {\r\n    return false;\r\n  }\r\n\r\n  const firstChildFirstChild = firstChildChildren[0] as Text;\r\n  if (!firstChildFirstChild) {\r\n    return false;\r\n  }\r\n\r\n  return firstChildFirstChild.value;\r\n}\r\n","import { Root } from 'mdast';\r\nimport { unified } from 'unified';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { Context } from '../context';\r\nimport { boxouts } from './boxouts';\r\nimport { moveAnswersToEnd } from './move-answers-to-end';\r\nimport { programSwitcher } from './program-switcher';\r\nimport { languageSwitcher } from './language-switcher';\r\nimport { plotAccessibilitySwitcher } from './plot-accessibility-switcher';\r\n\r\nexport async function combinedMdastPhase(\r\n  mdast: Root,\r\n  ctx: Context,\r\n  file: VFile,\r\n  targetPdf?: boolean,\r\n) {\r\n  const processor = unified()\r\n    .use(programSwitcher, ctx)\r\n    .use(languageSwitcher, ctx)\r\n    .use(plotAccessibilitySwitcher, ctx)\r\n    .use(boxouts, ctx.refStore);\r\n\r\n  if (targetPdf) {\r\n    processor.use(moveAnswersToEnd);\r\n  }\r\n\r\n  return processor.run(mdast, file) as Promise<Root>;\r\n}\r\n","import path from 'path';\r\n\r\nimport { Literal, Root } from 'mdast';\r\nimport { visit } from 'unist-util-visit';\r\nimport { remove } from 'unist-util-remove';\r\n\r\nimport { Context } from '../context';\r\nimport { LeafDirective } from 'mdast-util-directive';\r\n\r\nexport function embedAssetUrl(ctx: Context) {\r\n  return async (tree: Root) => {\r\n    let activeDir = '';\r\n\r\n    // nodes need to be visited in the correct order\r\n    // to derive the document directory\r\n    visit(tree, (node, index, parent) => {\r\n      // to ensure relative paths to assets across multiple .Rmd files\r\n      if (node.type === 'leafDirective' && node.name === 'directory') {\r\n        const firstChild = node.children[0] as Literal;\r\n        activeDir = firstChild.value || '';\r\n      }\r\n\r\n      if (node.type === 'image') {\r\n        const url = getPath(node.url, activeDir, ctx);\r\n        node.url = url;\r\n      }\r\n\r\n      // also fix for browser template\r\n      if (node.type === 'leafDirective' && node.name === 'browser') {\r\n        const firstChild = node.children[0] as Literal;\r\n        firstChild.value = getPath(firstChild.value, activeDir, ctx);\r\n      }\r\n\r\n      // also fix for raw html nodes sometimes output by knitr\r\n      if (node.type === 'html') {\r\n        const props = getProps(node.value);\r\n        if (props !== null && props.src) {\r\n          const { src, ...otherProps } = props;\r\n          Object.assign(node, {\r\n            type: 'image',\r\n            url: getPath(src, activeDir, ctx),\r\n            value: '',\r\n            data: otherProps,\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // remove the directory leafDirective node from the tree\r\n    remove(tree, (node) => {\r\n      if (node.type === 'leafDirective') {\r\n        const directive = node as LeafDirective;\r\n        return directive.name === 'directory';\r\n      }\r\n      return false;\r\n    });\r\n  };\r\n}\r\n\r\nfunction getPath(url: string, dirname: string, ctx: Context) {\r\n  if (ctx.options.noEmbedAssetUrl) {\r\n    return url;\r\n  }\r\n  if (path.isAbsolute(url) || url.startsWith('http')) {\r\n    return url;\r\n  }\r\n  // pythons matplotlib appears to assign plot images a path\r\n  // relative to the project root, whereas all other libraries use\r\n  // an absolute path.\r\n  if (url.startsWith('cache')) {\r\n    return path.join(ctx.cacheDir, url.replace('cache', ''));\r\n  }\r\n  return path.join(dirname, url);\r\n}\r\n\r\nfunction getProps(value: string) {\r\n  const matchImg = value.match(/^<img.*?src=\"(.+?)\".*?>$/);\r\n  if (matchImg !== null) {\r\n    return propsToObject(value.slice(5, -1));\r\n  }\r\n  const matchPdf = value.match(/^<embed.*?src=\"(.+?)\".*?>$/);\r\n  if (matchPdf !== null) {\r\n    return propsToObject(value.slice(7, -1));\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction propsToObject(str: string) {\r\n  return str\r\n    .split(/(\\w+)=\"(.*?)\"/)\r\n    .filter((s) => s.trim() !== '')\r\n    .reduce((acc: Record<string, string>, value, idx, arr) => {\r\n      if (idx % 2 === 1) {\r\n        const key = arr[idx - 1];\r\n        acc[key] = value;\r\n      }\r\n      return acc;\r\n    }, {});\r\n}\r\n","import { Code } from 'mdast';\r\nimport { Node } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nexport function gitGraph() {\r\n  return (tree: Node) => {\r\n    let counter = 0;\r\n    visit(tree, 'code', (node: Code) => {\r\n      if (node.lang === 'gitgraph') {\r\n        createGitGraph(node, ++counter);\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction createGitGraph(node: Code, counter: number) {\r\n  const id = `gitgraph-${counter}`;\r\n  const options = createDefaultOptions();\r\n  Object.assign(node, {\r\n    type: 'gitgraph',\r\n    data: {\r\n      hName: 'div',\r\n      hProperties: {\r\n        className: 'gitgraph',\r\n      },\r\n      hChildren: [\r\n        {\r\n          type: 'text',\r\n          value: '\\n',\r\n        },\r\n        {\r\n          type: 'element',\r\n          tagName: 'div',\r\n          properties: { id: `gitgraph-${counter}` },\r\n        },\r\n        {\r\n          type: 'text',\r\n          value: '\\n',\r\n        },\r\n        // this will need to be \"singleton\" inlined\r\n        {\r\n          type: 'element',\r\n          tagName: 'script',\r\n          properties: {\r\n            src: 'https://cdn.jsdelivr.net/npm/@gitgraph/js',\r\n          },\r\n          children: [],\r\n        },\r\n        {\r\n          type: 'text',\r\n          value: '\\n',\r\n        },\r\n        {\r\n          type: 'element',\r\n          tagName: 'script',\r\n          children: [\r\n            {\r\n              type: 'text',\r\n              value: [\r\n                '',\r\n                // The global template js (template/src/index.ts) emits a custom event\r\n                // 'template-ready' when initialised.  This is handy as the document\r\n                // gets serveral <html> element classes added to it which causes re-renders.\r\n                // Here, we wait for this custom event before rendering the gitgraphs,\r\n                // and are careful to define all variables inside the the event callback\r\n                `document.documentElement.addEventListener('template-ready', () => {`,\r\n                '',\r\n                `const graphContainer = document.getElementById(\"${id}\");`,\r\n                `const gitgraph = GitgraphJS.createGitgraph(graphContainer, ${options});`,\r\n                `${node.value}`,\r\n                '',\r\n                `})`,\r\n                '',\r\n              ].join('\\n'),\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          type: 'text',\r\n          value: '\\n',\r\n        },\r\n      ],\r\n    },\r\n  });\r\n}\r\n\r\nfunction createDefaultOptions() {\r\n  return JSON.stringify({\r\n    // orientation: 'vertical-reverse',\r\n    template: {\r\n      colors: ['#0075b0', '#00843d', '#7d2239', '#951272', '#7a6855'],\r\n      branch: {\r\n        color: '#ccc',\r\n        lineWidth: 5,\r\n        mergeStyle: 'bezier',\r\n        spacing: 40,\r\n        label: {\r\n          display: true,\r\n          bgColor: 'transparent',\r\n          borderRadius: 10,\r\n        },\r\n      },\r\n      arrow: {\r\n        // size: 10,\r\n        // color: '#ccc',\r\n        // offset: -1.5\r\n      },\r\n      commit: {\r\n        spacing: 40,\r\n        hasTooltipInCompactMode: true,\r\n        dot: {\r\n          // size: 8,\r\n          // strokeWidth: 0,\r\n          size: 16,\r\n          strokeWidth: 6,\r\n          strokeColor: 'white',\r\n        },\r\n        message: {\r\n          display: true,\r\n          displayAuthor: false,\r\n          displayHash: false,\r\n          font: 'inherit',\r\n          color: '#333',\r\n        },\r\n      },\r\n      tag: {},\r\n    },\r\n  });\r\n}\r\n","import { Element, ElementContent, Parent } from 'hast';\r\nimport kebabCase from 'lodash/kebabCase.js';\r\nimport { Image } from 'mdast';\r\nimport { Literal, Node } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nimport { Context } from '../context';\r\nimport { getAssetHast } from '../utils/get-asset-hast';\r\n\r\nexport function images(ctx: Context) {\r\n  return (tree: Node) => {\r\n    visit(tree, 'image', (node) => {\r\n      templateFromImage(node, ++ctx.figureCounter);\r\n    });\r\n\r\n    // knitr can output HTML for plots instead of Markdown now\r\n    visit(tree, 'html', (node: Literal) => {\r\n      const value = String(node.value);\r\n      if (value.startsWith('<div class=\"figure\">')) {\r\n        const hast = getAssetHast(value);\r\n        templateFromHTML(node, hast, ++ctx.figureCounter);\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction templateFromImage(node: Image, count: number) {\r\n  const alt = getAltText(node.alt || '');\r\n  const slug = kebabCase(alt ? alt : `Figure ${count}`);\r\n  // @ts-expect-error\r\n  createFigure(node, slug, node.url, alt, node.data?.width, count);\r\n}\r\n\r\nfunction templateFromHTML(node: Literal, hast: Element, count: number) {\r\n  const children = hast.children as Element[];\r\n  const img = children.find((o) => o.tagName === 'img');\r\n  const properties = img?.properties || {};\r\n  const src = String(properties.src);\r\n  const alt = getAltText(String(properties.alt));\r\n  const width = properties.width;\r\n  const slug = kebabCase(alt ? alt : `Figure ${count}`);\r\n  createFigure(node, slug, src, alt, width, count);\r\n}\r\n\r\nfunction createFigure(\r\n  node: Image | Literal,\r\n  slug: string,\r\n  src: string,\r\n  alt: string,\r\n  width: unknown,\r\n  count: number,\r\n) {\r\n  Object.assign(node, {\r\n    type: 'custom-image',\r\n    data: {\r\n      hName: 'figure',\r\n      hProperties: {\r\n        className: ['img-wrapper'],\r\n        id: slug,\r\n      },\r\n      hChildren: [\r\n        createImage(src, alt, width),\r\n        createCaption(alt, slug, count),\r\n      ],\r\n    },\r\n  });\r\n}\r\n\r\nfunction createImage(src: string, alt: string, width: unknown) {\r\n  const image: Element = {\r\n    type: 'element',\r\n    tagName: 'div',\r\n    properties: {\r\n      className: 'img-bg',\r\n    },\r\n    children: [\r\n      {\r\n        type: 'element',\r\n        tagName: 'img',\r\n        properties: { src, alt },\r\n        children: [],\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (width && /^\\d+px/.test(String(width))) {\r\n    image.properties = {\r\n      ...image.properties,\r\n      style: `width: ${width};`,\r\n    };\r\n  }\r\n\r\n  return image;\r\n}\r\n\r\nfunction createCaption(alt: string, slug: string, count: number) {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'figcaption',\r\n    children: [\r\n      {\r\n        type: 'element',\r\n        tagName: 'a',\r\n        properties: {\r\n          href: `#${slug}`,\r\n        },\r\n        children: createLabel(alt, count),\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction createLabel(alt: string, count: number) {\r\n  const label: ElementContent[] = [\r\n    {\r\n      type: 'element',\r\n      tagName: 'span',\r\n      properties: {\r\n        className: 'caption-count',\r\n      },\r\n      children: [\r\n        {\r\n          type: 'text',\r\n          value: `Figure ${count}`,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  if (alt) {\r\n    const elem = label[0] as Parent;\r\n    const content = elem.children[0] as Literal;\r\n    content.value += ':';\r\n\r\n    label.push({\r\n      type: 'text',\r\n      value: ` ${alt}`,\r\n    });\r\n  }\r\n\r\n  return label;\r\n}\r\n\r\nfunction getAltText(altText: string) {\r\n  if (altText.includes('unnamed-chunk')) {\r\n    return '';\r\n  }\r\n  return altText;\r\n}\r\n","import directive from 'remark-directive';\r\nimport frontmatter from 'remark-frontmatter';\r\nimport gfm from 'remark-gfm';\r\nimport markdown from 'remark-parse';\r\nimport { unified } from 'unified';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { Context } from '../context';\r\nimport { aliasDirectiveToLatexSvg } from '../latex/directive-to-svg';\r\nimport { browserWindow } from './browser-window';\r\nimport { codeBlocks } from './code-blocks';\r\nimport { columns } from './columns';\r\nimport { embedAssetUrl } from './embed-asset-url';\r\nimport { gitGraph } from './gitgraph';\r\nimport { images } from './images';\r\nimport { pagebreaks } from './pagebreaks';\r\nimport { removeEmptyParagraphs } from './remove-empty-paragraphs';\r\nimport { styledTerminal } from './styled-terminal';\r\nimport { textFile } from './text-file';\r\nimport { youtubeVideos } from './youtube-videos';\r\nimport { aliasDirectiveToCode } from '../code/alias-directive-to-code';\r\n\r\nexport async function mdastPhase(file: VFile, ctx: Context) {\r\n  // console.log(file.value);\r\n  // https://github.com/unifiedjs/unified\r\n  // convert markdown to syntax tree: complex transforms\r\n  // should be more robust and straightforward\r\n  const processor = unified()\r\n    // third-party plugins:\r\n    .use(markdown)\r\n    .use(directive)\r\n    .use(frontmatter)\r\n    .use(gfm)\r\n    // custom plugins:\r\n    // .use(() => (tree) => {\r\n    //   console.dir(tree, { depth: null });\r\n    // })\r\n    .use(columns)\r\n    .use(embedAssetUrl, ctx)\r\n    .use(youtubeVideos)\r\n    .use(aliasDirectiveToCode, ctx)\r\n    .use(aliasDirectiveToLatexSvg, ctx)\r\n    .use(removeEmptyParagraphs)\r\n    .use(gitGraph)\r\n    .use(textFile)\r\n    .use(browserWindow)\r\n    .use(codeBlocks, ctx)\r\n    .use(styledTerminal)\r\n    .use(images, ctx)\r\n    .use(pagebreaks);\r\n\r\n  const parsed = processor.parse(file);\r\n  return processor.run(parsed, file);\r\n}\r\n","import { Element, ElementContent } from 'hast';\r\nimport { ContainerDirective } from 'mdast-util-directive';\r\nimport { toHast } from 'mdast-util-to-hast';\r\nimport { Node } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nimport { Context } from '../context';\r\n\r\nconst languages = ['r', 'python'];\r\nconst titleCase = ['R', 'Python'];\r\n\r\nexport function languageSwitcher(ctx: Context) {\r\n  const languageFlag = ctx.options.envLanguage;\r\n  if (languageFlag !== undefined && !languages.includes(languageFlag)) {\r\n    throw new Error(\r\n      `[environment]: envLanguage ${languageFlag} should be one of ${languages}`,\r\n    );\r\n  }\r\n\r\n  return (tree: Node) => {\r\n    visit(tree, 'containerDirective', (node: ContainerDirective) => {\r\n      if (node.name === 'language-switcher') {\r\n        const children = [];\r\n        if (languageFlag === undefined) {\r\n          children.push(processMenu(node));\r\n        }\r\n        children.push(...processChildren(node, languageFlag));\r\n\r\n        node.data = {\r\n          hProperties: {\r\n            className: 'language-switcher',\r\n          },\r\n          hChildren: children,\r\n        };\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction processMenu(parent: ContainerDirective): ElementContent {\r\n  const children = parent.children as ContainerDirective[];\r\n  return {\r\n    type: 'element',\r\n    tagName: 'ul',\r\n    properties: {},\r\n    children: children.map((node) => {\r\n      const element: ElementContent = {\r\n        type: 'element',\r\n        tagName: 'li',\r\n        properties: {\r\n          'data-language': node.name,\r\n        },\r\n        children: [\r\n          {\r\n            type: 'text',\r\n            value: titleCase[languages.indexOf(node.name)],\r\n          },\r\n        ],\r\n      };\r\n      return element;\r\n    }),\r\n  };\r\n}\r\n\r\nfunction processChildren(\r\n  parent: ContainerDirective,\r\n  languageFlag: string | undefined,\r\n): ElementContent[] {\r\n  const children = parent.children.map((node) => {\r\n    const parent = node as ContainerDirective;\r\n    if (languages.includes(parent.name)) {\r\n      node.data = {\r\n        hProperties: {\r\n          'data-language': parent.name,\r\n          className: [\r\n            'language',\r\n            languageFlag === parent.name ? 'show' : '',\r\n          ],\r\n        },\r\n      };\r\n    }\r\n    return node;\r\n  });\r\n\r\n  let filtered = children;\r\n  if (languageFlag !== undefined) {\r\n    filtered = filtered.filter((node) => {\r\n      const parent = node as ContainerDirective;\r\n      return languageFlag === parent.name;\r\n    });\r\n  }\r\n\r\n  const parentHast = toHast({\r\n    type: 'root',\r\n    children: filtered,\r\n  }) as Element;\r\n\r\n  return parentHast.children;\r\n}\r\n","import { Node, Parent } from 'hast';\r\nimport { ContainerDirective } from 'mdast-util-directive';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nexport function moveAnswersToEnd() {\r\n  return (tree: Node) => {\r\n    visit(\r\n      tree,\r\n      'containerDirective',\r\n      (node: ContainerDirective, _index, _parent) => {\r\n        const index = _index as number;\r\n        const parent = _parent as Parent;\r\n\r\n        // remove answer from task rehype\r\n        if (node.name === 'task' && node.data) {\r\n          const children = node.data.hChildren || [];\r\n          const newChildren = children.filter((o) => {\r\n            // @ts-expect-error\r\n            return o.name !== 'answer';\r\n          });\r\n          node.data.hChildren = newChildren;\r\n        }\r\n\r\n        if (node.name === 'answer') {\r\n          // these nodes have already been moved to the end\r\n          if (node.attributes?.movedToEnd === 'yes') {\r\n            return;\r\n          }\r\n\r\n          // remove answer block from task node\r\n          const parentChildren = parent?.children || [];\r\n          parentChildren.splice(index || 0, 1);\r\n\r\n          // add to root node\r\n          const treeParent = tree as Parent;\r\n          const treeChildren = (treeParent.children || []) as Node[];\r\n\r\n          node.attributes = {\r\n            ...(node.attributes || {}),\r\n            movedToEnd: 'yes',\r\n          };\r\n\r\n          treeChildren.push(node);\r\n        }\r\n      },\r\n    );\r\n  };\r\n}\r\n","import { LeafDirective } from 'mdast-util-directive';\r\nimport { Node } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nexport function pagebreaks() {\r\n  return async (tree: Node) => {\r\n    visit(tree, 'leafDirective', (node: LeafDirective) => {\r\n      if (node.name === 'pagebreak') {\r\n        node.data = {\r\n          hName: 'hr',\r\n          hProperties: {\r\n            className: 'pagebreak',\r\n          },\r\n        };\r\n      }\r\n    });\r\n  };\r\n}\r\n","import { Element, ElementContent } from 'hast';\r\nimport { ContainerDirective } from 'mdast-util-directive';\r\nimport { toHast } from 'mdast-util-to-hast';\r\nimport { Node } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nimport { Context } from '../context';\r\n\r\nconst tabs = ['visualisation', 'purpose', 'description'];\r\nconst titles = ['Visualisation', 'Purpose', 'Description'];\r\n\r\nexport function plotAccessibilitySwitcher(ctx: Context) {\r\n  return (tree: Node) => {\r\n    visit(tree, 'containerDirective', (node: ContainerDirective) => {\r\n      if (node.name === 'plot-accessibility-switcher') {\r\n        node.data = {\r\n          hProperties: {\r\n            className: 'plot-accessibility-switcher',\r\n          },\r\n          hChildren: [processMenu(node), ...processChildren(node)],\r\n        };\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction processMenu(parent: ContainerDirective): ElementContent {\r\n  const children = parent.children as ContainerDirective[];\r\n  return {\r\n    type: 'element',\r\n    tagName: 'ul',\r\n    properties: {},\r\n    children: children.map((node) => {\r\n      const element: ElementContent = {\r\n        type: 'element',\r\n        tagName: 'li',\r\n        properties: {\r\n          'data-plot-accessibility': node.name,\r\n        },\r\n        children: [\r\n          {\r\n            type: 'text',\r\n            value: titles[tabs.indexOf(node.name)],\r\n          },\r\n        ],\r\n      };\r\n      return element;\r\n    }),\r\n  };\r\n}\r\n\r\nfunction processChildren(parent: ContainerDirective): ElementContent[] {\r\n  const children = parent.children.map((node) => {\r\n    const parent = node as ContainerDirective;\r\n    if (tabs.includes(parent.name)) {\r\n      node.data = {\r\n        hProperties: {\r\n          'data-plot-accessibility': parent.name,\r\n          className: ['plot-accessibility'],\r\n        },\r\n      };\r\n    }\r\n    return node;\r\n  });\r\n\r\n  const parentHast = toHast({\r\n    type: 'root',\r\n    children,\r\n  }) as Element;\r\n\r\n  return parentHast.children;\r\n}\r\n","import { Element, ElementContent } from 'hast';\r\nimport { ContainerDirective } from 'mdast-util-directive';\r\nimport { toHast } from 'mdast-util-to-hast';\r\nimport { Node } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nimport { Context } from '../context';\r\n\r\nconst programs = ['github-desktop', 'command-line'];\r\nconst titleCase = ['GitHub Desktop', 'Command-line'];\r\n\r\nexport function programSwitcher(ctx: Context) {\r\n  const programFlag = ctx.options.envProgram;\r\n  if (programFlag !== undefined && !programs.includes(programFlag)) {\r\n    throw new Error(\r\n      `[environment]: envProgram ${programFlag} should be one of ${programs}`,\r\n    );\r\n  }\r\n\r\n  return (tree: Node) => {\r\n    visit(tree, 'containerDirective', (node: ContainerDirective) => {\r\n      if (node.name === 'program-switcher') {\r\n        const children = [];\r\n        if (programFlag === undefined) {\r\n          children.push(processMenu(node));\r\n        }\r\n        children.push(...processChildren(node, programFlag));\r\n\r\n        node.data = {\r\n          hProperties: {\r\n            className: 'program-switcher',\r\n          },\r\n          hChildren: children,\r\n        };\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction processMenu(parent: ContainerDirective): ElementContent {\r\n  const children = parent.children as ContainerDirective[];\r\n  return {\r\n    type: 'element',\r\n    tagName: 'ul',\r\n    properties: {},\r\n    children: children.map((node) => {\r\n      const element: ElementContent = {\r\n        type: 'element',\r\n        tagName: 'li',\r\n        properties: {\r\n          'data-program': node.name,\r\n        },\r\n        children: [\r\n          {\r\n            type: 'text',\r\n            value: titleCase[programs.indexOf(node.name)],\r\n          },\r\n        ],\r\n      };\r\n      return element;\r\n    }),\r\n  };\r\n}\r\n\r\nfunction processChildren(\r\n  parent: ContainerDirective,\r\n  programFlag: string | undefined,\r\n): ElementContent[] {\r\n  const children = parent.children.map((node) => {\r\n    const parent = node as ContainerDirective;\r\n    if (programs.includes(parent.name)) {\r\n      node.data = {\r\n        hProperties: {\r\n          'data-program': parent.name,\r\n          className: [\r\n            'program',\r\n            programFlag === parent.name ? 'show' : '',\r\n          ],\r\n        },\r\n      };\r\n    }\r\n    return node;\r\n  });\r\n\r\n  let filtered = children;\r\n  if (programFlag !== undefined) {\r\n    filtered = filtered.filter((node) => {\r\n      const parent = node as ContainerDirective;\r\n      return programFlag === parent.name;\r\n    });\r\n  }\r\n\r\n  const parentHast = toHast({\r\n    type: 'root',\r\n    children: filtered,\r\n  }) as Element;\r\n\r\n  return parentHast.children;\r\n}\r\n","import { Paragraph, Parent } from 'mdast';\r\nimport { Node } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nexport function removeEmptyParagraphs() {\r\n  return async (tree: Node) => {\r\n    visit(tree, 'paragraph', (node: Paragraph, _index, _parent) => {\r\n      const index = _index as number;\r\n      const parent = _parent as Parent;\r\n\r\n      if (node.children.length === 0) {\r\n        const parentChildren = parent?.children || [];\r\n        parentChildren.splice(index || 0, 1);\r\n      }\r\n    });\r\n  };\r\n}\r\n","import ansiColor from 'ansicolor';\r\nimport { ElementContent, Node } from 'hast';\r\nimport { Code, Literal } from 'mdast';\r\nimport { Parent } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nexport function styledTerminal() {\r\n  return (tree: Node) => {\r\n    visit(\r\n      tree,\r\n      'custom-code',\r\n      (node: Code, index: number, parent: Parent) => {\r\n        if (node.lang?.trim() === 'bash') {\r\n          wrapInStyledTerminal(node, index, parent);\r\n        }\r\n      },\r\n    );\r\n  };\r\n}\r\n\r\nfunction wrapInStyledTerminal(code: Code, index: number, parent: Parent) {\r\n  const codeChildren = (code.data?.hChildren || []) as ElementContent[];\r\n  const responseChildren = [];\r\n\r\n  const nextIdx = index + 1;\r\n  const nextNode = parent.children[nextIdx];\r\n  if (nextNode && nextNode.type === 'custom-code') {\r\n    const response = nextNode as Code;\r\n    const trimmed = response.lang?.trim();\r\n    if (trimmed === 'knitr-output' || trimmed === 'knitr-error-output') {\r\n      const children = (response.data?.hChildren ||\r\n        []) as ElementContent[];\r\n      const responseWithColours = ansiToHast(children);\r\n      responseChildren.push(...responseWithColours);\r\n\r\n      // remove response element\r\n      parent.children.splice(nextIdx, 1);\r\n    }\r\n  }\r\n\r\n  code.data = {\r\n    hProperties: {\r\n      className: 'terminal',\r\n    },\r\n    hChildren: [...codeChildren, ...responseChildren],\r\n  };\r\n}\r\n\r\nfunction ansiToHast(children: ElementContent[]): ElementContent[] {\r\n  const pre = children[1] as Parent;\r\n  const code = pre.children[0] as Parent;\r\n  const text = code.children[0] as Literal;\r\n  const parsed = ansiColor.parse(text.value);\r\n\r\n  const hast = parsed.spans.map((o) => {\r\n    const text = {\r\n      type: 'text',\r\n      value: o.text,\r\n    };\r\n    if (!o.color) {\r\n      return text;\r\n    } else {\r\n      return {\r\n        type: 'element',\r\n        tagName: 'span',\r\n        properties: {\r\n          className: [\r\n            o.color.name || '',\r\n            o.bold ? 'bold' : '',\r\n            o.color.bright ? 'bright' : '',\r\n          ].filter(Boolean),\r\n        },\r\n        children: [text],\r\n      };\r\n    }\r\n  });\r\n\r\n  code.children = hast;\r\n\r\n  return children;\r\n}\r\n","import { Code } from 'mdast';\r\nimport { Node } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nexport function textFile() {\r\n  return (tree: Node) => {\r\n    visit(tree, 'code', (node: Code) => {\r\n      if (node.lang === 'textfile') {\r\n        createTextFile(node);\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction createTextFile(node: Code) {\r\n  Object.assign(node, {\r\n    type: 'text-file',\r\n    data: {\r\n      hName: 'div',\r\n      hProperties: {\r\n        className: 'text-file',\r\n      },\r\n      hChildren: [\r\n        {\r\n          type: 'text',\r\n          value: '\\n',\r\n        },\r\n        {\r\n          type: 'element',\r\n          tagName: 'div',\r\n          properties: {\r\n            className: 'text-file-wrapper',\r\n          },\r\n          children: [\r\n            {\r\n              type: 'element',\r\n              tagName: 'div',\r\n              properties: {\r\n                className: 'text-file-header',\r\n              },\r\n              children: [\r\n                {\r\n                  type: 'text',\r\n                  value: node.meta?.trim() || '',\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              type: 'text',\r\n              value: '\\n',\r\n            },\r\n            {\r\n              type: 'element',\r\n              tagName: 'div',\r\n              properties: {\r\n                className: 'text-file-content',\r\n              },\r\n              children: [\r\n                {\r\n                  type: 'text',\r\n                  value: node.value,\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              type: 'text',\r\n              value: '\\n',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  });\r\n}\r\n","import { Literal } from 'mdast';\r\nimport { LeafDirective } from 'mdast-util-directive';\r\nimport { Node } from 'unist';\r\nimport { visit } from 'unist-util-visit';\r\nimport { VFile } from 'vfile';\r\n\r\nimport { failMessage } from '../utils/message';\r\n\r\nexport function youtubeVideos() {\r\n  return async (tree: Node, file: VFile) => {\r\n    visit(tree, 'leafDirective', (node: LeafDirective) => {\r\n      if (node.name === 'video') {\r\n        const attributes = node.attributes;\r\n        const title = getTitle(node, file);\r\n        node.data = {\r\n          hName: 'a',\r\n          hProperties: {\r\n            className: ['boxout', 'video'],\r\n            href: getYoutubeUrl(attributes?.id || ''),\r\n            title: attributes?.title || null,\r\n            target: '_blank',\r\n          },\r\n          hChildren: [\r\n            {\r\n              type: 'element',\r\n              tagName: 'span',\r\n              properties: {\r\n                className: 'content',\r\n              },\r\n              children: [\r\n                {\r\n                  type: 'element',\r\n                  tagName: 'span',\r\n                  properties: {\r\n                    className: 'type',\r\n                  },\r\n                  children: [\r\n                    {\r\n                      type: 'text',\r\n                      value: 'Video',\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  type: 'element',\r\n                  tagName: 'span',\r\n                  properties: {\r\n                    className: 'title',\r\n                  },\r\n                  children: [\r\n                    {\r\n                      type: 'text',\r\n                      value: title,\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  type: 'element',\r\n                  tagName: 'span',\r\n                  properties: {\r\n                    className: 'duration',\r\n                  },\r\n                  children: [\r\n                    {\r\n                      type: 'element',\r\n                      tagName: 'strong',\r\n                      properties: {},\r\n                      children: [\r\n                        {\r\n                          type: 'text',\r\n                          value: 'Duration',\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      type: 'text',\r\n                      value: formatDuration(attributes?.duration || ''),\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              type: 'element',\r\n              tagName: 'span',\r\n              properties: {\r\n                className: 'thumbnail',\r\n              },\r\n              children: [\r\n                {\r\n                  type: 'element',\r\n                  tagName: 'img',\r\n                  properties: {\r\n                    src: getYoutubeThumbnailUrl(attributes?.id || ''),\r\n                    alt: '',\r\n                  },\r\n                  children: [],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        };\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction getTitle(node: LeafDirective, file: VFile) {\r\n  const children = node.children as Node[];\r\n  const firstChild = children[0] as Literal;\r\n  const title = firstChild?.value || '';\r\n  if (title.trim() === '') {\r\n    failMessage(file, 'Video has no title', node.position);\r\n  }\r\n  return title;\r\n}\r\n\r\nfunction getYoutubeUrl(id: string) {\r\n  return `https://youtu.be/${id}`;\r\n}\r\n\r\nfunction getYoutubeThumbnailUrl(id: string) {\r\n  return `http://img.youtube.com/vi/${id}/mqdefault.jpg`;\r\n}\r\n\r\nfunction formatDuration(duration: string = '') {\r\n  const match = duration.match(/^(\\d+)m(\\d+)s$/);\r\n  if (match === null) {\r\n    return '';\r\n  }\r\n  return `${match[1]}:${match[2].padStart(2, '0')}`;\r\n}\r\n","import puppeteer from 'puppeteer';\r\n\r\nconst footerTemplate = `\r\n  <div style=\"font-family: 'Helvetica'; font-size: 14px; padding-top: 20px; text-align: center; width: 100%;\">\r\n    Page <span class=\"pageNumber\"></span> of <span class=\"totalPages\"></span>\r\n  </div>\r\n`;\r\n\r\nexport async function convertToPdf(html: string) {\r\n  // console.log('hey!');\r\n  // console.log(html);\r\n  const browser = await puppeteer.launch({\r\n    // @ts-expect-error\r\n    headless: 'new',\r\n    args: ['--no-sandbox', '--disable-gpu'],\r\n    dumbio: true,\r\n  });\r\n  const page = await browser.newPage();\r\n  page.setDefaultNavigationTimeout(0);\r\n  await page.setContent(html);\r\n  await page.evaluateHandle('document.fonts.ready');\r\n  const pdf = await page.pdf({\r\n    format: 'a4',\r\n    printBackground: true,\r\n    displayHeaderFooter: true,\r\n    footerTemplate,\r\n    margin: {\r\n      top: '20px',\r\n      left: '40px',\r\n      right: '40px',\r\n      bottom: '40px',\r\n    },\r\n  });\r\n  await browser.close();\r\n  return pdf;\r\n}\r\n","export function allowNoWhitespaceBeforeHeading(contents: string) {\r\n  return contents\r\n    .split('\\n')\r\n    .map((line) => {\r\n      const match = line.match(/^(#+)(\\w)(.*?)$/);\r\n      if (match !== null) {\r\n        return `${match[1]} ${match[2]}${match[3]}`;\r\n      }\r\n      return line;\r\n    })\r\n    .join('\\n');\r\n}\r\n","const blockList = ['\\\\newpage', '\\\\pagebreak'];\r\n\r\nexport function convertNewPageToDirective(contents: string) {\r\n  return contents\r\n    .split('\\n')\r\n    .map((a) => (blockList.some((b) => a.includes(b)) ? '::pagebreak' : a))\r\n    .join('\\n');\r\n}\r\n\r\nexport function convertEmptyMBoxToDirective(contents: string) {\r\n  return contents\r\n    .split('\\n')\r\n    .map((line) => {\r\n      if (\r\n        line.includes('\\\\mbox') &&\r\n        line.replace('{', '').replace('}', '').trim() === '\\\\mbox'\r\n      ) {\r\n        return '::pagebreak';\r\n      }\r\n      return line;\r\n    })\r\n    .join('\\n');\r\n}\r\n","export function convertTextBfToMd(contents: string) {\r\n  const pattern = /\\\\textbf\\{(.*?)\\}/g;\r\n  return contents.replace(pattern, (_, str) => `**${str}**`);\r\n}\r\n\r\nexport function convertUrlToMd(contents: string) {\r\n  const pattern = /\\\\url\\{(.*?)\\}/g;\r\n  return contents.replace(pattern, (_, str) => str);\r\n}\r\n","export function convertMacroToDirective(contents: string) {\r\n  return contents\r\n    .split('\\n')\r\n    .map((line) => {\r\n      const container = parseCustomContainer(line);\r\n      if (container !== null) {\r\n        return renderContainerDirective(container);\r\n      }\r\n      return line;\r\n    })\r\n    .join('\\n');\r\n}\r\n\r\ntype Container = {\r\n  name: string;\r\n  title: string;\r\n  attributes: string;\r\n};\r\n\r\nfunction parseCustomContainer(line: string): Container | null {\r\n  const match = line.match(/^#{1,6}\\s*\\[(\\D.+)](.*)/);\r\n  if (!Array.isArray(match)) {\r\n    return null;\r\n  }\r\n  const [, attributeStr = '', extra = ''] = match;\r\n  const [name, ...attributesArr] = attributeStr\r\n    .split(',')\r\n    .map((s) => s.trim());\r\n  const title = extra.trim();\r\n  const attributes = transformAttributes(name, attributesArr);\r\n  return { name, title, attributes };\r\n}\r\n\r\nfunction renderContainerDirective({ name, title, attributes }: Container) {\r\n  const colons = getColons(name);\r\n  if (name.startsWith('/')) {\r\n    return colons;\r\n  }\r\n  const newTitle = title ? `[${title}]` : '';\r\n  const newAttributes = attributes ? `{${attributes}}` : '';\r\n  return colons + name + newTitle + newAttributes;\r\n}\r\n\r\nfunction getColons(name: string) {\r\n  switch (name.replace('/', '')) {\r\n    case 'task':\r\n    case 'columns':\r\n      return '::::';\r\n    case 'video':\r\n      return '::';\r\n    default:\r\n      return ':::';\r\n  }\r\n}\r\n\r\nfunction transformAttributes(\r\n  containerName: string,\r\n  attributesArr: string[]\r\n) {\r\n  return attributesArr\r\n    .map((attribute) => {\r\n      const [key, value] = attribute.split('=').map((s) => s.trim());\r\n      if (containerName === 'video' && key === 'videoid') {\r\n        return `id=${value}`;\r\n      }\r\n      return attribute;\r\n    })\r\n    .join(' ');\r\n}\r\n","import { VFile } from 'vfile';\r\n\r\nimport { allowNoWhitespaceBeforeHeading } from './allow-no-whitespace-before-heading';\r\nimport {\r\n  convertEmptyMBoxToDirective,\r\n  convertNewPageToDirective,\r\n} from './convert-block-tex';\r\nimport { convertTextBfToMd, convertUrlToMd } from './convert-inline-tex';\r\nimport { convertMacroToDirective } from './convert-macro-to-directive';\r\nimport { reformatPandocSimpleTables } from './reformat-pandoc-simple-tables';\r\n\r\n// Some of the original coursework syntax can't easily be parsed by\r\n// existing plugins for unified.js, so in a \"pre-parse\" phase\r\n// I transform some syntax using regex so it can be parsed.\r\n// A successful generic approach I found is to convert problem syntax to a\r\n// custom markdown directive: https://github.com/remarkjs/remark-directive\r\n\r\nexport function preParsePhase(file: VFile) {\r\n  let result = file.value as string;\r\n  result = removeCommentedSections(result);\r\n  // result = escapeDollarsInCodeBlocks(result);\r\n  result = allowNoWhitespaceBeforeHeading(result);\r\n  result = convertMacroToDirective(result);\r\n  result = convertTextBfToMd(result);\r\n  result = convertUrlToMd(result);\r\n  result = convertNewPageToDirective(result);\r\n  result = convertEmptyMBoxToDirective(result);\r\n  result = reformatPandocSimpleTables(result);\r\n  file.value = result;\r\n  return file;\r\n}\r\n\r\nfunction removeCommentedSections(md: string) {\r\n  return md.replace(/<!--[^-][\\s\\S]*?-->/g, '').replace(/<!---/g, '<!--');\r\n}\r\n\r\n// function escapeDollarsInCodeBlocks(md: string) {\r\n//   return md.replace(/(```.+?```)/gms, (match) => {\r\n//     return '\\n' + match.replace(/\\$/g, '\\\\$') + '\\n';\r\n//   });\r\n// }\r\n","import { EOL } from 'os';\r\n\r\nimport { markdownTable } from 'markdown-table';\r\n\r\nexport function reformatPandocSimpleTables(contents: string) {\r\n  const lines = contents.split(EOL);\r\n\r\n  // operate on array backwards preserving index in loop,\r\n  // as length may change with transformation\r\n  for (var idx = lines.length - 1; idx >= 0; idx--) {\r\n    if (isValidPandocSimpleTableSeparator(lines, idx)) {\r\n      const { startIdx, count } = getTableBounds(lines, idx);\r\n      const currentLines = lines.slice(startIdx, startIdx + count + 1);\r\n      const newLines = convertLines(currentLines);\r\n      lines.splice(startIdx, count + 1, ...newLines, '');\r\n    }\r\n  }\r\n\r\n  return lines.join(EOL);\r\n}\r\n\r\nfunction isValidPandocSimpleTableSeparator(\r\n  lines: string[],\r\n  idx: number,\r\n  isEnd?: boolean\r\n) {\r\n  const line = lines[idx] || '';\r\n\r\n  if (idx === 0 || !/-{2,}/g.test(line) || !/^[\\s|-]+$/.test(line)) {\r\n    return false;\r\n  }\r\n  if (getColumnIndexes(line).length <= 1) {\r\n    return false;\r\n  }\r\n  if (!isEnd) {\r\n    const nextLine = lines[idx + 1] || '';\r\n    if (nextLine.trim() === '') {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction getTableBounds(arr: string[], idx: number) {\r\n  const startIdx = idx - 1;\r\n  const endIdx = arr.slice(startIdx).findIndex((l) => l.trim() === '');\r\n  const count = endIdx === -1 ? arr.length - 1 : endIdx;\r\n  return { startIdx, count };\r\n}\r\n\r\nfunction convertLines(lines: string[]) {\r\n  const table = parseTable(lines);\r\n  const align = getColumnAlignment(table[0]);\r\n  const result = markdownTable(table, { align });\r\n  return result.split(EOL);\r\n}\r\n\r\nfunction parseTable(lines: string[]) {\r\n  const [titles, separator, ...body] = lines;\r\n  const columnIndexes = getColumnIndexes(separator);\r\n  const titleCells = parseTitleRow(titles, columnIndexes);\r\n  const rows = body.map((line) => parseBodyRow(line, columnIndexes));\r\n  const endSeparatorIdx = getEndSeparatorIdx(body);\r\n\r\n  if (endSeparatorIdx !== -1) {\r\n    return [titleCells, ...rows.slice(0, endSeparatorIdx)];\r\n  }\r\n  const multilineRows = rows.reduce(multilineReducer, []);\r\n  return [titleCells, ...multilineRows];\r\n}\r\n\r\nfunction getColumnIndexes(line: string) {\r\n  return line.split('').reduce((acc: number[][], str, idx) => {\r\n    if (str === '-' && (idx === 0 || line[idx - 1] === ' ')) {\r\n      acc.push([idx]);\r\n    } else if (\r\n      idx !== line.length - 1 &&\r\n      str === ' ' &&\r\n      line[idx - 1] === '-'\r\n    ) {\r\n      acc[acc.length - 1].push(idx);\r\n    }\r\n    return acc;\r\n  }, []);\r\n}\r\n\r\nfunction getColumnAlignment(titleCells: string[]): string[] {\r\n  return titleCells.map((title) => {\r\n    if (title[0] === ' ') {\r\n      if (title[title.length - 1] === ' ') {\r\n        return 'center';\r\n      }\r\n      return 'right';\r\n    }\r\n    return 'left';\r\n  });\r\n}\r\n\r\nfunction parseTitleRow(line: string, columnIndexes: number[][]) {\r\n  return columnIndexes.map((tuple) => line.slice(...tuple));\r\n}\r\n\r\nfunction parseBodyRow(line: string, columnIndexes: number[][]) {\r\n  return columnIndexes.map((tuple) => {\r\n    const end = tuple[1] === undefined ? tuple[1] : tuple[1] + 1;\r\n    return line.slice(tuple[0], end).trim();\r\n  });\r\n}\r\n\r\nfunction getEndSeparatorIdx(lines: string[]) {\r\n  for (let idx = lines.length - 1; idx > 0; idx--) {\r\n    const line = lines[idx];\r\n    if (line.trim() !== '') {\r\n      if (isValidPandocSimpleTableSeparator(lines, idx, true)) {\r\n        return idx;\r\n      } else {\r\n        return -1;\r\n      }\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nfunction multilineReducer(acc: string[][], row: string[]) {\r\n  if (row.some((cell) => cell.trim() === '')) {\r\n    const prevIdx = acc.length - 1;\r\n    acc[prevIdx].forEach((cell, i) => {\r\n      const trimmed = row[i].trim();\r\n      if (trimmed !== '') {\r\n        acc[prevIdx][i] = cell + ' ' + trimmed;\r\n      }\r\n    });\r\n  } else {\r\n    acc.push(row.slice());\r\n  }\r\n  return acc;\r\n}\r\n","import path from 'path';\r\n\r\nimport hashSum from 'hash-sum';\r\n\r\nimport { Context } from '../context';\r\nimport { checkLocalFileExists, mkdir, readFile, writeFile } from './utils';\r\n\r\ntype Options = {\r\n  ctx: Context;\r\n  prefix: string;\r\n  key: string;\r\n  execFn: (code: string) => Promise<string>;\r\n  json?: boolean;\r\n};\r\n\r\nexport async function cacheToFile(options: Options): Promise<string> {\r\n  const { ctx, prefix, key, execFn, json } = options;\r\n\r\n  if (ctx.options.noCache === true) {\r\n    return execFn(key);\r\n  }\r\n\r\n  const filePath = `${prefix}-${hashSum(key)}.txt`;\r\n  const cachedFilePath = path.join(ctx.cacheDir, filePath);\r\n  const exists = await checkLocalFileExists(cachedFilePath);\r\n\r\n  if (exists) {\r\n    const str = await readFile(cachedFilePath);\r\n\r\n    // ignore cache if json is corrupt\r\n    if (json) {\r\n      try {\r\n        return JSON.parse(str);\r\n      } catch (err) {\r\n        return execAndCache(options, cachedFilePath);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n  return execAndCache(options, cachedFilePath);\r\n}\r\n\r\nexport async function cacheJsonToFile(options: Options) {\r\n  return cacheToFile({ ...options, json: true });\r\n}\r\n\r\nasync function execAndCache(\r\n  { ctx, key, execFn, json }: Options,\r\n  cachedFilePath: string\r\n) {\r\n  const out = (await execFn(key)) as string;\r\n  const str = json ? JSON.stringify(out, null, 2) : out;\r\n  await mkdir(ctx.cacheDir);\r\n  await writeFile(cachedFilePath, str);\r\n  return out;\r\n}\r\n","import { exec } from 'child_process';\r\n\r\nimport chalk from 'chalk';\r\nimport figureSet from 'figures';\r\n\r\nconst repo = 'UofGAnalytics/build-coursework';\r\n\r\nexport async function checkForLatestVersion() {\r\n  if (process.env.NODE_ENV === 'test') {\r\n    return;\r\n  }\r\n\r\n  const currentVersion = process.env.VERSION;\r\n\r\n  try {\r\n    const tags = await listRemoteGitTags();\r\n    const latestTag = parseLatestTag(tags);\r\n\r\n    if (latestTag !== currentVersion) {\r\n      console.log(chalk.yellow.bold('New version available'));\r\n      console.log(chalk.yellow(`Current version: ${currentVersion}`));\r\n      console.log(chalk.yellow(`Latest version: ${latestTag}`));\r\n      console.log(chalk.yellow(`Run the following command to update:`));\r\n      console.log(chalk.yellow(`npm install -g ${repo}`));\r\n      console.log('');\r\n    } else {\r\n      // console.log(chalk.yellow(`Up to date :)`));\r\n    }\r\n  } catch (err) {\r\n    const message = `Can't read latest version from Github`;\r\n    console.log(chalk.yellow.bold(`${figureSet.warning}  ${message}`));\r\n    console.log(chalk.yellow(`Current version: ${currentVersion}`));\r\n    console.log('');\r\n  }\r\n}\r\n\r\n// https://stackoverflow.com/questions/10649814#12704727\r\nasync function listRemoteGitTags() {\r\n  return new Promise<string>((resolve, reject) => {\r\n    const cmd = `git -c \"versionsort.suffix=-\" ls-remote --tags --sort=\"v:refname\" \"git@github.com:${repo}.git\"`;\r\n    exec(cmd, async (err, response, stdErr) => {\r\n      if (err) {\r\n        reject(err);\r\n      } else {\r\n        resolve(response);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction parseLatestTag(tags: string) {\r\n  const lines = tags.trim().split('\\n');\r\n  const lastLine = lines[lines.length - 1];\r\n  const match = lastLine.match(/tags\\/v(\\d+.\\d+.\\d+)/);\r\n  if (match === null) {\r\n    const message = `can't extract version from line: \"${lastLine}\"`;\r\n    console.error('[get-latest-version]:', message);\r\n    throw new Error(message);\r\n  }\r\n  return match[1];\r\n}\r\n","type Store = Record<string, number>;\r\n\r\nexport type Counter = {\r\n  increment: (key: string) => number;\r\n};\r\n\r\nexport function createCounter() {\r\n  const store: Store = {};\r\n  return {\r\n    increment(key: string) {\r\n      const value = (store[key] || 0) + 1;\r\n      store[key] = value;\r\n      return value;\r\n    },\r\n  };\r\n}\r\n","import { Element, Parent } from 'hast';\r\nimport { toVFile } from 'to-vfile';\r\n\r\nimport { rehypeParser } from '../utils/utils';\r\n\r\n// export async function getAssetHast(name: string) {\r\n//   const contents = await getAsset(name);\r\n//   const vfile = toVFile({ contents }) as VFile;\r\n//   const parsed = rehypeParser().parse(vfile) as Parent;\r\n//   return parsed.children[0];\r\n// }\r\n\r\nexport function getAssetHast(value: string) {\r\n  const vfile = toVFile({ value });\r\n  const parsed = rehypeParser().parse(vfile) as Parent;\r\n  return parsed.children[0] as Element;\r\n}\r\n","import hashSum from 'hash-sum';\r\nimport { Element } from 'hast';\r\nimport { visit } from 'unist-util-visit';\r\n\r\nimport { getAssetHast } from './get-asset-hast';\r\n\r\n// ensure SVG ids will not collide when inlined\r\nexport function getSvgHast(svg: string) {\r\n  const svgNode = getAssetHast(svg) as Element;\r\n\r\n  const hash = hashSum(svg);\r\n\r\n  visit(svgNode, 'element', (node) => {\r\n    if (!node.properties) {\r\n      return;\r\n    }\r\n\r\n    if (node.properties.id) {\r\n      node.properties.id = `${node.properties.id}-${hash}`;\r\n    }\r\n\r\n    for (const [key, value] of Object.entries(node.properties)) {\r\n      const valueStr = String(value);\r\n      if (isIdRef(valueStr)) {\r\n        node.properties[key] = `${value}-${hash}`;\r\n      } else if (isUrlIdRef(valueStr)) {\r\n        node.properties[key] = `url(${extractUrlIdRef(valueStr)}-${hash})`;\r\n      }\r\n    }\r\n  });\r\n\r\n  return svgNode;\r\n}\r\n\r\nfunction isIdRef(value: string) {\r\n  return !isHexColour(value) && /^#[\\w\\d\\-_]+$/.test(value);\r\n}\r\n\r\nfunction isHexColour(value: string) {\r\n  return /^#([0-9a-f]{3}){1,2}$/i.test(value);\r\n}\r\n\r\nfunction isUrlIdRef(value: string) {\r\n  return /^url\\(#[\\w\\d-_]+\\)$/.test(value);\r\n}\r\n\r\nfunction extractUrlIdRef(value: string) {\r\n  const match = value.match(/^url\\((#[\\w\\d-_]+)\\)$/);\r\n  return match && match[1];\r\n}\r\n","import { Element } from 'hast';\r\nimport { Node } from 'unist';\r\n\r\nimport hamburgerSvg from '../../assets/hamburger-icon.svg';\r\nimport linkSvg from '../../assets/link-icon.svg';\r\nimport { getAssetHast } from './get-asset-hast';\r\n\r\ntype Svg = {\r\n  id: string;\r\n  viewBox: string;\r\n  children: Node[];\r\n};\r\n\r\nfunction getSvgs(): Svg[] {\r\n  return [\r\n    createStoredSvg('hamburger-icon', hamburgerSvg),\r\n    createStoredSvg('link-icon', linkSvg),\r\n  ];\r\n}\r\n\r\nexport function createSvg(name: string): Element {\r\n  const { id, viewBox } = getSvg(name);\r\n  return {\r\n    type: 'element',\r\n    tagName: 'svg',\r\n    properties: {\r\n      className: ['icon', id],\r\n      viewBox,\r\n    },\r\n    children: [\r\n      {\r\n        type: 'element',\r\n        tagName: 'use',\r\n        properties: {\r\n          href: `#${id}`,\r\n        },\r\n        children: [],\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nexport function createDefs() {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'svg',\r\n    properties: {\r\n      style: 'display: none',\r\n    },\r\n    children: [\r\n      {\r\n        type: 'element',\r\n        tagName: 'defs',\r\n        children: getSvgs().map(createGroup),\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction createStoredSvg(id: string, svg: string) {\r\n  const hast = getAssetHast(svg) as Element;\r\n  const children = hast.children;\r\n  const properties = (hast.properties || {}) as Record<string, string>;\r\n  const viewBox = properties.viewBox as string;\r\n  return { id, viewBox, children };\r\n}\r\n\r\nfunction getSvg(id: string) {\r\n  const stored = getSvgs().find((o) => o.id === id);\r\n  if (stored === undefined) {\r\n    throw new Error(`svg icon not found: ${id}`);\r\n  }\r\n  return stored;\r\n}\r\n\r\nfunction createGroup({ id, children }: Svg) {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'g',\r\n    properties: { id },\r\n    children,\r\n  };\r\n}\r\n","import { Position } from 'unist';\r\nimport { VFile } from 'vfile';\r\nimport { VFileMessage } from 'vfile-message';\r\n\r\nexport type VFileWithStatus = Omit<VFile, 'messages'> & {\r\n  messages: MessageWithStatus[];\r\n};\r\n\r\nexport type MessageWithStatus = VFileMessage & {\r\n  status: MessageStatus;\r\n};\r\n\r\nexport enum MessageStatus {\r\n  fail = 'fail',\r\n  warning = 'warning',\r\n  info = 'info',\r\n}\r\n\r\nexport function failMessage(\r\n  file: VFile,\r\n  message: string,\r\n  position?: Position\r\n) {\r\n  const status = MessageStatus.fail;\r\n  return messageWithStatus(file, message, position, status);\r\n}\r\n\r\nexport function warnMessage(\r\n  file: VFile,\r\n  message: string,\r\n  position: Position | undefined\r\n) {\r\n  const status = MessageStatus.warning;\r\n  return messageWithStatus(file, message, position, status);\r\n}\r\n\r\nexport function infoMessage(\r\n  file: VFile,\r\n  message: string,\r\n  position: Position | undefined\r\n) {\r\n  const status = MessageStatus.info;\r\n  return messageWithStatus(file, message, position, status);\r\n}\r\n\r\nfunction messageWithStatus(\r\n  file: VFile,\r\n  message: string,\r\n  position: Position | undefined,\r\n  status: MessageStatus\r\n) {\r\n  // console.log(message);\r\n  const msg = file.message(message, position) as MessageWithStatus;\r\n  msg.status = status;\r\n  return msg;\r\n}\r\n","export type Timer = {\r\n  seconds: () => string;\r\n};\r\n\r\nexport function createTimer(): Timer {\r\n  const start = process.hrtime();\r\n  return {\r\n    seconds() {\r\n      const hrtime = process.hrtime(start);\r\n      return (hrtime[0] + hrtime[1] / 1e9).toFixed(3);\r\n    },\r\n  };\r\n}\r\n","import fs from 'fs';\r\nimport path from 'path';\r\n\r\nimport rehypeParse from 'rehype-parse';\r\nimport rehypeStringify from 'rehype-stringify';\r\nimport { unified } from 'unified';\r\nimport { Node, Parent } from 'unist';\r\n\r\n// import { visit } from 'unist-util-visit';\r\n\r\nexport const rehypeParser = unified()\r\n  .use(rehypeParse, { fragment: true })\r\n  .use(rehypeStringify);\r\n\r\nexport function readFile(\r\n  filePath: string,\r\n  encoding: BufferEncoding = 'utf-8',\r\n) {\r\n  return fs.promises.readFile(filePath, encoding);\r\n}\r\n\r\nexport function writeFile(filePath: string, value: string | Buffer) {\r\n  return fs.promises.writeFile(filePath, value);\r\n}\r\n\r\nexport async function checkLocalFileExists(filePath: string) {\r\n  try {\r\n    await fs.promises.access(filePath, fs.constants.F_OK);\r\n    return true;\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function rmFile(filePath: string) {\r\n  return fs.promises.unlink(filePath);\r\n}\r\n\r\nexport function mkdir(dirPath: string) {\r\n  return fs.promises.mkdir(dirPath, { recursive: true });\r\n}\r\n\r\nexport function rmdir(dirPath: string) {\r\n  return fs.promises.rmdir(dirPath, { recursive: true });\r\n}\r\n\r\nexport function getBuildDir(dirPath: string) {\r\n  return path.join(process.cwd(), dirPath, 'build');\r\n}\r\n\r\nexport function getCacheDir(dirPath: string) {\r\n  return path.join(process.cwd(), dirPath, 'cache');\r\n}\r\n\r\nexport function getTemplateDir() {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return __dirname;\r\n  }\r\n  return path.join(process.cwd(), 'template', 'build');\r\n}\r\n\r\nexport function combineMdastTrees(mdasts: Parent[]): Parent {\r\n  const children = mdasts.flatMap(\r\n    (mdast) => mdast.children || [],\r\n  ) as Node[];\r\n  return { type: 'root', children };\r\n}\r\n\r\nexport function inspect() {\r\n  return (tree: Node) => {\r\n    console.log(JSON.stringify(tree, null, 2));\r\n    // console.dir(tree, { depth: null });\r\n    // visit(tree, 'leafDirective', (node) => {\r\n    //   console.log('---------------------');\r\n    //   console.dir(node, { depth: null });\r\n    // });\r\n    return tree;\r\n  };\r\n}\r\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 483.08 738.15\\\" class=\\\"crest\\\">\\r\\n  <path fill=\\\"#13385E\\\"\\r\\n    d=\\\"M477.26 392.43c0 119.82-147.87 251.55-236.25 256.22C143.28 641 5.19 503.76 5.19 393.71V6.19h472.08c-.01 0 .42 223.93-.01 386.24zM18.66 634.45c15.73-8.5 39.97-13.61 53.15-31.89 4.68 18.71-7.23 31.4-6.8 58.62l351.64-.01c2.64-13.83-11.46-40.33-6.35-58.61 13.18 18.28 37 23.39 52.73 31.89 13.61 7.23 14.03 11.06 14.03 34.87v48.48c0 9.36-11.06 14.88-23.81 14.46H27.59c-12.76.43-23.39-5.1-23.39-14.46v-48.48c0-22.96 0-28.06 14.46-34.87z\\\" />\\r\\n  <path fill=\\\"#9ADAF8\\\"\\r\\n    d=\\\"M447.72 661.24h-31.5c.27-1.43.58-2.93.89-4.6.01.68.01 1.36 0 2.05 11.48-20.84 2.13-26.36 3.83-36.14 8.93 11.48 22.54 13.18 32.32 18.28 11.89 6.38 19.55 20.41-5.54 20.41zm-83.06-204.65c12.75-12.32 21.67 0 19.12 9.35 0 .42-.42.85-.42 1.27-14.87 42.92-52.26 71.38-95.61 83.71 2.12 4.25 8.5 8.5 15.3 13.17-33.99 5.52-61.19-2.12-73.08-6.37-32.29-1.27-64.16-10.62-89.23-29.32-26.77-14.87-35.69-31.02-47.59-55.66-1.27-2.97-3.82-5.95-6.8-11.05-1.7-3.4-2.12-9.35 6.8-6.37 8.07 2.55 18.27 4.67 21.67.42.42-.85.42-1.27.42-1.7-.42-1.27 2.12-4.25 5.52-2.55 5.95-2.12 9.35-5.95 11.05-8.07 2.97.85 5.95 1.27 9.35 2.55 11.05 4.25 33.14 15.3 38.67 36.97 0-16.15-6.37-25.49-12.75-30.59 26.39.31 49.75 5.74 70.96 11.81v-15.89c6.31 2.82 11.45 6.33 14.87 8.99v11.3c2.29.69 4.56 1.38 6.8 2.06 8.07-.85 26.77-2.55 48.44.42-2.12 2.12-5.1 6.37-6.37 8.92 17.85 1.7 34.84-1.27 52.26-12.75 19.55-12.75-15.3-22.52-15.3-70.54 18.27 15.3 35.27 8.5 49.29 17.42 15.3-8.92 39.09-18.27 63.31-5.95-26.34 8.07-45.89 29.32-60.76 49.29 3.83-16.13-14.87-27.61-25.92-.84zm-237.52 19.55c-2.55 0-4.67 2.12-4.67 4.25 0 2.12 2.12 3.82 4.67 3.82s4.67-1.7 4.67-3.82c0-2.13-2.12-4.25-4.67-4.25zm110.9-307.21h14.87v24.52h-14.87v-24.52zm14.87 250.42h-14.87v-60.12c6.38 2.91 11.53 6.5 14.87 9.13v50.99zm-14.87-147.88c6.46 3 11.62 6.67 14.87 9.28v51.23h-14.87v-60.51zm2.97-141.21s-28.89-15.3-60.34-4.67c-.85-3.4-2.55-11.47-3.82-14.02 21.25-5.52 54.39-1.7 64.59 7.65 10.2-8.92 43.34-12.75 63.74-7.65-1.27 2.55-2.97 10.62-3.82 14.02-31.03-10.63-60.35 4.67-60.35 4.67zm-7.22-24.22c-3.4-2.55-8.5-5.1-15.3-5.95 10.62-20.4 11.47-27.62 14.87-62.46 3.82 2.12 5.95 5.1 8.07 8.92v7.22s-10.19 22.95-7.64 52.27zm-118.98 342.9c-2.55-.85-8.5-2.55-15.3-2.55-5.1 0-9.77-2.97-9.77-4.67.43-.85 1.7-1.7 3.82-1.7 4.67-.85 15.3 0 26.77 1.7-.84 2.55-2.54 5.1-5.52 7.22zM29.86 640.83c9.36-5.1 23.39-6.8 32.32-18.71 1.67 9.59-7.28 14.7 3.2 34.94.17 1.44.42 2.84.78 4.18H35.82c-25.94 0-18.29-14.03-5.96-20.41zm223.05-65.69h-14.87v-6.74c5.45 1.51 10.59 2.5 14.87 3.16v3.58z\\\" />\\r\\n  <path fill=\\\"#FFF\\\"\\r\\n    d=\\\"m445.32 712.41-1.56-5.63h-12.13l-1.64 5.63h-8.49l10.83-31.35h10.7l10.82 31.35h-8.53zm-6.58-22c-.12-.53-.46-1.94-1.02-4.24-.61 2.3-.95 3.71-1.09 4.24l-3.14 10.31h8.46l-3.21-10.31zm-26.92 22h-8.52v-23.93h-6.95v-7.42h22.49v7.42h-7.02v23.93zm-28.04-275.79c-1.7-9.35 4.25-26.77 30.17-30.17-12.32 4.25-24.22 17.43-30.17 30.17zm5.95 275.79h-8.63v-31.35h8.63v31.35zm-60.76-200.58c-28.47 7.65-75.63 20.4-145.32 2.97-18.7-4.67-62.46-16.15-80.31-39.09-3.4-4.67-4.67-13.17-4.67-14.45 0-1.7.85-2.55 4.67-1.7 12.32 2.12 14.45-2.55 19.12-7.65 5.52-.85 22.95-3.82 36.97 5.52 15.3 10.2 20.4 25.07 20.4 25.07s5.1-12.75-2.12-22.52c14.02-3.82 38.24 2.12 59.91 10.62 31.87 12.32 56.09 16.57 80.31 12.32s36.97-9.35 45.04-21.25c4.25-6.37 16.57-5.1 13.17 4.67-3.4 9.8-18.7 37.42-47.17 45.49zm-201.83-35.69c-2.55 0-4.67 2.12-4.67 4.25 0 2.12 2.12 3.82 4.67 3.82s4.67-1.7 4.67-3.82c0-2.13-2.12-4.25-4.67-4.25zm232.85-65.86c5.95 14.87 6.8 33.57 6.8 33.57s-14.45-23.37-6.8-33.57zm-15.3-3.83c6.8 10.2 16.57 41.22 16.57 41.22s-21.67-23.37-16.57-41.22zM241.44 111.57V46.56c11.05-21.67 26.77-5.1 54.39-13.6 5.1 22.52 9.77 62.89 11.05 70.11-20.83 5.95-39.1-16.15-65.44 8.5zm-.06-64.93-.01-.21.06.12c-.03.13-.05.28-.08.42.02-.12.03-.24.03-.33zm-1.25 6.7c.2-.91.54-2.45.81-3.85-.21 1.4-.36 2.59-.36 2.59s-.16.44-.45 1.26zm-5.07 393.7c1.12.43 2.22.89 3.27 1.36v16.83c-1.08-.31-2.18-.62-3.27-.92v-17.27zm0-89.03h.1c1.08.43 2.14.88 3.17 1.35v58.98h-3.27v-60.33zm0-87.83c1.13.46 2.21.94 3.27 1.44v60.35h-3.27v-61.79zm0-101.25h3.27v24.52h-3.27v-24.52zm-13.56-68.48c5.23.99 9.32 2.98 12.28 5.05 0 .04 0 .07.01.11-4.3-2.75-8.37-4.34-12.29-5.16zm-45.5 2.62c1.27-7.22 6.37-47.59 11.05-70.11 22.04 6.78 36.49-2.11 47.05 4.8-3.39 34.72-4.25 41.96-14.85 62.31-15.63-2.15-28.8 7.26-43.25 3zm-61.75 609.34h-8.5l-1.55-5.63H92.07l-1.65 5.63h-8.48l10.8-31.35h10.7l10.81 31.35zm-15.06-22c-.14-.53-.51-1.94-1.05-4.24-.57 2.3-.96 3.71-1.1 4.24l-3.17 10.31h8.52l-3.2-10.31zm-31.29-9.35h8.67v31.35H67.9v-31.35zm-24.54 31.35-13.15-31.35h9.05l6.29 17.53c.14.39.48 1.79 1.02 4.22.6-2.44.98-3.83 1.14-4.22l6.14-17.53h9.11l-13.12 31.35h-6.48zm103.14-13.82c.14.39.45 1.79 1.04 4.22.55-2.44.96-3.83 1.08-4.22l6.24-17.53h9.05l-13.11 31.35h-6.49l-13.16-31.35h9.09l6.26 17.53zm41.33-10.63h-10.89v5.44h10.26v6.68h-10.26v5.35h10.89v6.99h-19.19v-31.35h19.19v6.89zm17.28-6.9c4.32 0 7.67.04 10.37 2.13 2.24 1.76 3.47 4.42 3.47 7.68 0 4.83-2.44 7.93-6.99 8.92l8.54 12.63h-9.65l-7.19-12.28v12.28h-8.01v-31.35h8.93c.19-.01.35-.01.53-.01zm-1.46 14.83h1.61c3.56 0 5.28-1.13 5.28-3.92 0-3.27-1.61-4.27-5.18-4.27h-1.72v8.19zm31.12 16.52h-8.64v-31.35h8.64v31.35zm3.57-137.27h-3.27v-7.61c1.1.34 2.19.65 3.27.95v6.66zm25.54 113.33h-7.02v23.93h-8.52v-23.93h-6.98v-7.42h22.52v7.42zm24.14-7.41 10.82 31.35h-8.46l-1.61-5.63h-12.11l-1.6 5.63h-8.52l10.83-31.35h10.65zM287 700.72l-3.2-10.31c-.13-.53-.48-1.94-1.05-4.24-.55 2.3-.97 3.71-1.11 4.24l-3.14 10.31h8.5zm25.9 5.83c2.32 0 3.89-1.35 3.89-3.21 0-2.51-1.73-3.27-5.28-4.18-5.62-1.47-8.37-3.77-8.37-8.63 0-5.83 4.23-10.17 10.79-10.17 3.51 0 6.58.91 9.26 2.79l-2.66 6.12c-1.97-1.65-4.06-2.48-5.99-2.48-2.1 0-3.49 1.14-3.49 2.6 0 2.27 2.2 2.74 5 3.5 5.55 1.48 8.65 3.51 8.65 9.32 0 6.46-4.66 11.02-11.99 11.02-4.43 0-7.78-1.39-11.13-4.6l3.83-6.33c2.53 2.87 5 4.25 7.49 4.25zm45.84-7.96c.12.39.47 1.79 1.01 4.22.59-2.44.99-3.83 1.11-4.22l6.21-17.53h9.09l-13.15 31.35h-6.47l-13.16-31.35h9.08l6.28 17.53z\\\" />\\r\\n  <path fill=\\\"#0499D6\\\"\\r\\n    d=\\\"M374.44 472.74c-29.32 72.66-153.82 91.36-228.18 48.44-25.07-5.52-54.81-57.36-45.47-58.21 4.9-.31 13.11 4.46 22.4 10.17-3.06 1.76-4.87 4.93-4.56 8.1.42 4.25 4.67 7.65 9.35 7.22 5.1-.42 8.5-4.25 8.07-8.92-.42-2.3-1.66-4.18-3.31-5.5 6.31 1.3 9.26 5.53 9.26 10.18 12.32 5.95 23.79 9.35 31.44.85 3.82 7.22 10.62 11.05 17.42 13.6 15.72 3.4 44.19 5.95 47.59 1.7-9.35-12.32-28.47-16.15-44.19-19.55-2.97-4.25-2.55-12.32-8.92-17.85 8.92 2.97 9.77 8.5 13.6 12.75 19.55.85 47.17 12.75 50.14 28.89-7.65 2.97-20.82 3.82-33.57 2.55 15.3 3.82 32.72 5.95 50.14 5.52 42.92-1.27 84.13-7.65 105.38-48.01 4.68-8.93 8.08-2.13 3.41 8.07z\\\" />\\r\\n  <path fill=\\\"#FFCF39\\\"\\r\\n    d=\\\"M412.25 312.12h-74.36c-7.22 0-8.07 2.55-17 14.87-2.55 2.97-.42 5.95 4.25 6.37 8.5.43 20.82.85 35.27 1.7-2.55-3.82-2.97-8.5-2.12-11.05 4.25-3.4 10.2-3.4 12.75-3.4-5.52 18.27 17 19.97 18.7 2.55.42 1.27.85 7.65-2.97 12.32 10.62 0 22.1.42 33.99.85-14.02.42-25.92.85-36.54 1.27-2.12 1.27-5.1 2.55-9.35 2.55s-7.22-.85-9.77-2.12c-25.92.42-41.22.42-54.39-.42-6.8-.42-5.95-3.82-5.52-8.07.42-2.55 5.95-47.17 9.77-80.31 2.55-19.55 8.07-42.49 24.64-48.01-2.12-6.37-7.65-19.55-10.62-27.62-4.25-10.62 2.12-19.12 15.72-19.12h52.69c3.82 0 8.92 0 13.17 2.55 5.1 2.97 7.65 8.92 5.1 15.3-4.67 12.32-10.62 27.62-11.05 28.89 6.37 2.97 8.07 4.67 11.05 8.5 9.77 11.9 12.32 31.02 13.17 38.24 3.4 27.19 8.07 64.59 8.92 71.81-1.7-4.67-3.4-7.65-25.5-7.65zm-18.27-145.74h-49.29c-5.52 0-4.25 5.1-1.7 10.62 4.25 9.77 7.65 17.85 10.2 23.37h37.39c2.55-5.1 7.65-17 11.05-25.49 3.82-9.78-3.4-8.5-7.65-8.5zM209.99 607.86c1.27-1.7 6.37-6.8 9.35-9.35-2.12-2.55-3.4-5.52-3.4-9.35 0-7.65 6.37-14.02 14.02-14.02h23.79c7.65 0 14.02 6.37 14.02 14.02 0 3.82-1.27 7.22-3.82 9.77l8.92 8.92c-16.98 6.39-47.15 6.81-62.88.01zm43.77-161.46h-23.79c-7.65 0-14.02-6.37-14.02-14.02s6.37-14.02 14.02-14.02h23.79c7.65.42 14.02 6.37 14.02 14.02s-6.37 14.02-14.02 14.02zm-24.22-116.43h23.8c7.65 0 14.02 5.95 14.02 14.02 0 7.65-6.37 14.02-14.02 14.02h-23.8c-7.65 0-14.02-6.37-14.02-14.02 0-7.65 6.37-14.02 14.02-14.02zm24.22-60.34h-23.79c-7.65 0-14.02-6.37-14.02-14.02s6.37-14.02 14.02-14.02h23.79c7.65 0 14.02 6.37 14.02 14.02s-6.37 14.02-14.02 14.02zm-33.57-78.18h42.49v41.64h-42.49v-41.64zm13.6-40.37h15.3v17.85h-15.3v-17.85zm8.07-16.99 7.22 13.17-15.3.42 8.08-13.59zM114.81 455.32c-3.4 1.27-6.8 1.7-9.77.42-2.97-1.27-5.52-3.4-6.8-6.8-.4-.88-.7-1.8-.95-2.74.72.12 1.47.19 2.23.19 1.34 0 2.64.07 3.9.18.48 1.25 1.72 2.83 3.75 3.64 2.12.85 4.25.43 5.1-.42.64-.27 1.27-.64 1.89-1.06.24.07.46.15.65.21 2.97-2.12 4.67-4.67 5.52-7.22l-.81-.12c.82-2.09 1.23-4.16 1.23-5.83 0-4.25-1.7-7.65-4.67-8.92-2.12-.42-4.25 0-5.52.42-2.97 1.27-5.52 4.25-7.22 8.07-.48 1.45-.78 2.97-.9 4.45-2.15-.11-4.08-.14-5.71-.08.18-2.04.68-4.09 1.51-6.07 2.12-5.52 5.95-9.35 10.2-11.47 3.4-1.27 6.8-1.7 9.77 0 7.22 2.97 10.62 12.75 6.8 22.1-2.12 5.1-5.95 9.35-10.2 11.05z\\\" />\\r\\n  <path fill=\\\"#E2A034\\\"\\r\\n    d=\\\"M359.99 227.57c-1.7 12.75-1.7 57.79-2.12 76.91-9.35.42-22.1 0-24.64.85 1.7-19.97 2.97-66.71 3.82-80.73.85-14.45 7.65-17.85 17-17.42h31.87c-10.63.84-24.23 6.36-25.93 20.39zm-104.1 15.29h-28.47c0-.85.43-8.92-7.22-9.77h25.07v-41.64h11.47v41.64h5.95c-7.23 1.7-6.8 7.65-6.8 9.77zm-14.03-91.78h4.67v17.85h-4.67v-17.85zm0-16.99 4.67 13.6-4.67-.42v-13.18zm-110.05-29.32c3.82 27.62-18.27 35.69-25.07 36.12-4.67 1.27-2.12 5.95-2.12 5.95 2.12 2.97 3.82 4.25 11.05 8.92 2.12 2.55-2.97 4.25-2.97 4.25s-9.35-8.92-14.02-11.47c-2.12-.85 1.27-3.82-1.27-4.67-.85-.42-9.35-.85-10.62-1.7 16.15-1.7 41.64-15.72 26.34-35.27 11.47 24.64-31.87 32.72-35.27 33.14-12.75 2.12-21.67 15.3-25.92 11.05-4.67 4.67-14.87 5.52-10.62 2.97 3.82-2.55 17.85-14.02 27.62-27.19 21.25-28.89 39.94-31.02 41.22-36.54 2.55-14.45 26.34-19.12 30.59-2.55 2.12.42 5.1 1.27 8.5 4.25-3.4 0-6.8 0-8.92.85-5.54 2.54-8.94 7.21-8.52 11.89zm2.55-18.7c-1.27 0-2.55 1.27-2.55 2.55 0 1.27 1.27 2.55 2.55 2.55 1.27 0 2.55-.85 2.55-2.55s-1.27-2.97-2.55-2.55zm117.7 510.74c-17.42 1.27-25.92-.42-25.92-.42s23.37-2.55 32.29-14.45c2.13 2.55 3.4 14.02-6.37 14.87zm.85-155.09h-26.34s19.97-1.27 32.29-14.45c3.82 2.13 4.25 14.45-5.95 14.45zm0-88.81h-26.34s19.97-1.27 32.29-14.45c3.4 2.13 4.25 14.45-5.95 14.45zm.43-88.38H227s19.97-1.27 32.29-14.45c3.39 2.13 4.24 14.45-5.95 14.45z\\\" />\\r\\n  <path fill=\\\"#EE422D\\\" d=\\\"M132.66 111.14c0 21.25-16.57 28.04-20.82 28.89 1.28-4.67 8.07-26.76 20.82-28.89\\\" />\\r\\n  <path fill=\\\"#81C341\\\"\\r\\n    d=\\\"M174.3 274.31s21.25-10.62 23.37-21.25c-6.37-6.37-22.95-6.8-22.95-6.8s19.12-14.45 18.27-24.64c-9.35-4.25-26.34-1.7-26.34-1.7 7.65-10.62 9.77-19.55 9.77-26.77-9.77-1.7-25.07 4.25-25.07 4.25s5.1-18.27 0-27.62c-8.92-2.55-21.67 13.6-21.67 13.6s-4.67-19.97-15.3-30.17c-10.62 10.62-15.3 30.17-15.3 30.17s-12.75-16.15-22.1-13.6c-5.1 9.35 0 27.62 0 27.62s-15.3-5.95-25.07-4.25c-.42 7.65 2.12 16.15 9.77 26.77 0 0-17-2.55-26.34 1.7-.85 10.62 18.27 24.64 18.27 24.64s-16.57.42-22.95 6.8c2.12 10.62 22.95 21.25 22.95 21.25s-12.32 2.55-20.4 11.47c5.1 6.37 15.72 12.75 24.64 14.02-7.22 5.52-11.47 10.2-13.6 14.02 11.9 9.77 37.39 11.05 62.46 3.4 0 4.67 0 43.77-5.95 61.61h25.49c-5.95-17.85-5.95-56.94-5.95-61.61 25.07 7.65 50.56 6.37 62.46-3.4-1.7-3.4-5.95-8.07-13.6-14.02 8.5-1.27 19.55-7.65 24.22-14.02-6.76-8.92-19.08-11.47-19.08-11.47\\\" />\\r\\n  <path fill=\\\"#07974B\\\"\\r\\n    d=\\\"M151.36 274.73c2.55-1.27 14.45-5.1 20.82-16.15-6.37-5.95-20.82-6.37-20.82-6.37s13.17-8.5 17.42-21.25c-11.05-3.4-22.52 0-22.52 0s9.35-13.6 10.62-24.64c-10.62 1.27-22.1 6.8-22.1 6.8 3.4-7.22 4.67-17 3.4-25.49-5.1.85-10.2 7.22-13.17 11.05-2.55-8.5-7.22-11.47-10.62-13.17-5.1 7.65-6.37 12.75-5.52 22.95 1.7-1.7 4.67-4.67 8.92-7.22 2.55 14.87-2.55 25.92-2.55 25.92s6.37-4.25 15.3-5.1c.42 8.07-2.55 17-11.47 26.77 0 0 7.65-4.67 16.57-5.1-1.27 11.47-8.5 19.55-15.72 25.92 4.67-2.12 13.17-2.12 19.12-.42-2.97 8.92-9.77 13.17-19.97 18.7 6.37 0 12.75.85 16.15 3.4-4.25 7.65-14.02 11.05-20.82 13.17 15.72 5.95 31.02 8.5 45.89 5.1-.85-4.67-6.8-9.77-13.17-13.6 5.95-1.27 14.87-3.4 22.95-9.77-4.69-5.97-11.06-9.37-18.71-11.5\\\" />\\r\\n  <path fill=\\\"#fff\\\" fill-rule=\\\"evenodd\\\" class=\\\"dark-only\\\"\\r\\n    d=\\\"M483.06 0 .4.05v390.87c-.09 125.7 152.44 256.62 241.01 261.36l.32.02.33-.02c88.59-4.74 241.11-135.66 241.02-261.35L483.06 0zm-12.2 12.23-458.23.05v378.65c-.08 117.34 146.75 244.4 229.1 249.09 82.37-4.69 229.2-131.77 229.12-249.11.5-145.16.09-341.72.01-378.68zM16.27 636.17s3.41-1.95 3.41-1.98c.02 0 2.13-.92 2.22-.98 0 0 5.82-2.63 6.09-2.71 0 0 6.24-2.89 6.2-2.86 13.22-5.57 28.15-11.85 37.64-24.83l1.12-1.53c.25.98.49 1.85.49 1.85.78 3.13 1.17 6.19 1.17 9.14 0 5.78-1.47 11.25-3.04 17.11-1.7 6.31-3.83 14.16-4.19 24.5l-.05 1.63h348.32l-.05-1.63c-.36-10.36-2.48-18.21-4.29-24.9-1.57-5.92-2.91-11.01-2.91-16.7 0-3.12.39-6.09 1.18-9.13 0 0 .26-.98.48-1.83.57.82 1.07 1.5 1.07 1.5 9.51 12.97 24.46 19.26 37.63 24.8 0 0 5.17 2.32 5 2.18 0 0 .49.29.7.42 0 0 8.74 3.94 8.77 3.95 0 0 7.44 4.72 7.61 4.84 7.71 4.68 12.19 10.28 12.19 24.89 0 0-.19 5.98-.19 6.04l.01 8.42-.05 39.39c0 4.68-1.86 8.99-5.42 12.4-5.44 5.31-14.31 8.25-24.36 7.99H30.13c-10.14.26-19.08-2.68-24.5-7.99-3.56-3.47-5.44-7.72-5.44-12.29l-.02-39.19v-8.33L0 665.37c0-16.97 6.46-23.92 16.27-29.2zm46.72 17.15c-2.06-5.06-3.07-9.42-3.07-13.32 0-3.27.63-5.96 1.17-8.31l.21-1.32.8-5.37-3.32 2.95c-5.94 5.31-13.12 8.01-18.97 10.2 0 0-7.6 3.18-7.8 3.28 0 0-2.55 1.3-2.89 1.48-4.16 2.53-7.27 5.84-8.31 8.77l-.56 1.63 1.65.45c4.14 1.15 9.14 1.73 14.88 1.73h27.13l-.92-2.17zm398.9-2.25c-1.04-2.36-3.32-4.9-6.41-7.01 0 0-6-3.26-6.14-3.33 0 0-6.22-2.56-6.28-2.57-5.77-2.21-12.95-4.92-18.87-10.2l-3.24-2.83.7 5.13s.22 1.38.32 1.8c.53 2.41 1.1 4.91 1.1 7.95 0 3.8-1.03 8.16-3.14 13.32l-.91 2.18h27.13c7.68 0 12.34-1.26 14.89-2.3l1.51-.64-.66-1.5zM11.7 664.69s.2 5.36.2 5.24l-.02 8.72.02 39.09c0 1.48.61 2.75 1.86 3.97 3.05 3.06 9.29 4.84 16.24 4.66h423.17c6.84.18 12.97-1.6 15.96-4.62 1.32-1.21 1.96-2.53 1.96-4.09l.01-48.13.4-9.17-2.58 1.56c-5.65 3.45-13.53 5.28-22.77 5.28H36.79c-9.4 0-17.07-1.38-22.79-4.1l-2.38-1.08.08 2.67z\\\" />\\r\\n  </svg>\\r\\n\";","export default \"<svg class=\\\"dag-logo\\\" viewBox=\\\"0 0 400.86 89.38\\\">\\r\\n  <style type=\\\"text/css\\\">\\r\\n    .primary {\\r\\n      stroke: none;\\r\\n      fill: #000;\\r\\n    }\\r\\n\\r\\n    .thistle {\\r\\n      stroke: none;\\r\\n      fill: #951272;\\r\\n    }\\r\\n\\r\\n    .leaf {\\r\\n      stroke: none;\\r\\n      fill: #00843D;\\r\\n    }\\r\\n  </style>\\r\\n  <path class=\\\"thistle\\\" d=\\\"M302.62,13.21h7.4v18.85c-2.32-1.43-4.78-2.54-7.4-3.33V13.21z M292.84,6.13h7.4v21.97\\r\\n\\tc-2.35-0.53-4.82-0.82-7.4-0.87V6.13z M283.03,0.65h7.4v26.59c-2.58,0.09-5.05,0.43-7.4,1.01V0.65z M273.18,7.77h7.4v21.18\\r\\n\\tc-2.62,0.86-5.08,2.03-7.4,3.53V7.77z\\\" />\\r\\n  <path class=\\\"leaf\\\" d=\\\"M276.84,76.99c1.32,1.33,2.75,2.44,4.31,3.33l-2.58,6.17c-2.48-1.27-4.79-2.93-6.9-4.99\\r\\n\\tc-4.71-4.65-7.4-10.32-8.07-17.01h7.45C271.64,69.52,273.57,73.69,276.84,76.99z M291.95,83.02c1.75,0,3.4-0.17,4.97-0.5l2.56,6.13\\r\\n\\tc-2.37,0.59-4.88,0.89-7.53,0.89c-2.81,0-5.47-0.34-7.97-1l2.55-6.12C288.24,82.83,290.04,83.02,291.95,83.02z M312.69,64.48h7.54\\r\\n\\tc-0.67,6.74-3.36,12.41-8.07,17.01c-2.2,2.16-4.61,3.88-7.23,5.17l-2.57-6.15c1.68-0.92,3.22-2.1,4.63-3.53\\r\\n\\tC310.21,73.69,312.11,69.52,312.69,64.48z\\\" />\\r\\n  <path class=\\\"primary\\\" d=\\\"M383.68,88.98h-8.24l-12.6-45.04l-13.5,45.04l-8.16,0.08l-15.84-55.82h7.76l12.44,47.38l13.57-47.38h8.08\\r\\n\\tl12.52,47.22l13.17-47.22h7.76L383.68,88.98z M306.98,45.22c-3.94-4.02-8.97-6.03-15.11-6.03c-6.09,0-11.12,2.01-15.11,6.03\\r\\n\\tc-3.45,3.49-5.39,7.99-5.81,13.5h-7.44c0.48-7.21,3.19-13.21,8.15-18.01c5.49-5.36,12.25-8.04,20.28-8.04\\r\\n\\tc8.03,0,14.76,2.68,20.2,8.04c4.97,4.8,7.68,10.8,8.16,18.01h-7.52C312.37,53.21,310.44,48.7,306.98,45.22z M228.65,89.46\\r\\n\\tc-7.7,0-14.3-2.68-19.8-8.04c-5.49-5.36-8.24-12.15-8.24-20.35c0-8.26,2.75-15.04,8.24-20.35c5.49-5.36,12.25-8.04,20.28-8.04\\r\\n\\tc5.82,0,10.99,1.37,15.51,4.1c4.58,2.73,7.95,6.68,10.1,11.82h-8.89c-3.34-6.27-8.92-9.41-16.73-9.41c-6.09,0-11.12,2.01-15.11,6.03\\r\\n\\tc-3.93,3.97-5.9,9.25-5.9,15.84c0,6.6,1.97,11.91,5.9,15.92c3.99,4.02,8.92,6.03,14.79,6.03c5.93,0,10.67-1.66,14.22-4.99\\r\\n\\tc3.61-3.32,5.71-7.83,6.3-13.51h-23.11v-5.79h30.87v5.79c-0.75,7.19-3.74,13.14-8.97,17.86C242.9,87.1,236.41,89.46,228.65,89.46z\\r\\n\\t M246.82,9.84c0.7,0.26,1.48,0.48,2.34,0.67c0.88,0.19,1.74,0.42,2.59,0.67c0.88,0.23,1.66,0.54,2.37,0.93\\r\\n\\tc0.71,0.38,1.28,0.95,1.73,1.72c0.45,0.77,0.67,1.71,0.67,2.84c0,1.72-0.66,3.22-1.98,4.49c-1.32,1.28-3.11,1.91-5.38,1.91\\r\\n\\tc-2.24,0-4.07-0.51-5.47-1.53c-1.41-1.04-2.11-2.45-2.11-4.21h3.11c0.09,1,0.48,1.81,1.18,2.42c0.73,0.61,1.79,0.92,3.2,0.92\\r\\n\\tc1.41,0,2.53-0.36,3.36-1.08c0.83-0.72,1.25-1.56,1.25-2.52c0-0.98-0.23-1.72-0.67-2.23c-0.45-0.53-1.02-0.92-1.73-1.18\\r\\n\\tc-0.7-0.25-1.49-0.47-2.37-0.64c-0.85-0.19-1.72-0.41-2.59-0.67c-0.86-0.25-1.63-0.57-2.34-0.96c-0.71-0.4-1.28-0.98-1.73-1.75\\r\\n\\tc-0.45-0.79-0.67-1.75-0.67-2.9c0-1.87,0.66-3.36,1.98-4.49c1.34-1.15,3.08-1.72,5.22-1.72c2.16,0,3.87,0.5,5.12,1.5\\r\\n\\tc1.28,0.98,2.02,2.34,2.21,4.08h-3.23c-0.09-0.87-0.5-1.61-1.25-2.23c-0.72-0.62-1.72-0.92-2.97-0.92c-1.24,0-2.25,0.32-3.04,0.95\\r\\n\\tc-0.79,0.62-1.18,1.53-1.18,2.74c0,0.8,0.23,1.47,0.67,2.01C245.54,9.19,246.11,9.58,246.82,9.84z M227.31,20.48\\r\\n\\tc1.47,0,2.79-0.32,3.94-0.96c1.15-0.66,2.05-1.59,2.69-2.8h3.52c-0.86,2.04-2.19,3.6-4,4.68c-1.79,1.08-3.84,1.63-6.15,1.63\\r\\n\\tc-3.18,0-5.86-1.07-8.03-3.19c-2.18-2.12-3.27-4.81-3.27-8.06c0-3.27,1.09-5.96,3.27-8.06c2.18-2.12,4.85-3.19,8.03-3.19\\r\\n\\tc2.31,0,4.35,0.54,6.15,1.63c1.81,1.08,3.15,2.64,4,4.68h-3.52c-1.32-2.49-3.53-3.73-6.63-3.73c-2.41,0-4.41,0.79-5.99,2.39\\r\\n\\tc-1.56,1.57-2.34,3.66-2.34,6.28s0.78,4.71,2.34,6.31C222.9,19.68,224.9,20.48,227.31,20.48z M209.47,0.75h2.91v22.08h-2.91V0.75z\\r\\n\\t M199.75,22.83h-2.92V3.08h-5.86V0.75h14.63v2.33h-5.86V22.83z M181.87,22.83h-2.91v-8.35l-7.24-13.73h3.2l5.47,11.06l5.44-11.06\\r\\n\\th3.24l-7.21,13.73V22.83z M159.89,0.75h2.91v19.85h7.78v2.23h-10.69V0.75z M172.99,32.67c5.44,0,9.75,1.26,12.93,3.78\\r\\n\\tc3.24,2.47,5.09,5.9,5.58,10.29h-8.16c-0.22-2.2-1.27-4.07-3.15-5.63c-1.83-1.56-4.33-2.33-7.51-2.33c-3.12,0-5.68,0.81-7.67,2.42\\r\\n\\tC163,42.75,162,45.06,162,48.11c0,2.04,0.56,3.73,1.7,5.07c1.13,1.34,2.59,2.33,4.37,2.98c1.77,0.64,3.74,1.21,5.9,1.69\\r\\n\\tc2.21,0.48,4.39,1.05,6.55,1.69c2.21,0.59,4.2,1.37,5.98,2.33c1.78,0.96,3.23,2.41,4.36,4.34c1.13,1.93,1.7,4.31,1.7,7.16\\r\\n\\tc0,4.34-1.67,8.12-5.01,11.34c-3.34,3.22-7.87,4.82-13.57,4.82c-5.65,0-10.26-1.29-13.82-3.86c-3.56-2.63-5.33-6.17-5.33-10.62h7.84\\r\\n\\tc0.21,2.52,1.21,4.56,2.99,6.11c1.83,1.56,4.52,2.33,8.08,2.33c3.56,0,6.39-0.91,8.48-2.73c2.1-1.82,3.15-3.94,3.15-6.35\\r\\n\\tc0-2.47-0.57-4.34-1.7-5.63c-1.13-1.34-2.58-2.33-4.36-2.98c-1.78-0.64-3.77-1.18-5.98-1.61c-2.16-0.48-4.34-1.05-6.55-1.69\\r\\n\\tc-2.16-0.64-4.12-1.45-5.9-2.41c-1.78-1.02-3.23-2.49-4.36-4.42c-1.13-1.98-1.7-4.43-1.7-7.32c0-4.72,1.67-8.5,5.01-11.34\\r\\n\\tC163.21,34.12,167.6,32.67,172.99,32.67z M151.33,17.99h-9.86l-1.73,4.84h-2.98l8.07-22.08h3.2l8.03,22.08h-3.01L151.33,17.99z\\r\\n\\t M146.4,4.29l-4.1,11.4h8.19L146.4,4.29z M118.35,5.31v17.52h-2.91V0.75h2.91l11.72,17.53V0.75h2.91v22.08h-2.91L118.35,5.31z\\r\\n\\t M106.88,17.99h-9.86l-1.73,4.84h-2.98l8.06-22.08h3.2l8.03,22.08h-3.01L106.88,17.99z M101.95,4.29l-4.1,11.4h8.19L101.95,4.29z\\r\\n\\t M75.12,17.99h-9.86l-1.73,4.84h-2.98l8.06-22.08h3.2l8.03,22.08h-3.01L75.12,17.99z M70.19,4.29l-4.1,11.4h8.19L70.19,4.29z\\r\\n\\t M51.82,22.83h-2.92V3.08h-5.86V0.75h14.63v2.33h-5.86V22.83z M35.48,17.99h-9.86l-1.73,4.84h-2.98l8.06-22.08h3.2l8.03,22.08h-3.01\\r\\n\\tL35.48,17.99z M30.55,4.29l-4.1,11.4h8.19L30.55,4.29z M6.66,22.83h-7.01V0.75h7.01c3.59,0,6.41,1,8.48,3\\r\\n\\tc2.07,2,3.11,4.72,3.11,8.16c0,3.44-1.04,6.13-3.11,8.06C13.07,21.88,10.25,22.83,6.66,22.83z M13.06,5.5\\r\\n\\tc-1.47-1.53-3.61-2.29-6.4-2.29h-4.1v17.4h4.1c2.79,0,4.93-0.77,6.4-2.29c1.47-1.53,2.21-3.66,2.21-6.4\\r\\n\\tC15.27,9.17,14.53,7.03,13.06,5.5z M28.23,32.67c5.82,0,10.99,1.37,15.51,4.1c4.58,2.73,7.95,6.68,10.1,11.82h-8.89\\r\\n\\tc-3.34-6.27-8.91-9.41-16.72-9.41c-6.09,0-11.12,2.01-15.11,6.03c-3.93,3.97-5.9,9.25-5.9,15.84c0,6.6,1.97,11.91,5.9,15.92\\r\\n\\tc3.99,4.02,8.92,6.03,14.79,6.03c5.93,0,10.67-1.66,14.22-4.99c3.61-3.32,5.71-7.83,6.3-13.51H25.32v-5.79h30.87v5.79\\r\\n\\tc-0.75,7.19-3.74,13.14-8.97,17.86C42,87.1,35.51,89.46,27.75,89.46c-7.71,0-14.3-2.68-19.8-8.04c-5.5-5.36-8.24-12.15-8.24-20.35\\r\\n\\tc0-8.26,2.75-15.04,8.24-20.35C13.45,35.35,20.21,32.67,28.23,32.67z M72.79,83.34h19.64v5.63H65.43V33.23h7.35V83.34z\\r\\n\\t M126.09,33.23l20.28,55.74h-7.59l-4.36-12.23h-24.89l-4.36,12.23h-7.51l20.36-55.74H126.09z M132.31,70.96l-10.34-28.8l-10.34,28.8\\r\\n\\tH132.31z\\\" />\\r\\n</svg>\\r\\n\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"448\\\" height=\\\"392\\\" viewBox=\\\"0 0 448 392\\\">\\r\\n  <defs>\\r\\n    <style>\\r\\n      .cls-1 {\\r\\n        fill-rule: evenodd;\\r\\n      }\\r\\n    </style>\\r\\n  </defs>\\r\\n  <path id=\\\"Color_Fill_1\\\" data-name=\\\"Color Fill 1\\\" class=\\\"cls-1\\\" d=\\\"M16,62H432a15.8,15.8,0,0,0,16-16V16A15.8,15.8,0,0,0,432,0H16A15.8,15.8,0,0,0,0,16V46A15.8,15.8,0,0,0,16,62Zm0,165H432a15.8,15.8,0,0,0,16-16V181a15.8,15.8,0,0,0-16-16H16A15.8,15.8,0,0,0,0,181v30A15.8,15.8,0,0,0,16,227Zm0,165H432a15.8,15.8,0,0,0,16-16V346a15.8,15.8,0,0,0-16-16H16A15.8,15.8,0,0,0,0,346v30A15.8,15.8,0,0,0,16,392Z\\\"/>\\r\\n</svg>\\r\\n\";","export default \"<svg class=\\\"hexagons\\\" viewBox=\\\"0 0 390.67 299.33\\\">\\r\\n  <style type=\\\"text/css\\\">\\r\\n    .hex {\\r\\n      fill: none;\\r\\n      stroke: #000;\\r\\n    }\\r\\n\\r\\n    .hex-logo {\\r\\n      stroke: none;\\r\\n      fill: #000;\\r\\n    }\\r\\n\\r\\n    .active .hex {\\r\\n      stroke: none;\\r\\n      fill: #000;\\r\\n    }\\r\\n\\r\\n    .active .hex-logo {\\r\\n      fill: #fff;\\r\\n    }\\r\\n  </style>\\r\\n\\r\\n  <!-- PSM -->\\r\\n  <g class=\\\"STATS5077\\\">\\r\\n    <path class=\\\"hex\\\" d=\\\"M3.76,128.98l22.75-39.41h45.5l22.75,39.41l-22.75,39.41h-45.5L3.76,128.98z\\\" />\\r\\n    <path class=\\\"hex-logo\\\" d=\\\"M23.1,142.78v-1.51h0.59c8.03,0,12.84-10.72,16.7-19.33c3.01-6.72,5.4-12.03,8.75-12.03\\r\\n    c2.98,0,5.17,4.98,7.94,11.28c3.94,8.95,8.85,20.09,17.51,20.09h0.59v1.51H23.1z M57.67,125.39L57.6,141.6h12.73\\r\\n    C64.6,139.21,60.78,132.19,57.67,125.39z\\\" />\\r\\n  </g>\\r\\n\\r\\n  <!-- R -->\\r\\n  <g class=\\\"STATS5078\\\">\\r\\n    <path class=\\\"hex\\\" d=\\\"M76.48,87.22l22.75-39.41h45.5l22.75,39.41l-22.75,39.41h-45.5L76.48,87.22z\\\" />\\r\\n    <path class=\\\"hex-logo\\\" d=\\\"M136.56,96.71l5.28,8.89l-8.76,0l-3.15-5.9c-1.71,0.51-3.53,0.88-5.43,1.09v4.81l-7.75,0v-4.84\\r\\n    c-10.64-1.27-18.73-7.49-18.73-14.97c0-8.4,10.18-15.21,22.73-15.21c12.55,0,22.73,6.81,22.73,15.21\\r\\n    C143.48,90.07,140.82,93.94,136.56,96.71z M131.44,87.7c0-2.25-2.18-2.13-2.18-2.13l-4.69,0l0,4.35h4.7\\r\\n    C129.26,89.91,131.44,89.9,131.44,87.7z M128.46,97.09c-0.27-0.4-0.59-0.83-0.83-1.03c-0.43-0.35-0.62-0.47-1.04-0.47\\r\\n    c-0.29,0-2.08,0-2.08,0v1.73C125.88,97.31,127.2,97.23,128.46,97.09z M124.23,76.52c-9.54,0-17.28,4.66-17.28,10.4\\r\\n    c0,4.13,4,7.7,9.8,9.38V80.02h15.57c0,0,7.09,0.13,7.09,6.87c0,6.74-6.78,7.24-6.78,7.24s1.38,0.41,2.18,0.82\\r\\n    c0.13,0.07,0.31,0.17,0.5,0.29c3.43-1.68,5.51-4.4,5.51-8.33C140.81,79.7,133.77,76.52,124.23,76.52z\\\" />\\r\\n  </g>\\r\\n\\r\\n  <!-- LFD -->\\r\\n  <g class=\\\"STATS5075\\\">\\r\\n    <path class=\\\"hex\\\" d=\\\"M149.68,44.98l22.75-39.41h45.5l22.75,39.41l-22.75,39.41h-45.5L149.68,44.98z\\\" />\\r\\n    <path class=\\\"hex-logo\\\" d=\\\"M199.59,54.99c-0.45-0.57-0.49-2.25-0.07-2.89c0.16-0.23,0.27-0.28,0.63-0.25c0.37,0.03,0.48,0.1,0.65,0.46\\r\\n    c0.24,0.48,0.29,1.79,0.08,2.38C200.65,55.35,199.99,55.5,199.59,54.99z M198.67,25.3c-0.26,0.51-0.66,0.62-1.11,0.31\\r\\n    c-0.52-0.36-0.64-2.12-0.2-2.96c0.31-0.6,1-0.59,1.31,0.02C198.91,23.13,198.91,24.84,198.67,25.3z M208.14,40.76\\r\\n    c-0.44,1.37-1.51,3.46-1.73,3.4c-0.1-0.02-0.36-0.1-0.6-0.17c-0.34-0.09-0.52-0.08-0.86,0.09c-0.63,0.3-0.86,0.85-0.88,2.1\\r\\n    c-0.02,1-0.02,1.02-0.45,1.39c-0.38,0.33-0.5,0.37-0.95,0.31l-0.52-0.07l-0.03-1.89l-0.04-1.89l-0.33,0c-0.18,0-0.53,0.03-0.78,0.07\\r\\n    c-0.37,0.06-0.45,0.12-0.45,0.35c0,0.25,0.04,0.27,0.39,0.21c0.21-0.04,0.45-0.08,0.51-0.09c0.07-0.01,0.12,0.6,0.12,1.6v1.62\\r\\n    l-0.45,0.04c-0.35,0.03-0.45,0.09-0.45,0.27c0,0.21,0.09,0.23,0.98,0.23h0.99l-0.41,0.3c-0.23,0.17-0.45,0.4-0.5,0.51\\r\\n    c-0.04,0.11-0.09,0.99-0.09,1.94c-0.02,1.66-0.02,1.71-0.18,1.26c-0.25-0.69-0.67-1.02-1.34-1.02c-0.75,0-1.17,0.43-1.36,1.37\\r\\n    c-0.35,1.68,0.36,3.17,1.44,3.04c0.23-0.03,0.53-0.09,0.66-0.15c0.47-0.19-0.59,0.79-1.2,1.12l-0.6,0.32l-5.16,0.02\\r\\n    c-4.97,0.03-5.19,0.02-5.8-0.22c-0.69-0.27-1.7-1.14-1.7-1.46c0-0.11-0.05-0.2-0.11-0.2c-0.06,0-0.2-0.25-0.3-0.56\\r\\n    c-0.15-0.44-0.19-1.08-0.19-2.93c0-1.3-0.03-2.45-0.07-2.54c-0.04-0.1-0.58-0.57-1.2-1.05l-1.13-0.88v-3.22l-0.73,0.07\\r\\n    c-0.86,0.09-0.95,0.13-0.95,0.45c0,0.24,0.09,0.24,0.87,0.03c0.19-0.05,0.21,0.05,0.21,1l0,1.06l-0.48-0.54\\r\\n    c-0.75-0.84-1.73-2.36-2.26-3.48c-0.68-1.44-0.69-1.51-0.31-1.7c0.49-0.24,0.76-0.68,0.88-1.45c0.21-1.3-0.22-2.63-0.91-2.8\\r\\n    c-0.16-0.04-0.49-0.05-0.73-0.02l-0.44,0.05l0.07-1.39c0.04-0.77,0.11-1.48,0.15-1.6c0.07-0.17,0.23-0.21,0.91-0.21\\r\\n    c0.64,0,0.83-0.04,0.83-0.17c0-0.11-0.16-0.19-0.45-0.21l-0.45-0.04l-0.04-1.08c-0.03-0.93,0-1.19,0.28-1.89\\r\\n    c0.34-0.88,1.34-2.54,2.04-3.39l0.44-0.54h1.01c0.93,0,1-0.02,1-0.24c0-0.2-0.08-0.24-0.48-0.24c-0.42,0-0.48-0.03-0.48-0.28\\r\\n    c0-0.16,0.17-0.43,0.39-0.64c0.48-0.45,1.36-1.12,1.46-1.12c0.04,0,0.07,0.31,0.07,0.69c0,0.9,0.28,1.46,0.89,1.76\\r\\n    c0.43,0.21,0.52,0.21,0.96,0.06c0.7-0.24,1.03-0.92,1.03-2.12c0-0.52-0.07-1.06-0.18-1.32c-0.1-0.24-0.14-0.48-0.09-0.52\\r\\n    c0.18-0.16,1.41-0.56,2.56-0.84c0.95-0.23,1.48-0.28,3.18-0.28c2.05-0.01,3.3,0.16,4.48,0.59l0.44,0.16l-0.55,0.01\\r\\n    c-1.04,0.02-1.43,0.62-1.43,2.19c0,1.24,0.22,1.74,0.89,2.07c0.43,0.21,0.51,0.21,0.96,0.06c0.7-0.24,1.03-0.92,1.03-2.12\\r\\n    c0-0.96-0.18-1.53-0.62-1.95l-0.28-0.27l0.3,0.09c0.51,0.15,2.32,1.02,2.55,1.22c0.18,0.16,0.22,0.39,0.22,1.38v1.18h-0.48\\r\\n    c-0.4,0-0.48,0.04-0.48,0.24c0,0.22,0.08,0.24,1.2,0.24c1.12,0,1.2-0.02,1.2-0.24c0-0.2-0.08-0.24-0.48-0.24h-0.48v-1.02\\r\\n    c0-0.56,0.03-1.02,0.07-1.02c0.16,0,1.11,0.73,1.59,1.22c2.24,2.27,2.61,2.75,3.5,4.51c1.09,2.17,1.58,4.29,1.58,6.8\\r\\n    C208.83,37.91,208.63,39.22,208.14,40.76z M183.6,29.32c-1.38-0.71-2.46,0.82-2.03,2.89c0.2,0.95,0.62,1.38,1.34,1.38\\r\\n    c0.29,0,0.64-0.09,0.79-0.19c0.49-0.35,0.68-0.87,0.68-1.97C184.39,30.25,184.15,29.61,183.6,29.32z M182.91,36.58\\r\\n    c-0.71,0-1.15,0.43-1.35,1.34c-0.28,1.26,0.09,2.57,0.85,2.94c0.39,0.2,0.66,0.19,1.14-0.03c0.61-0.29,0.84-0.87,0.83-2.09\\r\\n    C184.37,37.21,183.95,36.58,182.91,36.58z M199.33,48.1c0-0.2-0.08-0.24-0.48-0.24h-0.48v-3.84l-0.33,0c-0.18,0-0.53,0.03-0.78,0.07\\r\\n    c-0.37,0.06-0.45,0.12-0.45,0.36c0,0.28,0.13,0.3,0.81,0.09c0.12-0.03,0.15,0.34,0.15,1.63v1.68h-0.48c-0.32,0-0.48,0.05-0.48,0.16\\r\\n    c0,0.29,0.15,0.32,1.34,0.32C199.25,48.34,199.33,48.32,199.33,48.1z M189.85,40.42c-0.4,0-0.48,0.04-0.48,0.24\\r\\n    c0,0.23,0.08,0.24,1.2,0.24c1.12,0,1.2-0.02,1.2-0.24c0-0.2-0.08-0.24-0.48-0.24h-0.48v-3.87l-0.6,0.08\\r\\n    c-0.81,0.11-0.96,0.18-0.96,0.45c0,0.21,0.05,0.23,0.54,0.15l0.54-0.08v3.27H189.85z M191.32,47.84l-0.45-0.04l-0.03-1.89\\r\\n    l-0.04-1.89l-0.32,0c-0.18,0-0.53,0.03-0.78,0.07c-0.37,0.06-0.45,0.12-0.45,0.35c0,0.25,0.04,0.27,0.39,0.21\\r\\n    c0.21-0.04,0.44-0.08,0.51-0.09c0.07-0.01,0.12,0.6,0.12,1.6v1.62l-0.45,0.04c-0.36,0.03-0.45,0.09-0.45,0.27\\r\\n    c0,0.21,0.09,0.23,1.2,0.23c1.11,0,1.2-0.01,1.2-0.23C191.77,47.92,191.67,47.87,191.32,47.84z M187.6,33.08l-0.45-0.04l-0.03-1.89\\r\\n    l-0.04-1.89h-0.4c-0.81,0-1.15,0.13-1.15,0.43c0,0.17,0.06,0.26,0.15,0.23c0.08-0.02,0.3-0.08,0.48-0.12l0.33-0.07v3.37h-0.48\\r\\n    c-0.35,0-0.48,0.05-0.48,0.18c0,0.15,0.22,0.18,1.26,0.18c1.02,0,1.26-0.04,1.26-0.17C188.05,33.18,187.89,33.11,187.6,33.08z\\r\\n    M187.57,40.42h-0.48v-3.87l-0.6,0.08c-0.82,0.11-0.96,0.18-0.96,0.46c0,0.21,0.06,0.23,0.48,0.16l0.48-0.08v3.26h-0.48\\r\\n    c-0.4,0-0.48,0.04-0.48,0.24c0,0.23,0.08,0.24,1.26,0.24c1.18,0,1.26-0.02,1.26-0.24C188.05,40.46,187.97,40.42,187.57,40.42z\\r\\n    M187.57,47.86h-0.48v-3.84l-0.33,0c-0.18,0-0.53,0.03-0.78,0.07c-0.38,0.06-0.45,0.12-0.45,0.36c0,0.28,0.13,0.3,0.81,0.09\\r\\n    c0.11-0.03,0.15,0.34,0.15,1.63v1.68h-0.48c-0.32,0-0.48,0.05-0.48,0.16c0,0.29,0.14,0.32,1.34,0.32c1.1,0,1.18-0.01,1.18-0.24\\r\\n    C188.05,47.9,187.97,47.86,187.57,47.86z M187.92,51.71c-0.41,0.43-0.54,0.96-0.52,2.04c0.03,1.58,0.98,2.42,2.09,1.85\\r\\n    c0.48-0.25,0.74-0.81,0.81-1.73c0.07-0.98-0.13-1.74-0.57-2.18c-0.28-0.28-0.45-0.34-0.9-0.34\\r\\n    C188.36,51.34,188.21,51.4,187.92,51.71z M191.29,25.67h-0.48V21.8l-0.6,0.08c-0.81,0.11-0.96,0.18-0.96,0.44\\r\\n    c0,0.19,0.07,0.21,0.54,0.15l0.54-0.07v3.27h-0.48c-0.4,0-0.48,0.04-0.48,0.24c0,0.22,0.08,0.24,1.2,0.24c1.12,0,1.2-0.02,1.2-0.24\\r\\n    C191.77,25.71,191.69,25.67,191.29,25.67z M191.26,29.44c-0.32-0.27-0.46-0.31-0.92-0.26c-0.91,0.1-1.33,0.84-1.33,2.3\\r\\n    c0,0.82,0.31,1.6,0.73,1.91c0.33,0.23,0.93,0.25,1.37,0.05c0.5-0.23,0.79-0.94,0.8-1.95C191.93,30.43,191.74,29.84,191.26,29.44z\\r\\n    M191.79,51.64c-0.5,0.43-0.66,0.98-0.59,2.18c0.06,1.08,0.25,1.51,0.83,1.82c0.4,0.21,1.15,0.1,1.5-0.23\\r\\n    c0.16-0.15,0.34-0.46,0.41-0.7c0.17-0.62,0.15-1.99-0.05-2.45C193.51,51.35,192.49,51.05,191.79,51.64z M193.33,48\\r\\n    c0.27,0.27,0.45,0.34,0.86,0.34c0.29,0,0.64-0.08,0.79-0.19c0.49-0.34,0.67-0.87,0.68-1.97c0-0.77-0.05-1.13-0.23-1.48\\r\\n    c-0.43-0.86-1.49-1.02-2.16-0.33C192.56,45.12,192.59,47.26,193.33,48z M193.69,40.87c0.39,0.2,0.66,0.19,1.14-0.03\\r\\n    c0.61-0.29,0.84-0.87,0.83-2.09c-0.01-1.53-0.43-2.16-1.47-2.16c-0.71,0-1.14,0.43-1.34,1.34\\r\\n    C192.57,39.18,192.94,40.49,193.69,40.87z M194.03,31.4l-0.04,1.64l-0.45,0.04c-0.29,0.02-0.45,0.1-0.45,0.21\\r\\n    c0,0.14,0.24,0.17,1.26,0.17c1.04,0,1.26-0.03,1.26-0.18c0-0.13-0.13-0.18-0.48-0.18h-0.48v-3.84l-0.51,0.01\\r\\n    c-0.77,0.02-1.11,0.14-1.11,0.41c0,0.25,0.01,0.25,0.63,0.13l0.39-0.08L194.03,31.4z M195.69,23.66c-0.12-1.27-0.57-1.83-1.46-1.83\\r\\n    c-1,0-1.43,0.65-1.43,2.16c0,1.05,0.15,1.53,0.61,1.94c0.49,0.44,1.27,0.37,1.75-0.14C195.59,25.32,195.78,24.58,195.69,23.66z\\r\\n    M195.74,51.47c-0.48,0.1-0.61,0.18-0.61,0.37c0,0.22,0.05,0.24,0.54,0.16l0.54-0.08v3.25h-0.48c-0.4,0-0.48,0.04-0.48,0.24\\r\\n    c0,0.22,0.08,0.24,1.2,0.24c1.12,0,1.2-0.01,1.2-0.24c0-0.2-0.08-0.24-0.48-0.24h-0.48v-1.92\\r\\n    C196.69,51.11,196.76,51.25,195.74,51.47z M198.88,33.08l-0.45-0.04l-0.04-1.89l-0.03-1.89h-0.4c-0.81,0-1.15,0.13-1.15,0.43\\r\\n    c0,0.17,0.06,0.26,0.15,0.23c0.09-0.02,0.3-0.08,0.48-0.12l0.33-0.07v3.37h-0.48c-0.35,0-0.48,0.05-0.48,0.18\\r\\n    c0,0.15,0.22,0.18,1.26,0.18c1.02,0,1.26-0.04,1.26-0.17C199.33,33.18,199.17,33.11,198.88,33.08z M197.97,36.58\\r\\n    c-0.65,0-0.97,0.23-1.22,0.89c-0.29,0.77-0.21,2.44,0.13,2.91c0.47,0.63,1.09,0.79,1.75,0.45c0.51-0.26,0.82-1,0.82-1.97\\r\\n    C199.45,37.33,198.97,36.58,197.97,36.58z M201.07,37.24l0.54-0.08v3.27h-0.48c-0.4,0-0.48,0.04-0.48,0.24\\r\\n    c0,0.23,0.08,0.24,1.2,0.24c1.12,0,1.2-0.02,1.2-0.24c0-0.2-0.08-0.24-0.48-0.24h-0.48v-3.87l-0.6,0.08\\r\\n    c-0.81,0.11-0.96,0.18-0.96,0.45C200.53,37.29,200.59,37.31,201.07,37.24z M202.54,29.44c-0.32-0.27-0.46-0.31-0.92-0.26\\r\\n    c-0.91,0.1-1.33,0.84-1.32,2.3c0,0.82,0.3,1.6,0.73,1.91c0.35,0.24,0.97,0.25,1.42,0.02c0.46-0.24,0.75-1,0.75-1.99\\r\\n    C203.21,30.41,203.02,29.84,202.54,29.44z M206.73,29.95c-0.52-1.04-1.91-1.07-2.4-0.04c-0.5,1.05-0.31,2.9,0.36,3.42\\r\\n    c0.38,0.3,1.19,0.33,1.57,0.06c0.49-0.35,0.68-0.87,0.68-1.97C206.95,30.66,206.9,30.29,206.73,29.95z M205.48,36.58\\r\\n    c-0.71,0-1.14,0.43-1.35,1.34c-0.28,1.26,0.09,2.57,0.85,2.94c0.4,0.2,0.66,0.19,1.14-0.03c0.61-0.29,0.84-0.87,0.84-2.09\\r\\n    C206.94,37.21,206.51,36.58,205.48,36.58z M205.06,40.33c-0.45-0.5-0.59-1.79-0.29-2.67c0.18-0.52,0.67-0.8,1.05-0.6\\r\\n    c0.5,0.26,0.74,1.5,0.52,2.61C206.19,40.43,205.48,40.79,205.06,40.33z M205.55,33.08c-0.37,0.03-0.48-0.01-0.66-0.3\\r\\n    c-0.28-0.42-0.31-2.23-0.05-2.72c0.33-0.62,1.12-0.57,1.4,0.1c0.24,0.58,0.22,1.94-0.04,2.46\\r\\n    C206.03,32.98,205.92,33.05,205.55,33.08z M202.26,32.92c-0.26,0.27-0.81,0.23-1.08-0.07c-0.33-0.37-0.39-2.15-0.08-2.75\\r\\n    c0.18-0.36,0.28-0.42,0.62-0.42c0.55,0,0.83,0.4,0.93,1.32C202.73,31.79,202.56,32.62,202.26,32.92z M197.43,40.24\\r\\n    c-0.6-0.77-0.39-2.92,0.31-3.19c0.37-0.14,0.82,0.12,0.99,0.57c0.18,0.47,0.14,2.05-0.06,2.44\\r\\n    C198.38,40.63,197.8,40.71,197.43,40.24z M194.77,25.49c-0.33,0.35-0.72,0.38-0.99,0.09c-0.31-0.34-0.45-0.84-0.45-1.6\\r\\n    c0-1.3,0.58-2.06,1.25-1.63c0.42,0.28,0.59,0.92,0.53,1.96C195.06,25.02,194.99,25.25,194.77,25.49z M194.54,37.07\\r\\n    c0.5,0.26,0.74,1.5,0.52,2.61c-0.15,0.75-0.86,1.12-1.28,0.66c-0.45-0.5-0.59-1.79-0.29-2.67\\r\\n    C193.67,37.15,194.16,36.87,194.54,37.07z M193.94,44.46c0.27-0.16,0.74-0.01,0.94,0.3c0.1,0.16,0.19,0.69,0.22,1.23\\r\\n    c0.04,0.76,0,1.05-0.17,1.37c-0.26,0.49-0.61,0.64-1.01,0.45C193.13,47.43,193.15,44.95,193.94,44.46z M193.13,55.08\\r\\n    c-0.25,0.28-0.79,0.28-1.05,0c-0.27-0.3-0.44-1.43-0.33-2.17c0.11-0.71,0.4-1.08,0.85-1.08c0.18,0,0.42,0.11,0.54,0.24\\r\\n    C193.62,52.58,193.61,54.55,193.13,55.08z M190.98,32.92c-0.26,0.27-0.81,0.23-1.08-0.07c-0.34-0.37-0.39-2.15-0.09-2.75\\r\\n    c0.18-0.36,0.28-0.42,0.63-0.42c0.55,0,0.83,0.4,0.93,1.32C191.44,31.79,191.27,32.62,190.98,32.92z M189.6,54.68\\r\\n    c-0.23,0.66-0.89,0.82-1.29,0.3c-0.45-0.57-0.49-2.25-0.07-2.89c0.16-0.23,0.28-0.28,0.64-0.25c0.37,0.03,0.48,0.1,0.65,0.46\\r\\n    C189.76,52.78,189.8,54.09,189.6,54.68z M182.49,40.33c-0.45-0.5-0.59-1.79-0.29-2.67c0.18-0.52,0.67-0.8,1.05-0.6\\r\\n    c0.5,0.26,0.74,1.5,0.52,2.61C183.62,40.43,182.91,40.79,182.49,40.33z M182.98,33.08c-0.37,0.03-0.48-0.01-0.66-0.3\\r\\n    c-0.27-0.42-0.31-2.23-0.05-2.72c0.34-0.62,1.12-0.57,1.4,0.1c0.25,0.58,0.22,1.94-0.04,2.46\\r\\n    C183.46,32.98,183.35,33.05,182.98,33.08z M186.26,25.58c-0.3-0.25-0.56-1.39-0.45-2c0.07-0.35,0.19-0.48,0.74-0.8\\r\\n    c0.37-0.21,0.68-0.36,0.7-0.34c0.35,0.41,0.44,2.26,0.14,2.85C187.12,25.82,186.69,25.93,186.26,25.58z M178.93,32.79\\r\\n    c0.01-0.14,0.04-0.17,0.07-0.07c0.04,0.09,0.03,0.19-0.01,0.23C178.96,32.99,178.93,32.92,178.93,32.79z M178.86,37.12\\r\\n    c0.25-0.17,0.34-0.17,0.63-0.03c0.67,0.32,0.84,2.41,0.26,3.15c-0.41,0.52-0.55,0.39-0.8-0.74c-0.13-0.58-0.27-1.31-0.31-1.62\\r\\n    C178.58,37.37,178.6,37.28,178.86,37.12z M189.06,59.36h10.88c1.14,0,2.06,0.82,2.06,1.84c0,1.02-0.92,1.84-2.06,1.84h-10.88\\r\\n    c-1.14,0-2.06-0.83-2.06-1.84C187,60.19,187.92,59.36,189.06,59.36z M190.19,64.81h8.74c1.25,0,2.27,0.83,2.27,1.84\\r\\n    c0,1.01-1.02,1.84-2.27,1.84h-8.74c-1.25,0-2.27-0.82-2.27-1.84C187.91,65.63,188.93,64.81,190.19,64.81z M205.48,44.41\\r\\n    c0.16-0.02,0.39,0.05,0.5,0.16c0.18,0.18,0.16,0.25-0.36,0.9c-0.3,0.39-0.66,0.8-0.79,0.92c-0.25,0.22-0.25,0.21-0.19-0.53\\r\\n    C204.7,44.99,205.01,44.46,205.48,44.41z\\\" />\\r\\n  </g>\\r\\n\\r\\n  <!-- UABC -->\\r\\n  <g class=\\\"STATS5084\\\">\\r\\n    <path class=\\\"hex\\\" d=\\\"M294.88,44.98l22.75-39.41h45.5l22.75,39.41l-22.75,39.41h-45.5L294.88,44.98z\\\" />\\r\\n    <path class=\\\"hex-logo\\\" d=\\\"M345.71,38.83l-1.68,7.9c-0.28,1.2-0.38,1.93-0.85,3.07c-0.33,0.74-1.37,1.26-2.11,1.27\\r\\n    c-0.09-4.12-0.09-8.11-0.01-12.24h0h0l0,0l-18.43,0.11l0.01,12.2c-0.74,0-1.78-0.53-2.11-1.26c-0.47-1.15-0.57-1.87-0.86-3.07\\r\\n    L318,38.9h0.03l-0.04-4.64l5.25,0.14l0-6.33c2.53,1.69,2.53,1.69,2.54,6.33l13.18-0.2c0-4.64,0-4.64,2.53-6.33l0,6.33l22.8-0.02\\r\\n    l0,4.64L345.71,38.83z M327.15,41.16c1.33-0.73,2.88-1.08,4.65-1.08c1.65,0,3.09,0.3,4.36,0.91c1.26,0.61,2.23,1.43,2.92,2.48\\r\\n    c0.69,1.04,1.03,2.18,1.03,3.4c0,0.96-0.19,1.8-0.58,2.53c-0.39,0.73-0.86,1.35-1.4,1.88c-0.54,0.53-1.5,1.41-2.9,2.66\\r\\n    c-0.39,0.35-0.7,0.66-0.93,0.93c-0.23,0.27-0.41,0.51-0.52,0.73c-0.11,0.22-0.2,0.44-0.27,0.66c-0.06,0.22-0.15,0.61-0.28,1.17\\r\\n    c-0.22,1.18-0.89,1.77-2.02,1.77c-0.59,0-1.09-0.19-1.49-0.58c-0.4-0.39-0.61-0.96-0.61-1.72c0-0.95,0.15-1.78,0.45-2.47\\r\\n    c0.3-0.69,0.69-1.31,1.17-1.84c0.49-0.53,1.15-1.16,1.98-1.88c0.73-0.64,1.25-1.11,1.57-1.44c0.33-0.32,0.6-0.69,0.82-1.08\\r\\n    c0.22-0.39,0.33-0.82,0.33-1.29c0-0.91-0.34-1.67-1.01-2.3c-0.68-0.62-1.55-0.94-2.61-0.94c-1.25,0-2.17,0.32-2.76,0.95\\r\\n    c-0.59,0.63-1.09,1.56-1.5,2.78c-0.39,1.28-1.12,1.92-2.2,1.92c-0.64,0-1.17-0.23-1.61-0.67c-0.44-0.45-0.66-0.93-0.66-1.46\\r\\n    c0-1.08,0.35-2.17,1.04-3.28C324.81,42.8,325.82,41.89,327.15,41.16z M331.39,60.74c0.72,0,1.32,0.25,1.8,0.73\\r\\n    c0.49,0.48,0.73,1.09,0.73,1.8c0,0.8-0.25,1.42-0.76,1.87c-0.51,0.46-1.1,0.68-1.77,0.68c-0.7,0-1.3-0.22-1.81-0.67\\r\\n    c-0.52-0.44-0.78-1.07-0.78-1.88c0-0.71,0.25-1.32,0.75-1.8C330.05,60.99,330.66,60.74,331.39,60.74z\\\" />\\r\\n  </g>\\r\\n\\r\\n  <!-- DMML1 -->\\r\\n  <g class=\\\"STATS5074\\\">\\r\\n    <path class=\\\"hex\\\" d=\\\"M222.16,87.22l22.75-39.41h45.5l22.75,39.41l-22.75,39.41h-45.5L222.16,87.22z\\\" />\\r\\n    <path class=\\\"hex-logo\\\" d=\\\"M288.29,101.4l-0.62,1.45l-5.33,2.13l-1.47-0.61l1.25-2.93l-3.94-7.66v9.51h-3.67v2.71h-3.98v-2.71h-5.15v2.71\\r\\n    h-3.97v-2.71h-3.67V91.52l-4.05,4.89l-10.71-9.55h-3.24v-1.57c1.36-1.33,2.73-2.65,4.07-4h1.59v2.86l7.89,7.03l4.45-5.39h5.85v-3.61\\r\\n    h-4.04V70.48h4.9v-2.41h3.24v-5.04h-0.66v-1.78h1.94v1.78h-0.66v5.04h3.24v2.41h4.89v11.69h-4.04v3.61h5.81l7.46,14.52h0\\r\\n    L288.29,101.4z M270.49,100.75c0.64,0,1.17-0.53,1.17-1.18c0-0.65-0.52-1.17-1.17-1.17c-0.65,0-1.17,0.53-1.17,1.17\\r\\n    C269.32,100.22,269.85,100.75,270.49,100.75z M269.28,97.83c0.65,0,1.17-0.53,1.17-1.18c0-0.65-0.53-1.17-1.17-1.17\\r\\n    c-0.65,0-1.17,0.53-1.17,1.17C268.11,97.3,268.63,97.83,269.28,97.83z M267.66,90.57c0.54,0,0.97-0.43,0.97-0.97\\r\\n    c0-0.53-0.43-0.97-0.97-0.97c-0.54,0-0.97,0.43-0.97,0.97C266.69,90.14,267.12,90.57,267.66,90.57z M267.18,86.98\\r\\n    c0.54,0,0.97-0.43,0.97-0.97c0-0.53-0.43-0.97-0.97-0.97c-0.54,0-0.97,0.43-0.97,0.97C266.21,86.55,266.64,86.98,267.18,86.98z\\r\\n    M264.66,93.81c0.54,0,0.97-0.43,0.97-0.97c0-0.53-0.43-0.97-0.97-0.97c-0.54,0-0.97,0.43-0.97,0.97\\r\\n    C263.69,93.37,264.12,93.81,264.66,93.81z M260.83,90.79c-0.54,0-0.97,0.43-0.97,0.97c0,0.53,0.43,0.97,0.97,0.97\\r\\n    c0.53,0,0.97-0.43,0.97-0.97C261.79,91.22,261.36,90.79,260.83,90.79z M262.73,89.12c0,0.53,0.43,0.97,0.97,0.97\\r\\n    c0.53,0,0.97-0.43,0.97-0.97c0-0.53-0.43-0.96-0.97-0.96C263.17,88.16,262.73,88.59,262.73,89.12z M264.1,72.29\\r\\n    c-1.63,0-2.96,1.3-2.96,2.91c0,1.61,1.32,2.91,2.96,2.91c1.63,0,2.96-1.3,2.96-2.91C267.06,73.6,265.74,72.29,264.1,72.29z\\r\\n    M264.68,79.28v1.16H268h3.31v-1.16H264.68z M274.85,75.2c0-1.6-1.32-2.91-2.96-2.91s-2.96,1.3-2.96,2.91\\r\\n    c0,1.61,1.32,2.91,2.96,2.91S274.85,76.81,274.85,75.2z M272.92,95.97c-0.65,0-1.17,0.53-1.17,1.17c0,0.65,0.53,1.18,1.17,1.18\\r\\n    c0.65,0,1.17-0.53,1.17-1.18C274.09,96.5,273.56,95.97,272.92,95.97z M274.13,99.13c-0.65,0-1.17,0.53-1.17,1.17\\r\\n    c0,0.65,0.53,1.17,1.17,1.17c0.65,0,1.17-0.53,1.17-1.17C275.3,99.66,274.78,99.13,274.13,99.13z M274.13,101.1\\r\\n    c-0.44,0-0.79-0.35-0.79-0.79c0-0.43,0.35-0.79,0.79-0.79c0.44,0,0.79,0.35,0.79,0.79C274.92,100.74,274.57,101.1,274.13,101.1z\\r\\n    M272.92,97.94c-0.44,0-0.79-0.36-0.79-0.79c0-0.44,0.35-0.79,0.79-0.79c0.44,0,0.79,0.35,0.79,0.79\\r\\n    C273.71,97.58,273.35,97.94,272.92,97.94z M270.15,75.2c0-0.94,0.78-1.71,1.74-1.71s1.74,0.77,1.74,1.71c0,0.95-0.78,1.71-1.74,1.71\\r\\n    S270.15,76.15,270.15,75.2z M264.1,76.92c-0.96,0-1.74-0.77-1.74-1.71c0-0.94,0.78-1.71,1.74-1.71s1.74,0.77,1.74,1.71\\r\\n    C265.84,76.15,265.07,76.92,264.1,76.92z M269.28,95.87c0.44,0,0.79,0.35,0.79,0.79c0,0.44-0.35,0.79-0.79,0.79\\r\\n    s-0.79-0.36-0.79-0.79C268.49,96.22,268.84,95.87,269.28,95.87z M270.49,98.79c0.43,0,0.79,0.35,0.79,0.79\\r\\n    c0,0.44-0.35,0.79-0.79,0.79c-0.44,0-0.79-0.36-0.79-0.79C269.7,99.14,270.06,98.79,270.49,98.79z M261.5,106.7h3.98v1.5h-3.98\\r\\n    V106.7z M261.5,110.01v-1.02h0v-0.16h3.98V110c1.32,0.7,2.22,2.07,2.23,3.66h-8.43C259.28,112.08,260.18,110.71,261.5,110.01z\\r\\n    M270.63,106.7h3.98v1.5h-3.98V106.7z M270.63,110v-1.02v-0.16h3.98v0.16V110c1.32,0.7,2.23,2.07,2.22,3.66h-8.43\\r\\n    C268.4,112.08,269.31,110.71,270.63,110z\\\" />\\r\\n  </g>\\r\\n\\r\\n  <!-- DMML2 -->\\r\\n  <g class=\\\"STATS5081\\\">\\r\\n    <path class=\\\"hex\\\" d=\\\"M294.88,212.98l22.75-39.41h45.5l22.75,39.41l-22.75,39.41h-45.5L294.88,212.98z\\\" />\\r\\n    <path class=\\\"hex-logo\\\" d=\\\"M361.26,222.4l-0.62,1.45l-5.33,2.13l-1.47-0.61l1.25-2.93l-3.94-7.66v9.52h-3.67v2.71h-3.98v-2.71h-5.15v2.71\\r\\n    h-3.97v-2.71h-3.67v-11.77l-4.05,4.88l-10.71-9.55h-3.24v-1.57c1.36-1.33,2.73-2.65,4.07-4h1.59v2.86l7.89,7.03l4.45-5.39h5.85\\r\\n    v-3.61h-4.04v-11.69h4.9v-2.41h3.24v-5.04H340v-1.78h1.94v1.78h-0.66v5.04h3.24v2.41h4.89v11.69h-4.04v3.61h5.8v0l0,0l7.46,14.52\\r\\n    h-0.01L361.26,222.4z M342.98,215.17v0.4h3.14v-0.4H342.98z M344,211.39l-0.35-0.2l-1.64,2.77l0.35,0.2L344,211.39z M344,222.53\\r\\n    c0.85,0,1.54-0.69,1.54-1.54c0-0.85-0.69-1.54-1.54-1.54c-0.85,0-1.54,0.69-1.54,1.54C342.45,221.83,343.14,222.53,344,222.53z\\r\\n    M342.81,215.32c0-0.85-0.69-1.54-1.54-1.54c-0.86,0-1.54,0.69-1.54,1.54c0,0.85,0.69,1.54,1.54,1.54\\r\\n    C342.12,216.86,342.81,216.17,342.81,215.32z M338.51,219.46l0.35,0.2l1.64-2.77l-0.35-0.2L338.51,219.46z M339.67,215.57v-0.4\\r\\n    h-3.14v0.4H339.67z M339.77,221.26h2.46v-0.36h-2.46V221.26z M337.99,222.53c0.85,0,1.54-0.69,1.54-1.54c0-0.85-0.69-1.54-1.54-1.54\\r\\n    c-0.85,0-1.54,0.69-1.54,1.54C336.44,221.83,337.13,222.53,337.99,222.53z M334.84,213.79c-0.85,0-1.54,0.69-1.54,1.54\\r\\n    c0,0.85,0.69,1.54,1.54,1.54c0.85,0,1.54-0.69,1.54-1.54C336.39,214.48,335.7,213.79,334.84,213.79z M336.29,209.59\\r\\n    c0,0.85,0.69,1.54,1.54,1.54c0.85,0,1.54-0.69,1.54-1.54c0-0.85-0.69-1.54-1.54-1.54C336.98,208.05,336.29,208.74,336.29,209.59z\\r\\n    M337.08,193.29c-1.63,0-2.96,1.3-2.96,2.91c0,1.61,1.32,2.91,2.96,2.91c1.63,0,2.96-1.3,2.96-2.91\\r\\n    C340.04,194.59,338.71,193.29,337.08,193.29z M337.65,200.28v1.16h3.32h3.31v-1.16H337.65z M347.82,196.2c0-1.6-1.32-2.91-2.96-2.91\\r\\n    c-1.64,0-2.96,1.3-2.96,2.91c0,1.61,1.32,2.91,2.96,2.91C346.5,199.11,347.82,197.81,347.82,196.2z M344.66,208.1\\r\\n    c-0.85,0-1.54,0.69-1.54,1.54c0,0.85,0.69,1.54,1.54,1.54c0.85,0,1.54-0.69,1.54-1.54C346.2,208.79,345.51,208.1,344.66,208.1z\\r\\n    M347.75,213.65c-0.85,0-1.54,0.69-1.54,1.54c0,0.85,0.69,1.54,1.54,1.54c0.85,0,1.54-0.69,1.54-1.54\\r\\n    C349.29,214.33,348.6,213.65,347.75,213.65z M343.12,196.2c0-0.94,0.78-1.71,1.74-1.71c0.96,0,1.74,0.77,1.74,1.71\\r\\n    c0,0.95-0.78,1.71-1.74,1.71C343.9,197.91,343.12,197.14,343.12,196.2z M337.08,197.91c-0.96,0-1.74-0.77-1.74-1.71\\r\\n    c0-0.94,0.78-1.71,1.74-1.71c0.96,0,1.74,0.77,1.74,1.71C338.82,197.14,338.04,197.91,337.08,197.91z M334.48,227.7h3.98v1.5h-3.98\\r\\n    V227.7z M334.48,231.01v-1.02h0v-0.16h3.98V231c1.32,0.7,2.22,2.07,2.23,3.65h-8.43C332.25,233.08,333.15,231.71,334.48,231.01z\\r\\n    M343.6,227.7h3.98v1.5h-3.98V227.7z M343.6,231v-1.02v-0.16h3.98v0.16V231c1.32,0.7,2.23,2.07,2.22,3.65h-8.43\\r\\n    C341.38,233.08,342.28,231.7,343.6,231z\\\" />\\r\\n  </g>\\r\\n\\r\\n  <!-- DMAS -->\\r\\n  <g class=\\\"STATS5080\\\">\\r\\n    <path class=\\\"hex\\\" d=\\\"M222.16,171.22l22.75-39.41h45.5l22.75,39.41l-22.75,39.41h-45.5L222.16,171.22z\\\" />\\r\\n    <path class=\\\"hex-logo\\\" d=\\\"M288.75,157.92v0.98c0,0.71-0.28,1.31-0.84,1.78c-0.56,0.47-1.22,0.7-1.99,0.7h-2.98\\r\\n    c-0.8,0-1.52-0.23-2.15-0.69c-0.68-0.48-1.01-1.09-1.01-1.8v-10.27c0-0.72,0.34-1.32,1.01-1.81c0.64-0.47,1.36-0.7,2.15-0.7h2.98\\r\\n    c0.77,0,1.43,0.24,1.99,0.73c0.56,0.48,0.84,1.08,0.84,1.78v1.09h-2.35v-0.57c0-0.77-0.34-1.16-1.02-1.16h-2.28\\r\\n    c-0.34,0-0.58,0.09-0.74,0.3c-0.16,0.2-0.24,0.44-0.24,0.73v9.48c0,0.29,0.08,0.53,0.24,0.73c0.16,0.19,0.4,0.3,0.74,0.3h2.28\\r\\n    c0.66,0,1.01-0.36,1.02-1.06c0-0.19,0-0.37,0-0.55H288.75z M278.68,191.77c-0.13,0.1-0.28,0.16-0.45,0.16h-1.17\\r\\n    c-0.48-0.87-1.32-2.31-2.53-4.32c-1.21-2-2.29-3.83-3.26-5.47v9.79h-2.38v-14.66c0-0.16,0.06-0.3,0.19-0.42\\r\\n    c0.13-0.12,0.28-0.18,0.45-0.18h1.35c0,0.01,0.07,0.15,0.22,0.41c0.15,0.26,0.34,0.61,0.58,1.05c0.24,0.44,0.52,0.93,0.83,1.49\\r\\n    c0.32,0.55,0.64,1.13,0.97,1.72c0.34,0.6,0.67,1.19,1,1.78c0.33,0.58,0.63,1.12,0.91,1.61c0.28,0.48,0.51,0.89,0.7,1.24\\r\\n    c0.2,0.34,0.33,0.57,0.39,0.68v-9.99h2.38v14.68C278.87,191.5,278.8,191.65,278.68,191.77z M277.46,160.53\\r\\n    c-0.64,0.57-1.42,0.85-2.35,0.85h-2.59c-0.93,0-1.73-0.28-2.4-0.85c-0.68-0.57-1.02-1.28-1.02-2.12v-9.3c0-0.85,0.34-1.57,1.02-2.15\\r\\n    c0.67-0.56,1.47-0.85,2.4-0.85h2.59c0.91,0,1.69,0.29,2.35,0.87c0.66,0.58,1,1.29,1,2.12v9.3\\r\\n    C278.45,159.22,278.12,159.93,277.46,160.53z M276.11,149.5c0-0.63-0.24-1.09-0.73-1.37c-0.16-0.08-0.34-0.13-0.56-0.13h-2.15\\r\\n    c-0.38,0-0.69,0.16-0.93,0.5c-0.2,0.28-0.3,0.61-0.3,1v8.51c0,0.63,0.23,1.08,0.69,1.36c0.16,0.09,0.34,0.14,0.54,0.14h2.15\\r\\n    c0.4,0,0.72-0.16,0.97-0.48c0.21-0.3,0.31-0.63,0.31-1.02V149.5z M265.39,161.44l-3.44-6.61h-1.85v6.61h-2.36v-15.29h6.4\\r\\n    c0.85,0,1.57,0.26,2.16,0.77c0.61,0.51,0.92,1.17,0.92,1.96v3.57c0,1.14-0.53,1.88-1.58,2.22c-0.33,0.11-0.69,0.17-1.09,0.17\\r\\n    l3.27,6.61H265.39z M264.86,152.3c0.01-0.12,0.02-0.25,0.02-0.37v-2.67c0-0.53-0.22-0.92-0.67-1.16c-0.14-0.07-0.3-0.1-0.48-0.1\\r\\n    h-3.63v4.96h4.02C264.57,152.96,264.81,152.74,264.86,152.3z M254.6,191.95l-3.43-6.6h-1.86v6.6h-2.36v-15.29h6.4\\r\\n    c0.84,0,1.57,0.26,2.17,0.77c0.61,0.51,0.92,1.17,0.92,1.96v3.57c0,1.14-0.53,1.88-1.58,2.22c-0.33,0.11-0.69,0.17-1.09,0.17\\r\\n    l3.27,6.6H254.6z M254.07,182.82c0.02-0.12,0.03-0.24,0.03-0.37v-2.67c0-0.53-0.23-0.92-0.68-1.16c-0.14-0.07-0.3-0.1-0.48-0.1\\r\\n    h-3.63v4.96h4.02C253.78,183.48,254.02,183.26,254.07,182.82z M255.74,154.16c-0.47,0.44-1.09,0.67-1.87,0.67h-4.56v6.61h-2.36\\r\\n    v-15.29h6.4c0.84,0,1.57,0.26,2.17,0.77c0.61,0.51,0.92,1.17,0.92,1.96v3.57C256.44,153.15,256.21,153.72,255.74,154.16z\\r\\n    M254.09,149.26c0-0.53-0.23-0.92-0.68-1.16c-0.14-0.07-0.3-0.1-0.48-0.1h-3.63v4.96h4.02c0.45,0,0.7-0.22,0.74-0.66\\r\\n    c0.02-0.12,0.03-0.25,0.03-0.37V149.26z M260.65,189.01c0,0.68,0.33,1.03,0.97,1.03h2.67c0.33,0,0.58-0.1,0.75-0.3\\r\\n    c0.18-0.2,0.27-0.44,0.27-0.73v-12.36l2.35-0.02v12.77c0,0.7-0.32,1.3-0.97,1.8c-0.61,0.46-1.32,0.7-2.11,0.7h-3.11\\r\\n    c-0.81,0-1.52-0.23-2.15-0.69c-0.68-0.48-1.01-1.09-1.01-1.81v-12.76h2.35V189.01z M281.68,188.65c-0.5,0-0.89-0.13-1.16-0.38\\r\\n    c-0.27-0.25-0.4-0.61-0.4-1.07c0-0.46,0.13-0.81,0.4-1.07c0.28-0.26,0.66-0.39,1.16-0.39c1.03,0,1.54,0.48,1.54,1.44\\r\\n    c0,0.46-0.13,0.82-0.4,1.07C282.56,188.53,282.18,188.65,281.68,188.65z M281.71,189.73c1.25,0,1.87,0.59,1.87,1.77\\r\\n    c0,0.83-0.77,2.2-2.31,4.11l-0.99-0.18c0.25-0.5,0.49-1.02,0.73-1.53c0.23-0.51,0.49-1.01,0.78-1.5c-0.48,0.39-0.96,0.35-1.45-0.11\\r\\n    c-0.25-0.22-0.38-0.54-0.38-0.96c0-0.42,0.15-0.79,0.43-1.12C280.67,189.89,281.11,189.73,281.71,189.73z\\\" />\\r\\n  </g>\\r\\n\\r\\n  <!-- APM -->\\r\\n  <g class=\\\"STATS5073\\\">\\r\\n    <path class=\\\"hex\\\" d=\\\"M149.68,128.98l22.75-39.41h45.5l22.75,39.41l-22.75,39.41h-45.5L149.68,128.98z\\\" />\\r\\n    <path class=\\\"hex-logo\\\" d=\\\"M205.87,134.15c-3.51,0.13-6.81-1.98-10.29-4.22c-0.14-0.09-0.28-0.18-0.41-0.26c-0.33,0.3-0.77,0.49-1.25,0.49\\r\\n    c-1.03,0-1.86-0.84-1.86-1.87c0-0.17,0.02-0.33,0.07-0.49c-2.29-1.29-4.63-2.28-7.05-2.3c-0.02,0-0.04,0-0.06,0\\r\\n    c-7.16,0-14.95,8.7-15.03,8.79l-1.33-1.17c0.34-0.38,8.4-9.39,16.36-9.39c0.02,0,0.05,0,0.07,0c2.97,0.02,5.7,1.24,8.33,2.77\\r\\n    c0.16-0.05,0.33-0.07,0.51-0.07c0.91,0,1.67,0.65,1.83,1.51c0.26,0.17,0.53,0.34,0.79,0.51c3.24,2.08,6.26,4.04,9.27,3.94\\r\\n    c6.08-0.24,13.52-11.09,13.59-11.2l1.46,1C220.54,122.66,212.84,133.88,205.87,134.15z M215.51,114.35c-1.03,0-1.86-0.83-1.86-1.86\\r\\n    c0-1.03,0.84-1.86,1.86-1.86c1.03,0,1.87,0.84,1.87,1.86C217.38,113.52,216.54,114.35,215.51,114.35z M184.95,118.54\\r\\n    c-1.03,0-1.86-0.84-1.86-1.86c0-1.03,0.83-1.86,1.86-1.86c1.03,0,1.86,0.83,1.86,1.86C186.82,117.7,185.98,118.54,184.95,118.54z\\r\\n    M170.35,141.78c1.03,0,1.86,0.83,1.86,1.86c0,1.03-0.83,1.86-1.86,1.86c-1.03,0-1.86-0.84-1.86-1.86\\r\\n    C168.49,142.61,169.32,141.78,170.35,141.78z M206.54,140.52c1.03,0,1.86,0.84,1.86,1.86c0,1.03-0.84,1.86-1.86,1.86\\r\\n    c-1.03,0-1.86-0.83-1.86-1.86C204.67,141.36,205.51,140.52,206.54,140.52z\\\" />\\r\\n  </g>\\r\\n\\r\\n  <!-- PM -->\\r\\n  <g class=\\\"STATS5076\\\">\\r\\n    <path class=\\\"hex\\\" d=\\\"M76.48,171.22l22.75-39.41h45.5l22.75,39.41l-22.75,39.41h-45.5L76.48,171.22z\\\" />\\r\\n    <path class=\\\"hex-logo\\\" d=\\\"M123.95,169.93c0.02,0.1,0.03,0.19,0.03,0.29c0,1.03-0.84,1.86-1.86,1.86c-0.09,0-0.19-0.01-0.28-0.02\\r\\n    L97.8,196.3l-1.26-1.25l23.87-24.08c-0.1-0.23-0.16-0.49-0.16-0.76c0-1.03,0.83-1.86,1.86-1.86c0.27,0,0.52,0.06,0.75,0.16\\r\\n    l22.61-22.8l1.26,1.25L123.95,169.93z M125.36,152.37c-0.95-0.39-1.41-1.48-1.02-2.43c0.39-0.95,1.48-1.41,2.43-1.02\\r\\n    c0.95,0.39,1.41,1.48,1.02,2.43C127.4,152.31,126.31,152.76,125.36,152.37z M102.43,175.51c-1.03,0-1.87-0.83-1.87-1.86\\r\\n    c0-1.03,0.84-1.86,1.87-1.86c1.03,0,1.86,0.83,1.86,1.86C104.29,174.68,103.46,175.51,102.43,175.51z M117.96,188.54\\r\\n    c0.95,0.39,1.41,1.48,1.02,2.43c-0.39,0.95-1.48,1.41-2.43,1.02c-0.95-0.39-1.41-1.48-1.02-2.43\\r\\n    C115.92,188.6,117.01,188.15,117.96,188.54z M140.9,165.4c1.03,0,1.86,0.84,1.86,1.86c0,1.03-0.84,1.87-1.86,1.87\\r\\n    c-1.03,0-1.86-0.84-1.86-1.87C139.03,166.24,139.86,165.4,140.9,165.4z\\\" />\\r\\n  </g>\\r\\n\\r\\n  <!-- DABI -->\\r\\n  <g class=\\\"STATS5079\\\">\\r\\n    <path class=\\\"hex\\\" d=\\\"M149.68,212.98l22.75-39.41h45.5l22.75,39.41l-22.75,39.41h-45.5L149.68,212.98z\\\" />\\r\\n    <path class=\\\"hex-logo\\\" d=\\\"M176.66,233.62v-10.5l0.01-10.49l7.17-4.15l7.18-4.15l0.05,4.4c0.01,2.43,0.09,4.42,0.16,4.42\\r\\n    c0.07,0,2.71-1.91,5.85-4.26l5.73-4.26l0.05,4.33l0.03,4.33l5.57-4.17c3.05-2.3,5.64-4.21,5.75-4.29c0.13-0.09,0.17,2.83,0.17,14.33\\r\\n    v14.45H176.66z M187.43,222.86h-6.96v3.48v3.47c2.32,0,4.64,0,6.96,0V222.86z M199.06,222.86h-7.07v3.48v3.47h7.07V222.86z\\r\\n    M210.57,222.86h-6.96v3.48v3.47h6.96V222.86z M176.75,193.09l4.25-0.11h1.4v6.52v8.47c-0.98,0.51-4.94,2.85-5.73,3.31\\r\\n    L176.75,193.09z\\\" />\\r\\n  </g>\\r\\n\\r\\n  <!-- DPIP -->\\r\\n  <g class=\\\"STATS5082\\\">\\r\\n    <path class=\\\"hex\\\" d=\\\"M76.48,255.22l22.75-39.41h45.5l22.75,39.41l-22.75,39.41h-45.5L76.48,255.22z\\\" />\\r\\n    <path class=\\\"hex-logo\\\" d=\\\"M139.61,259.6c-0.96,2.9-2,4.83-4.77,4.83h-14.3v1.21h9.53v3.63c0,2.75-2.37,4.15-4.77,4.85\\r\\n    c-3.61,1.05-6.51,0.89-9.53,0c-2.52-0.74-4.77-2.26-4.77-4.85v-9.08c0-2.61,2.16-4.85,4.77-4.85h9.53c3.18,0,5.96-2.76,5.96-6.05\\r\\n    v-4.23h3.58c2.78,0,4.09,2.08,4.77,4.83C140.56,253.73,140.6,256.61,139.61,259.6z M125.9,271.7c0.99,0,1.79-0.82,1.79-1.82\\r\\n    c0-1-0.8-1.81-1.79-1.81c-0.99,0-1.79,0.81-1.79,1.81C124.11,270.88,124.91,271.7,125.9,271.7z M125.29,254.15h-9.53\\r\\n    c-3.24,0-5.96,2.78-5.96,5.92v4.36h-3.28c-2.77,0-4.39-2.01-5.07-4.83c-0.91-3.79-0.88-6.06,0-9.69c0.76-3.17,3.19-4.83,5.96-4.83\\r\\n    h13.12v-1.21h-9.54v-3.64c0-2.75,0.73-4.24,4.77-4.96c1.37-0.24,2.93-0.38,4.56-0.39c1.63-0.01,3.33,0.11,4.97,0.39\\r\\n    c2.59,0.43,4.77,2.37,4.77,4.96v9.08C130.07,251.97,127.95,254.15,125.29,254.15z M115.16,237.8c-0.99,0-1.79,0.82-1.79,1.82\\r\\n    c0,1,0.8,1.81,1.79,1.81c0.99,0,1.79-0.81,1.79-1.81C116.95,238.62,116.15,237.8,115.16,237.8z\\\" />\\r\\n  </g>\\r\\n\\r\\n  <!-- PSF -->\\r\\n  <g class=\\\"STATS5094\\\">\\r\\n    <path class=\\\"hex\\\" d=\\\"M3.76,212.98l22.75-39.41h45.5l22.75,39.41l-22.75,39.41h-45.5L3.76,212.98z\\\" />\\r\\n    <path class=\\\"hex-logo\\\" d=\\\"M79.08,227.98v-4.25h4.26v4.25H79.08z M73.4,223.73h4.26v4.25H73.4V223.73z M67.72,223.73h4.26v4.25h-4.26\\r\\n    V223.73z M67.72,218.06h4.26v4.25h-4.26V218.06z M67.72,212.4h4.26v4.25h-4.26V212.4z M62.05,223.73h4.26v4.25h-4.26V223.73z\\r\\n    M62.05,218.06h4.26v4.25h-4.26V218.06z M62.05,212.4h4.26v4.25h-4.26V212.4z M62.05,206.73h4.26v4.25h-4.26V206.73z M62.05,201.06\\r\\n    h4.26v4.25h-4.26V201.06z M56.37,223.73h4.26v4.25h-4.26V223.73z M56.37,218.06h4.26v4.25h-4.26V218.06z M56.37,212.4h4.26v4.25\\r\\n    h-4.26V212.4z M56.74,216.28h3.51v-3.51h-3.51V216.28z M56.37,206.73h4.26v4.25h-4.26V206.73z M56.37,201.06h4.26v4.25h-4.26V201.06\\r\\n    z M56.37,195.4h4.26v4.25h-4.26V195.4z M56.37,189.73h4.26v4.25h-4.26V189.73z M50.69,223.73h4.26v4.25h-4.26V223.73z M50.69,218.06\\r\\n    h4.26v4.25h-4.26V218.06z M50.69,212.4h4.26v4.25h-4.26V212.4z M50.69,206.73h4.26v4.25h-4.26V206.73z M50.69,201.06h4.26v4.25\\r\\n    h-4.26V201.06z M50.69,195.4h4.26v4.25h-4.26V195.4z M50.69,189.73h4.26v4.25h-4.26V189.73z M51.06,193.61h3.52v-3.51h-3.52V193.61z\\r\\n    M50.69,184.06h4.26v4.25h-4.26V184.06z M45.01,223.73h4.26v4.25h-4.26V223.73z M45.01,218.06h4.26v4.25h-4.26V218.06z\\r\\n    M45.38,221.95h3.52v-3.51h-3.52V221.95z M45.01,212.4h4.26v4.25h-4.26V212.4z M45.01,206.73h4.26v4.25h-4.26V206.73z M45.01,201.06\\r\\n    h4.26v4.25h-4.26V201.06z M45.01,195.4h4.26v4.25h-4.26V195.4z M45.01,189.73h4.26v4.25h-4.26V189.73z M45.01,184.06h4.26v4.25\\r\\n    h-4.26V184.06z M39.34,223.73h4.26v4.25h-4.26V223.73z M39.34,218.06h4.26v4.25h-4.26V218.06z M39.34,212.4h4.26v4.25h-4.26V212.4z\\r\\n    M39.34,206.73h4.26v4.25h-4.26V206.73z M39.34,201.06h4.26v4.25h-4.26V201.06z M39.71,204.95h3.51v-3.51h-3.51V204.95z\\r\\n    M39.34,195.4h4.26v4.25h-4.26V195.4z M39.34,189.73h4.26v4.25h-4.26V189.73z M33.66,223.73h4.26v4.25h-4.26V223.73z M33.66,218.06\\r\\n    h4.26v4.25h-4.26V218.06z M33.66,212.4h4.26v4.25h-4.26V212.4z M33.66,206.73h4.26v4.25h-4.26V206.73z M33.66,201.06h4.26v4.25\\r\\n    h-4.26V201.06z M27.98,223.73h4.26v4.25h-4.26V223.73z M27.98,218.06h4.26v4.25h-4.26V218.06z M27.98,212.4h4.26v4.25h-4.26V212.4z\\r\\n    M22.3,223.73h4.26v4.25H22.3V223.73z M16.62,223.73h4.26v4.25h-4.26V223.73z\\\" />\\r\\n  </g>\\r\\n\\r\\n  <!-- HPC -->\\r\\n  <g class=\\\"STATS5083\\\">\\r\\n    <path class=\\\"hex\\\" d=\\\"M294.88,128.98l22.75-39.41h45.5l22.75,39.41l-22.75,39.41h-45.5L294.88,128.98z\\\" />\\r\\n    <path class=\\\"hex-logo\\\" d=\\\"M340.62,157.66v-55.01l28.08,8.69v37.63L340.62,157.66z M357.64,152.01l5.7-1.73v-6.44l-5.7,1.18V152.01z\\r\\n    M357.64,144.63l5.7-1.15v-6.44l-5.7,0.59V144.63z M357.64,137.25l5.7-0.56v-6.44l-5.7,0.01V137.25z M350.31,154.24l6.87-2.09v-7.04\\r\\n    l-6.87,1.42V154.24z M357.64,129.87v-6.8l-0.46-0.05v6.84L357.64,129.87z M350.31,146.1l6.87-1.38v-7.04l-6.87,0.71V146.1z\\r\\n    M350.31,137.97l6.87-0.68v-7.04l-6.87,0.01V137.97z M341.32,148.39l8.43-1.74v-0.43l-8.43,1.7V148.39z M350.31,129.84v-7.49\\r\\n    l-0.56-0.06l0,7.54L350.31,129.84z M341.32,139.33l8.43-0.88v-0.43l-8.43,0.83V139.33z M341.32,130.28l8.43-0.01v-0.43l-8.43-0.03\\r\\n    V130.28z M341.32,121.46l8.43,0.83v-0.43l-8.43-0.88V121.46z M341.32,112.4l8.43,1.7v-0.43l-8.43-1.74V112.4z M350.31,106.08\\r\\n    l-0.56-0.17l0,7.76l0.56,0.12V106.08z M350.31,121.92l6.87,0.71v-7.04l-6.87-1.38V121.92z M357.64,108.31l-0.46-0.14v7.04l0.46,0.1\\r\\n    V108.31z M357.64,122.68l5.7,0.59v-6.44l-5.7-1.15V122.68z M363.73,110.16l-0.39-0.12v6.44l0.39,0.08V110.16z M368.37,117.85\\r\\n    l-4.64-0.93v6.4l4.64,0.48V117.85z M368.37,124.13l-4.64-0.46v6.22l4.64,0.02V124.13z M368.37,130.24l-4.64,0.01v6.4l4.64-0.46\\r\\n    V130.24z M368.37,136.52l-4.64,0.48v6.4l4.64-0.93V136.52z M368.37,142.8l-4.64,0.96v6.4l4.64-1.41V142.8z M311.82,111.34\\r\\n    l28.08-8.69v55.01l-28.08-8.69V111.34z M330.77,146.65l8.43,1.74v-0.48l-8.43-1.7V146.65z M330.77,138.46l8.43,0.88v-0.48\\r\\n    l-8.43-0.83V138.46z M330.77,130.27l8.43,0.01v-0.48l-8.43,0.03V130.27z M330.77,122.29l8.43-0.83v-0.48l-8.43,0.88V122.29z\\r\\n    M330.77,114.1l8.43-1.7v-0.48l-8.43,1.74v-7.75l-0.56,0.17v7.7l0.55-0.11L330.77,114.1z M323.35,152.15l6.87,2.09v-7.71l-6.87-1.42\\r\\n    V152.15z M323.35,144.72l6.87,1.38v-7.71l-6.87-0.71V144.72z M323.35,137.29l6.87,0.68v-7.71l-6.87-0.01V137.29z M323.35,129.87\\r\\n    l6.87-0.03v-7.49l-6.87,0.68V129.87z M323.35,122.63l6.87-0.71v-7.71l-6.87,1.38V122.63z M323.35,108.17l-0.46,0.14v6.99l0.46-0.1\\r\\n    V108.17z M317.18,150.27l5.7,1.73v-6.99l-5.7-1.18V150.27z M317.18,143.48l5.7,1.15v-6.99l-5.7-0.59V143.48z M317.18,136.69\\r\\n    l5.7,0.56v-6.99l-5.7-0.01V136.69z M317.18,129.89l5.7-0.02v-6.8l-5.7,0.56V129.89z M317.18,123.27l5.7-0.59v-6.99l-5.7,1.15V123.27\\r\\n    z M317.18,110.04l-0.39,0.12v6.4l0.39-0.08V110.04z M312.15,148.75l4.64,1.41v-6.4l-4.64-0.96V148.75z M312.15,142.47l4.64,0.93V137\\r\\n    l-4.64-0.48V142.47z M312.15,136.19l4.64,0.46v-6.4l-4.64-0.01V136.19z M312.15,129.91l4.64-0.02v-6.22l-4.64,0.46V129.91z\\r\\n    M312.15,123.8l4.64-0.48v-6.4l-4.64,0.93V123.8z M330.77,113.66L330.77,113.66l-0.01,0.01l0-0.01L330.77,113.66z\\\" />\\r\\n  </g>\\r\\n</svg>\\r\\n\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 16 16\\\">\\r\\n  <path\\r\\n    d=\\\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\\\">\\r\\n  </path>\\r\\n</svg>\\r\\n\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 117.18 48.02\\\" class=\\\"uofg\\\">\\r\\n  <path fill=\\\"#003865\\\"\\r\\n    d=\\\"m114.74 32-3.83 9.36h-.8l-3.54-8.38-3.57 8.38h-.83l-4.43-9.99c-.41-.92-.83-1.37-2.2-1.51v-.54h5.77v.54c-1.75.09-1.87.59-1.25 1.99l3.21 7.16 2.91-6.9c-.65-1.51-1.16-2.05-2.2-2.17l-.71-.09v-.54h6.15v.54c-1.46.03-1.9.47-1.28 1.96l2.91 7.07 2.85-6.95c.65-1.58.15-2.08-1.72-2.08v-.54h4.99v.54c-1.12.13-1.83.7-2.43 2.15zm-.03-21.93-5.05 12.6c-.89 2.2-1.57 3.18-2.61 3.18-.71 0-1.22-.45-1.22-1.04 0-1.22 1.72-.92 2.46-1.67.33-.33.77-1.1 1.01-1.69l.89-2.23-4.6-9.77c-.57-1.22-1.1-1.73-2.35-1.75v-.54h5.97v.54c-1.81.03-2.02.56-1.43 1.81l3.36 7.25 2.52-6.3c.89-2.26.33-2.7-1.43-2.76v-.54h4.93v.54c-1.2.14-1.88.98-2.45 2.37zm-14.79 9.22c-1.75 0-3-1.46-3-3.45V8.47h-1.37v-.48c1.16-.56 2.17-1.93 2.85-3.77h.51v2.94h3.67l-.47 1.31h-3.2v6.92c0 1.87 1.34 2.5 1.96 2.5.66 0 1.25-.51 1.81-1.49l.48.45c-.72 1.54-1.88 2.44-3.24 2.44zm-11.72-.92c1.82 0 2.47-.6 2.47-2.17v-5.97c0-1.16-.15-1.31-.92-1.46l-1.4-.27v-.48l3.86-1.34h.45v9.98c0 1.04.56 1.7 2.14 1.7v.56h-6.6v-.55zm3.24-16.11c-.71 0-1.28-.51-1.28-1.13C90.17.5 90.73 0 91.44 0c.71 0 1.31.5 1.31 1.13 0 .62-.59 1.13-1.31 1.13zM86.77 15.9c0 1.93-1.61 3.39-3.69 3.39-.56 0-.98-.09-1.31-.21-.33-.09-.57-.18-.8-.18-.18 0-.36.12-.51.35h-.45l-.33-3.33h.48c.35 1.79 1.48 2.79 2.82 2.79 1.19 0 2.11-.89 2.11-1.96 0-.62-.15-1.01-.95-1.81-2.11-2.11-4.46-2.32-4.46-4.78 0-1.96 1.55-3.33 3.8-3.33.8 0 1.63.18 2.38.48l.06 2.7h-.51c-.21-1.52-1.19-2.46-2.38-2.46-.98 0-1.81.68-1.81 1.66.03 2.62 5.55 3.06 5.55 6.69zm-3.86 15.87c-.45-.03-1.84-.15-2.97-.36.18.33.5.95.5 1.9 0 2.2-1.9 4.31-5.2 4.31-.56 0-.83-.06-1.37-.24-.47.51-1.81.83-1.81 1.51 0 .75 1.28 1.04 4.25 1.07 3.36.03 4.52.18 5.41 1.07.71.71.89 1.46.89 2.08 0 1.93-2.61 4.9-8.11 4.9-3.09 0-4.57-1.37-4.57-2.82 0-1.72 1.81-1.99 3.18-3.65-1.6-.15-2.82-1.16-2.82-2.11 0-1.37 1.99-1.43 3.03-2.2-1.81-.71-2.85-1.99-2.85-3.69 0-2.56 2.29-4.55 5.23-4.55 1.37 0 2.53.42 3.33 1.19 1.34 0 2.58-.15 3.89-.3v1.89zM71.77 44.21c0 1.4 1.96 2.97 4.4 2.97 2.53 0 4.9-1.66 4.9-3.54 0-1.1-.92-1.66-1.99-1.75-.77-.09-4.51-.12-5.38-.24-.83.99-1.93 1.41-1.93 2.56zm3.57-14.64c-1.13 0-2.88.62-2.88 3.39 0 1.75.89 4.1 3.15 4.1 1.72 0 2.85-1.43 2.85-3.48 0-2.56-1.31-4.01-3.12-4.01zm.87-20.54c-.32-.15-.68-.29-1.04-.29-.53 0-.86.36-1.16.77-.39.53-.71 1.04-.95 1.48v5.76c0 1.22.45 1.61 1.93 1.61h1.13v.56h-7.04v-.56c1.52-.03 1.99-.65 1.99-2.23V9.27l-1.99-.72v-.5l3.39-1.19h.6v3.15h.06c1.48-2.44 1.84-3 2.82-3 .36 0 .45.03 1.01.27.3.12.83.24 1.54.44l-.71 1.79a5.47 5.47 0 0 1-1.58-.48zm-7.56 29.04c0 1.93-1.61 3.39-3.68 3.39-.56 0-.98-.09-1.31-.21-.32-.09-.56-.18-.8-.18-.18 0-.35.12-.5.36h-.45l-.32-3.33h.47c.36 1.78 1.49 2.8 2.83 2.8 1.19 0 2.11-.9 2.11-1.96 0-.63-.15-1.01-.95-1.82-2.11-2.11-4.46-2.32-4.46-4.78 0-1.96 1.54-3.33 3.8-3.33.8 0 1.63.18 2.38.48l.06 2.7h-.5c-.21-1.52-1.19-2.47-2.38-2.47-.98 0-1.81.68-1.81 1.66-.01 2.61 5.51 3.06 5.51 6.69zm-9.79-25.44c0 3.09 2.17 5.17 4.51 5.17 1.49 0 2.65-.59 3.78-1.93l.33.36c-1.25 1.58-3.12 3.06-5.29 3.06-2.91 0-5.17-2.65-5.17-6.09 0-3.15 2.11-6.36 5.73-6.36 4.01 0 3.92 2.88 4.9 3.86v.68h-8.68c-.05.45-.11.86-.11 1.25zm6.3-2.02c-.33-1.93-1.51-3.21-2.94-3.21-.98 0-2.46.45-3.15 3.21h6.09zm-10.33-.74-4.1 9.33h-.86l-4.31-9.86c-.45-1.04-.83-1.4-1.31-1.49l-.92-.15v-.54h6.06v.54c-1.81.06-2.38.29-1.67 1.69l3.15 7.4 3.03-6.86c.54-1.22.27-2.08-1.9-2.23v-.54h5.17v.54c-1.12.2-1.77.86-2.34 2.17zm-11.01 9.06h-6.6v-.56c1.81 0 2.47-.6 2.47-2.17v-5.97c0-1.16-.15-1.31-.92-1.46l-1.4-.27v-.48l3.86-1.34h.45v9.98c0 1.04.56 1.7 2.14 1.7v.57zM40.46 2.26c-.72 0-1.28-.51-1.28-1.13 0-.63.57-1.13 1.28-1.13.71 0 1.31.5 1.31 1.13 0 .62-.6 1.13-1.31 1.13zM29.98 18.37c.86-.03 1.36-.24 1.69-.57.56-.57.62-2.74.62-6.69 0-2.38-1.16-3.12-2.35-3.12-.95 0-2.4.83-3.95 1.9v6.45c0 1.63.39 2.02 1.99 2.02v.56h-5.97v-.56c1.31 0 1.99-.72 1.99-1.87v-6.24c0-1.1-.12-1.31-.89-1.46l-1.01-.2v-.48l3.42-1.25H26v2.32c1.99-1.25 3.65-2.35 5.11-2.35 2.02 0 3.18 1.48 3.18 4.45 0 3.95-.21 4.72-.24 5.89-.03.8.44 1.19 1.66 1.19h.65v.56h-6.39v-.55zM19.94 3.74v8.02c0 3.68-2.35 7.64-8.8 7.64-5.67 0-8.59-3.24-8.59-7.49V3.24c0-1.9-.53-2.2-2.56-2.23V.45h7.64v.56h-.26c-1.63 0-2.35.45-2.35 2.17v8.26c0 4.01 2.35 6.42 6.77 6.42 3.36 0 6.78-1.4 6.78-6.44V4.49c0-2.85-.45-3.36-2.91-3.48V.45h6.98v.56c-1.99.03-2.7.83-2.7 2.73zM3.66 41.45c-1.4 0-2.64-2.23-2.64-4.7 0-4.81 5.17-7.79 6.95-7.79.86 0 2.7 1.19 2.7 4.37 0 5.66-5.62 8.12-7.01 8.12zm2.79-11.38c-1.87 0-3.54 3.59-3.54 6.57 0 2.49 1.07 3.71 2.08 3.71 2.38 0 3.77-3.86 3.77-6.6.01-2.08-1-3.68-2.31-3.68zm5.37-.32c.71-.09 1.43-.21 2.17-.39.45-2.44 1.34-4.99 3-6.65 1.04-1.04 2.35-1.6 3.51-1.6 1.16 0 2.11.65 2.11 1.43 0 .47-.36.86-.83.86-.98 0-1.78-1.22-2.64-1.22-1.16 0-2.11 1.31-2.53 3.27l-.8 3.89h2.55l-.3.98h-2.44L14.11 39c-1.16 6.66-4.55 9.03-7.34 9.03-1.25 0-2.29-.62-2.29-1.37 0-.48.48-.89.98-.89 1.1 0 1.69 1.31 2.82 1.31.68 0 1.28-.33 1.81-.86 1.48-1.49 2.05-6.56 2.17-7.28l1.52-8.62h-2.05l.09-.57zm23.44 3.95h-1.1v-.53h8.02v.53c-1.48.09-2.08.6-2.08 1.87v4.13c-2.94 1.52-6.71 1.87-7.96 1.87-6.51 0-9.54-5.02-9.54-9.36 0-4.46 3.12-10.04 10.37-10.04 3.18 0 5.29 1.01 5.91 1.01.27 0 .51-.06.68-.21h.42v4.81h-.59c-.81-3.71-3.33-4.87-6.09-4.87-5.23 0-7.9 4.34-7.9 9.12 0 6.09 4.28 8.79 7.7 8.79 1.37 0 2.88-.3 4.55-1.13v-3.74c-.01-1.69-.61-2.25-2.39-2.25zM43.74 23l-1.34-.15v-.5l3.8-1.22h.44v17.62c0 1.22.57 1.78 1.72 1.78h.51v.57h-6.68v-.57c1.9 0 2.46-.56 2.46-1.99V24.19c.01-.83-.08-1.1-.91-1.19zm6.6 9.87c-.06-.18-.09-.27-.09-.42 0-1.04 2.47-3.45 4.4-3.45.89 0 2.29.42 3.12 1.58.45.62.45 1.01.45 2.55v3.98c0 2.38 0 2.91.77 2.91.32 0 .71-.03 1.45-.65l.15.45c-1.6 1.31-2.44 1.63-2.94 1.63-1.22 0-1.34-1.34-1.37-1.81-2.05 1.69-2.64 1.81-3.45 1.81-1.72 0-2.76-.98-2.76-2.44 0-1.81 1.6-2.44 3.51-2.91.62-.15 1.6-.51 2.64-1.13v-2.35c0-.83 0-1.31-.51-1.9-.38-.48-1.01-.86-1.66-.86-.98 0-1.84.83-1.84 1.45 0 .18.03.3.15.57l-2.02.99zm4.13 3.53c-1.81.74-2.5 1.04-2.5 2.26 0 1.07.86 1.75 1.75 1.75.47 0 .83-.15 2.5-1.31v-3.54c-.56.34-1.03.55-1.75.84zm29.05-1.1c0-4.1 3.33-6.3 6.42-6.3 3.63 0 6.39 2.7 6.39 6.24 0 3.5-2.76 6.21-6.3 6.21-3.69 0-6.51-2.67-6.51-6.15zm10.57.69c0-3.39-2.08-6.27-4.57-6.27-1.96 0-3.78 2.02-3.78 4.58 0 3.6 2.05 6.45 4.61 6.45 1.75-.01 3.74-1.79 3.74-4.76z\\\" />\\r\\n</svg>\\r\\n\";","module.exports = import(\"@double-great/remark-lint-alt-text\");;","module.exports = import(\"@mapbox/remark-lint-link-text\");;","module.exports = import(\"ansicolor\");;","module.exports = import(\"base64-arraybuffer\");;","module.exports = import(\"chalk\");;","module.exports = import(\"figures\");;","module.exports = import(\"hash-sum\");;","module.exports = import(\"image-size\");;","module.exports = import(\"js-yaml\");;","module.exports = import(\"lodash/cloneDeep.js\");;","module.exports = import(\"lodash/kebabCase.js\");;","module.exports = import(\"lodash/startCase.js\");;","module.exports = import(\"markdown-table\");;","module.exports = import(\"mathjax-full/js/adaptors/liteAdaptor.js\");;","module.exports = import(\"mathjax-full/js/core/MathItem.js\");;","module.exports = import(\"mathjax-full/js/core/MmlTree/SerializedMmlVisitor.js\");;","module.exports = import(\"mathjax-full/js/handlers/html.js\");;","module.exports = import(\"mathjax-full/js/handlers/html/HTMLDocument.js\");;","module.exports = import(\"mathjax-full/js/input/mathml.js\");;","module.exports = import(\"mathjax-full/js/input/tex.js\");;","module.exports = import(\"mathjax-full/js/input/tex/AllPackages.js\");;","module.exports = import(\"mathjax-full/js/mathjax.js\");;","module.exports = import(\"mathjax-full/js/output/svg.js\");;","module.exports = import(\"mdast-util-to-hast\");;","module.exports = import(\"mdast-util-toc\");;","module.exports = import(\"mime\");;","module.exports = import(\"node-fetch\");;","module.exports = import(\"puppeteer\");;","module.exports = import(\"refractor/lib/all.js\");;","module.exports = import(\"rehype-autolink-headings\");;","module.exports = import(\"rehype-document\");;","module.exports = import(\"rehype-format\");;","module.exports = import(\"rehype-parse\");;","module.exports = import(\"rehype-raw\");;","module.exports = import(\"rehype-slug\");;","module.exports = import(\"rehype-stringify\");;","module.exports = import(\"remark-directive\");;","module.exports = import(\"remark-frontmatter\");;","module.exports = import(\"remark-gfm\");;","module.exports = import(\"remark-parse\");;","module.exports = import(\"remark-rehype\");;","module.exports = import(\"speech-rule-engine\");;","module.exports = import(\"to-vfile\");;","module.exports = import(\"unified\");;","module.exports = import(\"unist-util-remove\");;","module.exports = import(\"unist-util-visit\");;","module.exports = import(\"vfile\");;","module.exports = import(\"yargs\");;","module.exports = import(\"yargs/helpers\");;","module.exports = import(\"yup\");;","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(606);\n",""],"names":[],"sourceRoot":""}