name: Node.js CI

on: [push]

jobs:
  check:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest]
        node-version: [12.x]
        r-version: [release]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Node
      - name: Setup Node.js v${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ matrix.os }}-node${{ matrix.node-version }}-yarn${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ matrix.os }}-node${{ matrix.node-version }}-yarn

      - name: Install node modules
        run: yarn --frozen-lockfile --prefer-offline

      # R
      - name: Setup R v${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.r-version }}

      - name: Cache Renv packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ matrix.os }}-r${{ matrix.r-version }}-r${{ hashFiles('renv.lock') }}
          restore-keys: ${{ matrix.os }}-r${{ matrix.r-version }}-r

      - name: Install R packages
        run: |
          Rscript -e "install.packages('renv')"
          Rscript -e "renv::restore()"

      - run: yarn workspace template build
      - run: yarn check-types
      - run: yarn test

      - name: Upload artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.os }}-node${{ matrix.node-version }}-r${{ matrix.r-version }}-results
          path: check
